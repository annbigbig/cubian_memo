（持續更新中…請過幾天後再來…因為我還在整理）

o.MariaDB服務器管理基礎

大綱：
（服務器 : server daemon related）
　　　1.查看mysqld運行狀態
　　　2.啟動、重啟、停止、重載mysqld
　　　3.重要檔案及目錄的路徑

（用戶端連線 : command line client）
　　　4.使用不是很優雅的方式連入MariaDB
　　　5.使用安全的方式連入MariaDB

（用戶與權限 : users and grant permissions）
　　　6.列出目前所有資料庫用戶名稱
　　　7.查看某一位用戶的權限
　　　8.新增用戶
　　　9.給予權限
　　　10.收回權限
　　　11.刪除用戶
　　　12.變更用戶密碼

（資料庫 : databases）
　　　13.列出所有資料庫名稱
　　　14.新增資料庫
　　　15.刪除資料庫
　　　16.選定一個資料庫

（資料表 : tables）
　　　17.列出目前選定資料庫內所有資料表名稱
　　　18.新增資料表
　　　19.查看資料表結構
　　　20.刪除資料表

（欄位 : columns）
　　　21.新增欄位
　　　22.修改欄位
　　　23.刪除欄位

（記錄列 : records）
　　　24.新增記錄列
　　　25.修改記錄列
　　　26.刪除記錄列
　　　27.列出記錄列

（多表查詢 : SQL JOIN）
　　　28.產生演示所需要的兩個表格及資料
　　　29.CROSS JOIN
　　　30.INNER JOIN
　　　31.OUTER JOIN (LEFT OUTER JOIN)
　　　32.OUTER JOIN (RIGHT OUTER JOIN)
　　　33.OUTER JOIN (FULL OUTER JOIN)
　　　34.SELF JOIN

（備份及還原：backup and restore）

（抄寫 : replication from master）

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
4.使用不是很優雅的方式連入MariaDB
root@cubie:~# mysql -u root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 4
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]>

還有一種方式是連密碼一起作一次輸入
指令是
# mysql -u root -pMYPASSWORD
-p的後面緊緊貼著你的MariaDB的root用戶密碼
非常不建議這樣使用，因為很不安全
別忘了~/.bash_history裡存放著所有你曾經執行過的終端機指令

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
5.使用安全的方式連入MariaDB

直接給出終端機輸出比較快，如下
root@cubie:~# touch ./mysql_client_settings.txt
root@cubie:~# echo "[client]" >> ./mysql_client_settings.txt
root@cubie:~# echo "user = root" >> ./mysql_client_settings.txt
root@cubie:~# echo "password=root" >> ./mysql_client_settings.txt
root@cubie:~# chown root:root ./mysql_client_settings.txt
root@cubie:~# chmod 600 ./mysql_client_settings.txt
root@cubie:~# ls -al|grep setting
-rw-------  1 root root    35 12月  1 23:11 mysql_client_settings.txt
root@cubie:~# cat ./mysql_client_settings.txt
[client]
user = root
password=root
root@cubie:~# which mysql
/usr/local/mariadb/bin/mysql
root@cubie:~# mysql --defaults-file=/root/mysql_client_settings.txt
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 3
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
6.列出目前所有資料庫用戶名稱

MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.00 sec)

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> show tables;
+---------------------------+
| Tables_in_mysql           |
+---------------------------+
（這裡的輸出省略…因為不是重點）
| time_zone_transition_type |
| user                      |
+---------------------------+
30 rows in set (0.00 sec)

MariaDB [mysql]> select User,Host from user;
+------+-----------+
| User | Host      |
+------+-----------+
| root | 127.0.0.1 |
| root | ::1       |
| root | localhost |
+------+-----------+
3 rows in set (0.00 sec)

MariaDB [mysql]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
7.查看某一位用戶的權限

MariaDB [(none)]> SHOW GRANTS FOR 'root'@'localhost';
+----------------------------------------------------------------------------------------------------------------------------------------+
| Grants for root@localhost                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY PASSWORD '*81F5E21E35407D884A6CD4A731AEBFB6AF209E1B' WITH GRANT OPTION |
| GRANT PROXY ON ''@'%' TO 'root'@'localhost' WITH GRANT OPTION                                                                          |
+----------------------------------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'root'@'127.0.0.1';
+----------------------------------------------------------------------------------------------------------------------------------------+
| Grants for root@127.0.0.1                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO 'root'@'127.0.0.1' IDENTIFIED BY PASSWORD '*81F5E21E35407D884A6CD4A731AEBFB6AF209E1B' WITH GRANT OPTION |
+----------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'root'@'::1';
+----------------------------------------------------------------------------------------------------------------------------------+
| Grants for root@::1                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO 'root'@'::1' IDENTIFIED BY PASSWORD '*81F5E21E35407D884A6CD4A731AEBFB6AF209E1B' WITH GRANT OPTION |
+----------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
8.新增用戶

MariaDB [(none)]> CREATE USER 'chakra'@'%' IDENTIFIED BY 'password1111';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'tony'@'localhost' IDENTIFIED BY 'password2222';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'dgdg'@'host1.example.net' IDENTIFIED BY 'password3333';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'narudo'@'%.example.net' IDENTIFIED BY 'password4444';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'nodelasky'@'192.168.0.12' IDENTIFIED BY 'password5555';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'jojo'@'192.168.0.%' IDENTIFIED BY 'password6666';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'laravel'@'192.168.0.0/255.255.255.0' IDENTIFIED BY 'password7777';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.00 sec)

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> describe user;
+------------------------+-----------------------------------+------+-----+---------+-------+
| Field                  | Type                              | Null | Key | Default | Extra |
+------------------------+-----------------------------------+------+-----+---------+-------+
| Host                   | char(60)                          | NO   | PRI |         |       |
| User                   | char(80)                          | NO   | PRI |         |       |
| Password               | char(41)                          | NO   |     |         |       |
（這裡的輸出省略…因為不是重點）
+------------------------+-----------------------------------+------+-----+---------+-------+
44 rows in set (0.03 sec)

MariaDB [mysql]> select User,Host,Password from user;
+-----------+---------------------------+-------------------------------------------+
| User      | Host                      | Password                                  |
+-----------+---------------------------+-------------------------------------------+
| root      | localhost                 | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root      | 127.0.0.1                 | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root      | ::1                       | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| tony      | localhost                 | *739AC22A9A52BA49DFBEA94CFF72CD2EB9073422 |
| chakra    | %                         | *1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16 |
| dgdg      | host1.example.net         | *761A0433732816E7C8FA3B75988F2C7F040901AE |
| narudo    | %.example.net             | *C9227A2D81C4C9794F3D69D6E68A1042B66DF07F |
| nodelasky | 192.168.0.12              | *4D60DB4F79E0B82BA8A0F92F876EFCE34A66CE3A |
| jojo      | 192.168.0.%               | *0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E |
| laravel   | 192.168.0.0/255.255.255.0 | *C7B931A62D265417B627B6AA1DD3747A7EBE4639 |
+-----------+---------------------------+-------------------------------------------+
10 rows in set (0.01 sec)

MariaDB [mysql]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
9.給予權限

授權給 tony@localhost 最高資料庫管理權限（和root@localhost一樣大的權限）
為什麼要讓它擁有和root用戶 (MariaDB資料庫的root用戶) 一樣那麼大的權限
是因為你總不希望每次連進資料庫都是用root用戶去連（這樣很LOW又不安全）
但是你又希望有root那麼大的權限
記住這個超級使用者 tony@localhost必須先在上個步驟設定好登入密碼了

MariaDB [(none)]> SHOW GRANTS FOR 'tony'@'localhost';
+-------------------------------------------------------------------------------------------------------------+
| Grants for tony@localhost                                                                                   |
+-------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'tony'@'localhost' IDENTIFIED BY PASSWORD '*739AC22A9A52BA49DFBEA94CFF72CD2EB9073422' |
+-------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> GRANT ALL ON *.* TO 'tony'@'localhost' WITH GRANT OPTION;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'tony'@'localhost';
+----------------------------------------------------------------------------------------------------------------------------------------+
| Grants for tony@localhost                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO 'tony'@'localhost' IDENTIFIED BY PASSWORD '*739AC22A9A52BA49DFBEA94CFF72CD2EB9073422' WITH GRANT OPTION |
+----------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

第二個要授權的用戶是  jojo@192.168.0.%
讓她可以對testdb1資料庫的任何資料表作CRUD操作

MariaDB [(none)]> SHOW GRANTS FOR 'jojo'@'192.168.0.%';
+---------------------------------------------------------------------------------------------------------------+
| Grants for jojo@192.168.0.%                                                                                   |
+---------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'jojo'@'192.168.0.%' IDENTIFIED BY PASSWORD '*0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E' |
+---------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> GRANT SELECT,INSERT,UPDATE,DELETE ON testdb1.* TO 'jojo'@'192.168.0.%';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'jojo'@'192.168.0.%';
+---------------------------------------------------------------------------------------------------------------+
| Grants for jojo@192.168.0.%                                                                                   |
+---------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'jojo'@'192.168.0.%' IDENTIFIED BY PASSWORD '*0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E' |
| GRANT SELECT, INSERT, UPDATE, DELETE ON `testdb1`.* TO 'jojo'@'192.168.0.%'                                   |
+---------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

第三個要授權的用戶是 laravel@192.168.0.0/255.255.255.0
讓這個用戶可以對資料庫testdb2進行任何操作（當然包含其中所有資料表），
但是沒有辦法給其他用戶授權 （沒有 WITH GRANT OPTION）

MariaDB [(none)]> SHOW GRANTS FOR 'laravel'@'192.168.0.0/255.255.255.0';
+--------------------------------------------------------------------------------------------------------------------------------+
| Grants for laravel@192.168.0.0/255.255.255.0                                                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'laravel'@'192.168.0.0/255.255.255.0' IDENTIFIED BY PASSWORD '*C7B931A62D265417B627B6AA1DD3747A7EBE4639' |
+--------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> GRANT ALL ON testdb2.* TO 'laravel'@'192.168.0.0/255.255.255.0';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'laravel'@'192.168.0.0/255.255.255.0';
+--------------------------------------------------------------------------------------------------------------------------------+
| Grants for laravel@192.168.0.0/255.255.255.0                                                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'laravel'@'192.168.0.0/255.255.255.0' IDENTIFIED BY PASSWORD '*C7B931A62D265417B627B6AA1DD3747A7EBE4639' |
| GRANT ALL PRIVILEGES ON `testdb2`.* TO 'laravel'@'192.168.0.0/255.255.255.0'                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

第四個要授權的用戶是chakra@%
@後面的%就是表示不管是那一台主機那一個IP都可以
%是主機名稱的wildcard字元
我們授權給chakra@%這個用戶可以讀取testdb3資料庫的staff資料表（SELECT權限）
然後讓他可以再授權給其他的用戶，和自已一樣的權限（WITH GRANT OPTION）

MariaDB [(none)]> SHOW GRANTS FOR 'chakra'@'%';
+-------------------------------------------------------------------------------------------------------+
| Grants for chakra@%                                                                                   |
+-------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'chakra'@'%' IDENTIFIED BY PASSWORD '*1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16' |
+-------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> GRANT SELECT ON testdb3.staff TO 'chakra'@'%' WITH GRANT OPTION;
ERROR 1146 (42S02): Table 'testdb3.staff' doesn't exist
MariaDB [(none)]> SHOW GRANTS FOR 'chakra'@'%';
+-------------------------------------------------------------------------------------------------------+
| Grants for chakra@%                                                                                   |
+-------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'chakra'@'%' IDENTIFIED BY PASSWORD '*1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16' |
+-------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

哦哦終端機靠腰了，結果是什麼都沒有改變，
上面的訊息告訴我們，因為testdb3資料庫的staff資料表並不存在所以不能授權
話雖如此，可是前面的例子裡，testdb1、testdb2資料庫也不存在啊？？？
只是在前面我沒刻意指定一個table name而是用 * 代替所有表格名
好吧那這一次改變一下，把testdb3資料庫的所有資料表，授權讓chakra@%這個用戶有讀（SELECT）的權限，以及WITH GRANT OPTION

MariaDB [(none)]> GRANT SELECT ON testdb3.* TO 'chakra'@'%' WITH GRANT OPTION;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'chakra'@'%';
+-------------------------------------------------------------------------------------------------------+
| Grants for chakra@%                                                                                   |
+-------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'chakra'@'%' IDENTIFIED BY PASSWORD '*1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16' |
| GRANT SELECT ON `testdb3`.* TO 'chakra'@'%' WITH GRANT OPTION                                         |
+-------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

結果授權成功，然後得到一個小結論
如果資料庫testdb3不存在（當然也不存在裡面的staff資料表）
下面這一行的授權指令還是會成功
GRANT SELECT ON testdb3.* TO 'chakra'@'%' WITH GRANT OPTION;
但是下面這一行會執行失敗，和上面那一行指令差別在於：這裡完整的敘述了一個不存在資料表staff的名字
GRANT SELECT ON testdb3.staff TO 'chakra'@'%' WITH GRANT OPTION;

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.收回權限

上個步驟我們授權了四個用戶不同的權限
現在一個一個把權限給收回來
首先再次確認MariaDB目前的用戶列表

MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.01 sec)

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> show tables;
+---------------------------+
| Tables_in_mysql           |
+---------------------------+
（這裡的輸出省略…因為不是重點）
| time_zone_transition      |
| time_zone_transition_type |
| user                      |
+---------------------------+
30 rows in set (0.00 sec)

MariaDB [mysql]> describe user;
+------------------------+-----------------------------------+------+-----+---------+-------+
| Field                  | Type                              | Null | Key | Default | Extra |
+------------------------+-----------------------------------+------+-----+---------+-------+
| Host                   | char(60)                          | NO   | PRI |         |       |
| User                   | char(80)                          | NO   | PRI |         |       |
| Password               | char(41)                          | NO   |     |         |       |
| Select_priv            | enum('N','Y')                     | NO   |     | N       |       |
| Insert_priv            | enum('N','Y')                     | NO   |     | N       |       |
| Update_priv            | enum('N','Y')                     | NO   |     | N       |       |
（這裡的輸出省略…因為不是重點）
+------------------------+-----------------------------------+------+-----+---------+-------+
44 rows in set (0.03 sec)

MariaDB [mysql]> select User,Host,Password from user;
+-----------+---------------------------+-------------------------------------------+
| User      | Host                      | Password                                  |
+-----------+---------------------------+-------------------------------------------+
| root      | localhost                 | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root      | 127.0.0.1                 | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root      | ::1                       | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| tony      | localhost                 | *739AC22A9A52BA49DFBEA94CFF72CD2EB9073422 |
| chakra    | %                         | *1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16 |
| dgdg      | host1.example.net         | *761A0433732816E7C8FA3B75988F2C7F040901AE |
| narudo    | %.example.net             | *C9227A2D81C4C9794F3D69D6E68A1042B66DF07F |
| nodelasky | 192.168.0.12              | *4D60DB4F79E0B82BA8A0F92F876EFCE34A66CE3A |
| jojo      | 192.168.0.%               | *0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E |
| laravel   | 192.168.0.0/255.255.255.0 | *C7B931A62D265417B627B6AA1DD3747A7EBE4639 |
+-----------+---------------------------+-------------------------------------------+
10 rows in set (0.00 sec)

收回用戶chakra@%的權限

MariaDB [mysql]> SHOW GRANTS FOR 'chakra'@'%';
+-------------------------------------------------------------------------------------------------------+
| Grants for chakra@%                                                                                   |
+-------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'chakra'@'%' IDENTIFIED BY PASSWORD '*1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16' |
| GRANT SELECT ON `testdb3`.* TO 'chakra'@'%' WITH GRANT OPTION                                         |
+-------------------------------------------------------------------------------------------------------+
2 rows in set (0.01 sec)

MariaDB [mysql]> REVOKE SELECT,GRANT OPTION ON testdb3.* FROM 'chakra'@'%';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> SHOW GRANTS FOR 'chakra'@'%';
+-------------------------------------------------------------------------------------------------------+
| Grants for chakra@%                                                                                   |
+-------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'chakra'@'%' IDENTIFIED BY PASSWORD '*1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16' |
+-------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

收回用戶laravel@192.168.0.0/255.255.255.0的權限

MariaDB [mysql]> SHOW GRANTS FOR 'laravel'@'192.168.0.0/255.255.255.0';
+--------------------------------------------------------------------------------------------------------------------------------+
| Grants for laravel@192.168.0.0/255.255.255.0                                                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'laravel'@'192.168.0.0/255.255.255.0' IDENTIFIED BY PASSWORD '*C7B931A62D265417B627B6AA1DD3747A7EBE4639' |
| GRANT ALL PRIVILEGES ON `testdb2`.* TO 'laravel'@'192.168.0.0/255.255.255.0'                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

MariaDB [mysql]> REVOKE ALL ON testdb2.* FROM 'laravel'@'192.168.0.0/255.255.255.0';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> SHOW GRANTS FOR 'laravel'@'192.168.0.0/255.255.255.0';
+--------------------------------------------------------------------------------------------------------------------------------+
| Grants for laravel@192.168.0.0/255.255.255.0                                                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'laravel'@'192.168.0.0/255.255.255.0' IDENTIFIED BY PASSWORD '*C7B931A62D265417B627B6AA1DD3747A7EBE4639' |
+--------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

收回用戶jojo@192.168.0.%的部分權限，只收回DELETE和UPDATE

MariaDB [mysql]> SHOW GRANTS FOR 'jojo'@'192.168.0.%';
+---------------------------------------------------------------------------------------------------------------+
| Grants for jojo@192.168.0.%                                                                                   |
+---------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'jojo'@'192.168.0.%' IDENTIFIED BY PASSWORD '*0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E' |
| GRANT SELECT, INSERT, UPDATE, DELETE ON `testdb1`.* TO 'jojo'@'192.168.0.%'                                   |
+---------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

MariaDB [mysql]> REVOKE DELETE,UPDATE ON testdb1.* FROM 'jojo'@'192.168.0.%';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> SHOW GRANTS FOR 'jojo'@'192.168.0.%';
+---------------------------------------------------------------------------------------------------------------+
| Grants for jojo@192.168.0.%                                                                                   |
+---------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'jojo'@'192.168.0.%' IDENTIFIED BY PASSWORD '*0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E' |
| GRANT SELECT, INSERT ON `testdb1`.* TO 'jojo'@'192.168.0.%'                                                   |
+---------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
11.刪除用戶

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> select User,Host,Password from user;
+-----------+---------------------------+-------------------------------------------+
| User      | Host                      | Password                                  |
+-----------+---------------------------+-------------------------------------------+
| root      | localhost                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | 127.0.0.1                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | ::1                       | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| tony      | localhost                 | *5938568D06F7260E41353CAB3E9B305CAC18570C |
| chakra    | %                         | *1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16 |
| dgdg      | host1.example.net         | *761A0433732816E7C8FA3B75988F2C7F040901AE |
| narudo    | %.example.net             | *C9227A2D81C4C9794F3D69D6E68A1042B66DF07F |
| nodelasky | 192.168.0.12              | *4D60DB4F79E0B82BA8A0F92F876EFCE34A66CE3A |
| jojo      | 192.168.0.%               | *0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E |
| laravel   | 192.168.0.0/255.255.255.0 | *C7B931A62D265417B627B6AA1DD3747A7EBE4639 |
+-----------+---------------------------+-------------------------------------------+
10 rows in set (0.00 sec)

MariaDB [mysql]> DROP USER 'dgdg'@'host1.example.net';
Query OK, 0 rows affected (0.01 sec)

MariaDB [mysql]> DROP USER 'jojo'@'192.168.0.%';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> DROP USER 'chakra'@'%';
Query OK, 0 rows affected (0.01 sec)

MariaDB [mysql]> SHOW GRANTS FOR 'dgdg'@'host1.example.net';
ERROR 1141 (42000): There is no such grant defined for user 'dgdg' on host 'host1.example.net'
MariaDB [mysql]> SHOW GRANTS FOR 'jojo'@'192.168.0.%';
ERROR 1141 (42000): There is no such grant defined for user 'jojo' on host '192.168.0.%'
MariaDB [mysql]> SHOW GRANTS FOR 'chakra'@'%';
ERROR 1141 (42000): There is no such grant defined for user 'chakra' on host '%'
MariaDB [mysql]> select User,Host,Password from user;
+-----------+---------------------------+-------------------------------------------+
| User      | Host                      | Password                                  |
+-----------+---------------------------+-------------------------------------------+
| root      | localhost                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | 127.0.0.1                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | ::1                       | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| tony      | localhost                 | *5938568D06F7260E41353CAB3E9B305CAC18570C |
| narudo    | %.example.net             | *C9227A2D81C4C9794F3D69D6E68A1042B66DF07F |
| nodelasky | 192.168.0.12              | *4D60DB4F79E0B82BA8A0F92F876EFCE34A66CE3A |
| laravel   | 192.168.0.0/255.255.255.0 | *C7B931A62D265417B627B6AA1DD3747A7EBE4639 |
+-----------+---------------------------+-------------------------------------------+
7 rows in set (0.00 sec)

MariaDB [mysql]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
12.變更用戶密碼

變更用戶tony@localhost的密碼為tonypassword

MariaDB [mysql]> SET PASSWORD FOR 'tony'@'localhost' = PASSWORD('tonypassword');
Query OK, 0 rows affected (0.00 sec)

變更管理者root的密碼為rootpassword
參考資料：
https://mariadb.com/blog/how-reset-root-password-mariadb-linux
因為同時有三個用戶root@localhost、root@127.0.0.1、root@::1
所以請你這樣子變更root用戶的密碼

root@cubie:~# mysql -u root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 7
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> use mysql;
Database changed
MariaDB [mysql]> update user set password=PASSWORD("rootpassword") where User='root';
Query OK, 3 rows affected (0.01 sec)
Rows matched: 3  Changed: 3  Warnings: 0

MariaDB [mysql]> flush privileges;
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> exit
Bye
root@cubie:~# mysql -u root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 8
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
13.列出所有資料庫名稱

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.01 sec)

MariaDB [(none)]>  

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
14.新增資料庫

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.00 sec)

MariaDB [(none)]> CREATE DATABASE testdb1;
Query OK, 1 row affected (0.00 sec)

MariaDB [(none)]> CREATE DATABASE IF NOT EXISTS testdb2;
Query OK, 1 row affected (0.00 sec)

MariaDB [(none)]> CREATE DATABASE testdb3;
Query OK, 1 row affected (0.00 sec)

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
| testdb2            |
| testdb3            |
+--------------------+
6 rows in set (0.00 sec)

MariaDB [(none)]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
15.刪除資料庫

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
| testdb2            |
| testdb3            |
+--------------------+
6 rows in set (0.00 sec)

MariaDB [(none)]> DROP DATABASE testdb2;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> DROP DATABASE IF EXISTS testdb3;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
+--------------------+
4 rows in set (0.00 sec)

MariaDB [(none)]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
16.選定一個資料庫

MariaDB [(none)]> USE mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
17.列出目前選定資料庫內所有資料表名稱

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> show tables;
+---------------------------+
| Tables_in_mysql           |
+---------------------------+
| column_stats              |
| columns_priv              |
| db                        |
| event                     |
| func                      |
| general_log               |
| gtid_slave_pos            |
| help_category             |
| help_keyword              |
| help_relation             |
| help_topic                |
| host                      |
| index_stats               |
| innodb_index_stats        |
| innodb_table_stats        |
| plugin                    |
| proc                      |
| procs_priv                |
| proxies_priv              |
| roles_mapping             |
| servers                   |
| slow_log                  |
| table_stats               |
| tables_priv               |
| time_zone                 |
| time_zone_leap_second     |
| time_zone_name            |
| time_zone_transition      |
| time_zone_transition_type |
| user                      |
+---------------------------+
30 rows in set (0.00 sec)

MariaDB [mysql]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
18.新增資料表

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
+--------------------+
4 rows in set (0.00 sec)

MariaDB [(none)]> USE testdb1;
Database changed
MariaDB [testdb1]> SHOW TABLES;
Empty set (0.00 sec)

MariaDB [testdb1]> CREATE TABLE employees (
    -> id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    -> surname VARCHAR(100),
    -> givenname VARCHAR(100),
    -> pref_name VARCHAR(50),
    -> birthday DATE
    -> );
Query OK, 0 rows affected (0.30 sec)

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.00 sec)

MariaDB [testdb1]> SHOW CREATE TABLE employees\G
*************************** 1. row ***************************
       Table: employees
Create Table: CREATE TABLE `employees` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `surname` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `givenname` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `pref_name` varchar(50) COLLATE utf8_unicode_ci DEFAULT NULL,
  `birthday` date DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci
1 row in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
19.查看資料表結構

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.00 sec)

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(50)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)

MariaDB [testdb1]> 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
20.刪除資料表

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.00 sec)

MariaDB [testdb1]> DROP TABLE employees;
Query OK, 0 rows affected (0.13 sec)

MariaDB [testdb1]> SHOW TABLES;
Empty set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
21.新增欄位

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.01 sec)

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(50)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)

MariaDB [testdb1]> ALTER TABLE employees ADD username varchar(20) AFTER pref_name;
Query OK, 0 rows affected (0.95 sec)
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(50)  | YES  |     | NULL    |                |
| username  | varchar(20)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
22.修改欄位

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(50)  | YES  |     | NULL    |                |
| username  | varchar(20)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> ALTER TABLE employees MODIFY pref_name varchar(25);
Query OK, 0 rows affected (0.76 sec)               
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(25)  | YES  |     | NULL    |                |
| username  | varchar(20)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
23.刪除欄位

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(25)  | YES  |     | NULL    |                |
| username  | varchar(20)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> ALTER TABLE employees DROP username;
Query OK, 0 rows affected (0.50 sec)
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(25)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
24.新增記錄列

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.00 sec)

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(25)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
5 rows in set (0.03 sec)

MariaDB [testdb1]> SELECT * FROM employees;
Empty set (0.01 sec)

MariaDB [testdb1]> INSERT INTO employees (surname,givenname) VALUES
    -> ("Picachu","Kenny"),
    -> ("Narudo","Tony"),
    -> ("Sabastin","Landy");
Query OK, 3 rows affected (0.05 sec)
Records: 3  Duplicates: 0  Warnings: 0

MariaDB [testdb1]> INSERT INTO employees (pref_name,givenname,surname,birthday) VALUES ("Chakura","Chakura Bom","Charky","1975-02-03");
Query OK, 1 row affected (0.04 sec)

MariaDB [testdb1]> INSERT employees (surname) VALUE ("RcLond");
Query OK, 1 row affected (0.04 sec)

MariaDB [testdb1]> INSERT INTO employees VALUES (NULL,"Duran","Jin-Duran",NULL,NULL);
Query OK, 1 row affected (0.05 sec)

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | NULL      | NULL       |
|  2 | Narudo   | Tony        | NULL      | NULL       |
|  3 | Sabastin | Landy       | NULL      | NULL       |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
|  6 | Duran    | Jin-Duran   | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
25.修改記錄列

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | NULL      | NULL       |
|  2 | Narudo   | Tony        | NULL      | NULL       |
|  3 | Sabastin | Landy       | NULL      | NULL       |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
|  6 | Duran    | Jin-Duran   | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> UPDATE employees SET pref_name = "Pika Pika", birthday = "1950-11-23"
    -> WHERE surname = "Picachu" and givenname = "Kenny";
Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [testdb1]> UPDATE employees SET
    -> pref_name = "Utsumaki", birthday = "1990-03-15"
    -> WHERE surname = "Narudo";
Query OK, 1 row affected (0.10 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [testdb1]> UPDATE employees SET
    -> birthday = "1966-04-12"
    -> WHERE surname = "Sabastin";
Query OK, 1 row affected (0.03 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | Pika Pika | 1950-11-23 |
|  2 | Narudo   | Tony        | Utsumaki  | 1990-03-15 |
|  3 | Sabastin | Landy       | NULL      | 1966-04-12 |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
|  6 | Duran    | Jin-Duran   | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
26.刪除記錄列

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | Pika Pika | 1950-11-23 |
|  2 | Narudo   | Tony        | Utsumaki  | 1990-03-15 |
|  3 | Sabastin | Landy       | NULL      | 1966-04-12 |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
|  6 | Duran    | Jin-Duran   | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> DELETE FROM employees WHERE id = 6;
Query OK, 1 row affected (0.05 sec)

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | Pika Pika | 1950-11-23 |
|  2 | Narudo   | Tony        | Utsumaki  | 1990-03-15 |
|  3 | Sabastin | Landy       | NULL      | 1966-04-12 |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
5 rows in set (0.00 sec)

MariaDB [testdb1]> 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
27.列出記錄列

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.01 sec)

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | Pika Pika | 1950-11-23 |
|  2 | Narudo   | Tony        | Utsumaki  | 1990-03-15 |
|  3 | Sabastin | Landy       | NULL      | 1966-04-12 |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
5 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT id,pref_name,surname FROM employees;
+----+-----------+----------+
| id | pref_name | surname  |
+----+-----------+----------+
|  1 | Pika Pika | Picachu  |
|  2 | Utsumaki  | Narudo   |
|  3 | NULL      | Sabastin |
|  4 | Chakura   | Charky   |
|  5 | NULL      | RcLond   |
+----+-----------+----------+
5 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employees WHERE birthday > '1970-01-01';
+----+---------+-------------+-----------+------------+
| id | surname | givenname   | pref_name | birthday   |
+----+---------+-------------+-----------+------------+
|  2 | Narudo  | Tony        | Utsumaki  | 1990-03-15 |
|  4 | Charky  | Chakura Bom | Chakura   | 1975-02-03 |
+----+---------+-------------+-----------+------------+
2 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employees ORDER BY surname;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  2 | Narudo   | Tony        | Utsumaki  | 1990-03-15 |
|  1 | Picachu  | Kenny       | Pika Pika | 1950-11-23 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
|  3 | Sabastin | Landy       | NULL      | 1966-04-12 |
+----+----------+-------------+-----------+------------+
5 rows in set (0.01 sec)

MariaDB [testdb1]> SELECT * FROM employees WHERE surname LIKE "Pic%";
+----+---------+-----------+-----------+------------+
| id | surname | givenname | pref_name | birthday   |
+----+---------+-----------+-----------+------------+
|  1 | Picachu | Kenny     | Pika Pika | 1950-11-23 |
+----+---------+-----------+-----------+------------+
1 row in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
28.產生演示所需要的兩個表格及資料

參考資料
http://en.wikipedia.org/wiki/Join_%28SQL%29
http://stackoverflow.com/questions/5152921/import-sql-file-from-mysql-console

root@cubie:~# pwd
/root
root@cubie:~# ls
example.sql  mysql_client_settings.txt	sunxi-tools  vncpasswd
root@cubie:~# cat ./example.sql
CREATE TABLE department
(
 DepartmentID INT,
 DepartmentName VARCHAR(20)
);
 
CREATE TABLE employee
(
 LastName VARCHAR(20),
 DepartmentID INT
);
 
INSERT INTO department VALUES(31, 'Sales');
INSERT INTO department VALUES(33, 'Engineering');
INSERT INTO department VALUES(34, 'Clerical');
INSERT INTO department VALUES(35, 'Marketing');
 
INSERT INTO employee VALUES('Rafferty', 31);
INSERT INTO employee VALUES('Jones', 33);
INSERT INTO employee VALUES('Heisenberg', 33);
INSERT INTO employee VALUES('Robinson', 34);
INSERT INTO employee VALUES('Smith', 34);
INSERT INTO employee VALUES('Williams', NULL);
root@cubie:~# which mysql
/usr/local/mariadb/bin/mysql
root@cubie:~# mysql --defaults-file=./mysql_client_settings.txt
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 4
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
+--------------------+
4 rows in set (0.00 sec)

MariaDB [(none)]> use testdb1;
Database changed
MariaDB [testdb1]> SHOW TABLES;
Empty set (0.01 sec)

MariaDB [testdb1]> SOURCE /root/example.sql;
Query OK, 0 rows affected (0.34 sec)

Query OK, 0 rows affected (0.30 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.13 sec)

Query OK, 1 row affected (0.05 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.05 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.05 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.05 sec)

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| department        |
| employee          |
+-------------------+
2 rows in set (0.01 sec)

MariaDB [testdb1]> SELECT * FROM department;
+--------------+----------------+
| DepartmentID | DepartmentName |
+--------------+----------------+
|           31 | Sales          |
|           33 | Engineering    |
|           34 | Clerical       |
|           35 | Marketing      |
+--------------+----------------+
4 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employee;
+------------+--------------+
| LastName   | DepartmentID |
+------------+--------------+
| Rafferty   |           31 |
| Jones      |           33 |
| Heisenberg |           33 |
| Robinson   |           34 |
| Smith      |           34 |
| Williams   |         NULL |
+------------+--------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> DESCRIBE department;
+----------------+-------------+------+-----+---------+-------+
| Field          | Type        | Null | Key | Default | Extra |
+----------------+-------------+------+-----+---------+-------+
| DepartmentID   | int(11)     | YES  |     | NULL    |       |
| DepartmentName | varchar(20) | YES  |     | NULL    |       |
+----------------+-------------+------+-----+---------+-------+
2 rows in set (0.03 sec)

MariaDB [testdb1]> DESCRIBE employee;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| LastName     | varchar(20) | YES  |     | NULL    |       |
| DepartmentID | int(11)     | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
2 rows in set (0.00 sec)

MariaDB [testdb1]> 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
29.CROSS JOIN

CROSS JOIN產生的結果為Cartesian product（中譯：笛卡兒乘積）
關於笛卡兒乘積的說明可在這裡了解意義
http://zh.wikipedia.org/wiki/%E7%AC%9B%E5%8D%A1%E5%84%BF%E7%A7%AF
維基百科的此頁面有個簡單的解釋，集合X是 { A,K,Q,J,10,9,8,7,6,5,4,3,2 }
而集合Y是 { 黑桃、紅心、方塊、梅花 }，則集合X與集合Y的笛卡兒乘積是一副標準樸克牌的52個元素的集合
{ (A,黑桃),(K,黑桃),(Q,黑桃),(J,黑桃),.......(4,梅花),(3,梅花),(2,梅花) }
有點像以前中學數學裡學過的多項式乘法 (a+b)(c+d) = ac + ad + bc + bd 的概念

MariaDB [testdb1]> SELECT * FROM department;
+--------------+----------------+
| DepartmentID | DepartmentName |
+--------------+----------------+
|           31 | Sales          |
|           33 | Engineering    |
|           34 | Clerical       |
|           35 | Marketing      |
+--------------+----------------+
4 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employee;
+------------+--------------+
| LastName   | DepartmentID |
+------------+--------------+
| Rafferty   |           31 |
| Jones      |           33 |
| Heisenberg |           33 |
| Robinson   |           34 |
| Smith      |           34 |
| Williams   |         NULL |
+------------+--------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employee CROSS JOIN department;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Rafferty   |           31 |           33 | Engineering    |
| Rafferty   |           31 |           34 | Clerical       |
| Rafferty   |           31 |           35 | Marketing      |
| Jones      |           33 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Jones      |           33 |           34 | Clerical       |
| Jones      |           33 |           35 | Marketing      |
| Heisenberg |           33 |           31 | Sales          |
| Heisenberg |           33 |           33 | Engineering    |
| Heisenberg |           33 |           34 | Clerical       |
| Heisenberg |           33 |           35 | Marketing      |
| Robinson   |           34 |           31 | Sales          |
| Robinson   |           34 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Robinson   |           34 |           35 | Marketing      |
| Smith      |           34 |           31 | Sales          |
| Smith      |           34 |           33 | Engineering    |
| Smith      |           34 |           34 | Clerical       |
| Smith      |           34 |           35 | Marketing      |
| Williams   |         NULL |           31 | Sales          |
| Williams   |         NULL |           33 | Engineering    |
| Williams   |         NULL |           34 | Clerical       |
| Williams   |         NULL |           35 | Marketing      |
+------------+--------------+--------------+----------------+
24 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employee,department;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Rafferty   |           31 |           33 | Engineering    |
| Rafferty   |           31 |           34 | Clerical       |
| Rafferty   |           31 |           35 | Marketing      |
| Jones      |           33 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Jones      |           33 |           34 | Clerical       |
| Jones      |           33 |           35 | Marketing      |
| Heisenberg |           33 |           31 | Sales          |
| Heisenberg |           33 |           33 | Engineering    |
| Heisenberg |           33 |           34 | Clerical       |
| Heisenberg |           33 |           35 | Marketing      |
| Robinson   |           34 |           31 | Sales          |
| Robinson   |           34 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Robinson   |           34 |           35 | Marketing      |
| Smith      |           34 |           31 | Sales          |
| Smith      |           34 |           33 | Engineering    |
| Smith      |           34 |           34 | Clerical       |
| Smith      |           34 |           35 | Marketing      |
| Williams   |         NULL |           31 | Sales          |
| Williams   |         NULL |           33 | Engineering    |
| Williams   |         NULL |           34 | Clerical       |
| Williams   |         NULL |           35 | Marketing      |
+------------+--------------+--------------+----------------+
24 rows in set (0.00 sec)

MariaDB [testdb1]>

值得注意的是，上面的兩行SQL指令
SELECT * FROM employee CROSS JOIN department;
SELECT * FROM employee,department;
產生了相同的結果
第一句有顯式指定CROSS JOIN關鍵字
第二句雖然沒有寫出CROSS JOIN關鍵字，但是執行結果和前面第一句有強調CROSS JOIN是一樣的
指令產生的結果表格都是employee表格和department表格的笛卡兒乘積

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
30.INNER JOIN
兩個參與JOIN的表格，裡面分別要有一個欄位的值，是兜得起來的，才會被選為結果表的記錄列
我懷疑我有點語言障礙，我想說得更清楚但沒辦法，看實際操作好了

顯式用法
MariaDB [testdb1]> SELECT * FROM employee INNER JOIN department ON employee.DepartmentID = department.DepartmentID;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Heisenberg |           33 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Smith      |           34 |           34 | Clerical       |
+------------+--------------+--------------+----------------+
5 rows in set (0.00 sec)

MariaDB [testdb1]>

隱式用法
MariaDB [testdb1]> SELECT * FROM employee,department WHERE employee.DepartmentID = department.DepartmentID;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Heisenberg |           33 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Smith      |           34 |           34 | Clerical       |
+------------+--------------+--------------+----------------+
5 rows in set (0.00 sec)

SQL-92規範的用法
注意在兩個表格裡用來JOIN的那個欄位必需有同樣的名稱（在這裡是DepartmentID）
還有仔細觀察INNER JOIN運算後輸出的result set只有三個欄位，
和上面兩個用法所產生的result set不同
這個SQL指令只產生了一個DepartmentID欄位

MariaDB [testdb1]> SELECT * FROM employee INNER JOIN department USING(DepartmentID);
+--------------+------------+----------------+
| DepartmentID | LastName   | DepartmentName |
+--------------+------------+----------------+
|           31 | Rafferty   | Sales          |
|           33 | Jones      | Engineering    |
|           33 | Heisenberg | Engineering    |
|           34 | Robinson   | Clerical       |
|           34 | Smith      | Clerical       |
+--------------+------------+----------------+
5 rows in set (0.01 sec)

Natural join用法
（資料庫專家們不建議使用此方法，不顯式指定連接欄位的情況下，你有可能不小心使用了不想使用的欄位作連接）
和上面SQL-92用法相同，一樣是參與INNER JOIN的兩個表格要有同樣名稱的欄位（DepartmentID）當作連接兩個表的欄位
和SQL-92用法只有指令寫法上的差異，另外不必再顯式指定那個連接欄位DepartmentID（這就是它危險之處，由資料庫自行認定連接欄位）
這個指令會自動比對兩個參加INNER JOIN運算的表格，找出相同名稱的欄位，自動當作連接兩個表的欄位
如果參加INNER JOIN運算的兩個表格沒有共同名稱的欄位，則會執行CROSS JOIN

MariaDB [testdb1]> SELECT * FROM employee NATURAL JOIN department;
+--------------+------------+----------------+
| DepartmentID | LastName   | DepartmentName |
+--------------+------------+----------------+
|           31 | Rafferty   | Sales          |
|           33 | Jones      | Engineering    |
|           33 | Heisenberg | Engineering    |
|           34 | Robinson   | Clerical       |
|           34 | Smith      | Clerical       |
+--------------+------------+----------------+
5 rows in set (0.00 sec)

MariaDB [testdb1]> 

還有特別注意在employee表格裡的Williams那一個員工
還有在department表格裡的Marketing這個部門
完全沒有出現在上面的INNER JOIN結果表格中（無論是顯式或是隱式用法或SQL-92用法或Natural Join用法）
這是因為員工Williams沒有DepartmentID
而Marketing部門也沒有擁有任何員工（沒有任何DepartmentID為35的員工記錄存在）
就如同前面我所說的，參與INNER JOIN運算的兩個表格裡
分別要有一個欄位的值（在這裡是DepartmentID）要一樣
才會被選進結果表的記錄列裡
在寫程式的時候要注意INNER JOIN和OUTER JOIN所產生的結果表有著微妙的差異
不然可能會寫出有bug的程式

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
31.OUTER JOIN (LEFT OUTER JOIN)

剛才在上面INNER JOIN運算的時候，我們發現了在兩個參加運算的表格中
只要是連接欄位（DepartmentID）為NULL的員工記錄，像是Williams
或是沒有任何員工存在的部門記錄，像是DepartmentID欄位值為35的Marketing部門
都不會出現在運算結果的result set裡
那麼如果我們一定要運算結果result set裡面有所有員工記錄，不管那個員工有沒有被分類到某個部門
（可能是第一天進公司報到的菜鳥，所以還沒有給他決定編制在那個部門）
又或者反過來，我們一定要運算結果result set裡面必須有所有的部門記錄，不管這個部門裡面有沒有實質在工作的員工
（可能是老板今天剛想到要成立品質保證部門，但是還沒有想到新部門裡面要有那些員工）
又或者是我們希望無論如何，運算結果的result set都會有所有的員工和部門存在
這個時候就要用到OUTER JOIN
而OUTER JOIN可以再細分為只完整保存其中一個表格所有記錄列的LEFT OUTER JOIN和RIGHT OUTER JOIN
還有無論如何運算結果都要保存兩個表格所有記錄列的FULL OUTER JOIN

嘴砲打完了，現在先來看LEFT OUTER JOIN
這個例子指定要完整保留所有員工記錄

MariaDB [testdb1]> SELECT * FROM employee LEFT OUTER JOIN department ON employee.DepartmentID = department.DepartmentID;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Heisenberg |           33 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Smith      |           34 |           34 | Clerical       |
| Williams   |         NULL |         NULL | NULL           |
+------------+--------------+--------------+----------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

而下面這個例子指定要完整保留所有部門記錄

MariaDB [testdb1]> SELECT * FROM department LEFT OUTER JOIN employee ON department.DepartmentID = employee.DepartmentId;
+--------------+----------------+------------+--------------+
| DepartmentID | DepartmentName | LastName   | DepartmentID |
+--------------+----------------+------------+--------------+
|           31 | Sales          | Rafferty   |           31 |
|           33 | Engineering    | Jones      |           33 |
|           33 | Engineering    | Heisenberg |           33 |
|           34 | Clerical       | Robinson   |           34 |
|           34 | Clerical       | Smith      |           34 |
|           35 | Marketing      | NULL       |         NULL |
+--------------+----------------+------------+--------------+
6 rows in set (0.01 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
32.OUTER JOIN (RIGHT OUTER JOIN)

對，你發現了，LEFT OUTER JOIN和RIGHT OUTER JOIN只是方向不同
下指令的時候，要保留的那個表格的位置是互相反過來的
其他沒什麼不同，所以相較於前一個步驟，如果我們要運算結果完整保留所有的員工記錄，
使用RIGHT OUTER JOIN我們就這樣子下指令：

MariaDB [testdb1]> SELECT * FROM department RIGHT OUTER JOIN employee ON employee.DepartmentID = department.DepartmentID;
+--------------+----------------+------------+--------------+
| DepartmentID | DepartmentName | LastName   | DepartmentID |
+--------------+----------------+------------+--------------+
|           31 | Sales          | Rafferty   |           31 |
|           33 | Engineering    | Jones      |           33 |
|           33 | Engineering    | Heisenberg |           33 |
|           34 | Clerical       | Robinson   |           34 |
|           34 | Clerical       | Smith      |           34 |
|         NULL | NULL           | Williams   |         NULL |
+--------------+----------------+------------+--------------+
6 rows in set (0.01 sec)

MariaDB [testdb1]>

那如果要保留的是所有的部門記錄呢？就這樣子下指令

MariaDB [testdb1]> SELECT * FROM employee RIGHT OUTER JOIN department ON employee.DepartmentID = department.DepartmentID;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Heisenberg |           33 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Smith      |           34 |           34 | Clerical       |
| NULL       |         NULL |           35 | Marketing      |
+------------+--------------+--------------+----------------+
6 rows in set (0.01 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
33.OUTER JOIN (FULL OUTER JOIN)

上面講的LEFT OUTER JOIN和RIGHT OUTER JOIN都只保證其中一個表格的記錄列一定會完整出現
啊我如果兩個表格裡所有的記錄列，都至少要在運算結果的result set裡出現一次呢？
然後我很快樂的執行了

MariaDB [testdb1]> SELECT * FROM employee FULL OUTER JOIN department ON employee.DepartmentID = department.DepartmentID;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'OUTER JOIN department ON employee.DepartmentID = department.DepartmentID' at line 1
MariaDB [testdb1]> 

好慘，看來是MariaDB不支援FULL OUTER JOIN語法的樣子
有其他辦法可以得到FULL OUTER JOIN的運算結果嗎？

應該有，在得到FULL OUTER JOIN的運算結果之前
請你作一件事，用union and intersection當作關鍵字
然後使用Google的圖片搜尋，這樣你會立刻了解union和intersection的差別
現在我假設你已經知道兩者的差異
那麼在這裡我假設們所求的FULL OUTER JOIN的運算結果是F
LEFT OUTER JOIN的運算結果是L
RIGHT OUTER JOIN的運算結果是R
那麼
F = L UNION R

這裡說些看起來毫無關係，卻又好像有關係的事情
我突然想到一個應該算是數學題的問題
有一個爸爸有10個小孩，其中7個數學及格，7個英文及格
這個時候爸爸說了：如果你們其中有人數學和英文兩個科目都沒有及格
那麼我就不發下個月的零用錢給這個不用功的孩子
那麼請問這個爸爸下個月有可能要發給幾個孩子零用錢？
答案是：7個或是8個或是9個或是10個孩子全發
那麼為什麼？這和我們想知道的FULL OUTER JOIN的運算結果有關係嗎？

Min:7個人
領得到零用錢的孩子●●●●●●●○○○
　英　文　及　格　●●●●●●●○○○
　數　學　及　格　●●●●●●●○○○

Max:10個人
領得到零用錢的孩子●●●●●●●●●●
　英　文　及　格　●●●●●●●○○○
　數　學　及　格　○○○●●●●●●●

我覺得這兩個概念很像，所以順便寫在這裡，
我們直接來看在MariaDB裡，在不能直接支援FULL OUTER JOIN語法的情況下
要怎麼產生結果同樣的result set比較直接

MariaDB [testdb1]> SELECT * FROM employee LEFT OUTER JOIN department ON employee.DepartmentID = department.DepartmentID
    -> UNION
    -> SELECT * FROM employee RIGHT OUTER JOIN department ON employee.DepartmentID = department.DepartmentID;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Heisenberg |           33 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Smith      |           34 |           34 | Clerical       |
| Williams   |         NULL |         NULL | NULL           |
| NULL       |         NULL |           35 | Marketing      |
+------------+--------------+--------------+----------------+
7 rows in set (0.00 sec)

MariaDB [testdb1]>

即使MariaDB不支援FULL OUTER JOIN的語法
我們還是可以利用UNION的概念，運算出FULL OUTER JOIN應該有的結果result set
就是SQL指令寫長一點，感覺不是很優雅而已

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
