（持續更新中…）

o.MariaDB服務器管理基礎

大綱：
（服務器 : server daemon related）
　　　1.查看mysqld運行狀態
　　　2.啟動、重啟、停止、重載mysqld、設定檔語法測試
　　　3.重要檔案及目錄的路徑
　　　4.啟用binary log並檢視它
　　　5.utf8問題

（用戶端連線 : command line client & GUI tool）
　　　6.使用不是很優雅的方式連入MariaDB
　　　7.使用安全的方式連入MariaDB
　　　8.使用MySQL Workbench連入MariaDB

（用戶與權限 : users and grant permissions）
　　　9.列出目前所有資料庫用戶名稱
　　　10.查看某一位用戶的權限
　　　11.新增用戶
　　　12.給予權限
　　　13.收回權限
　　　14.刪除用戶
　　　15.變更用戶密碼

（資料庫 : databases）
　　　16.列出所有資料庫名稱
　　　17.新增資料庫
　　　18.刪除資料庫
　　　19.選定一個資料庫

（資料表 : tables）
　　　20.列出目前選定資料庫內所有資料表名稱
　　　21.新增資料表
　　　22.查看資料表結構
　　　23.刪除資料表

（欄位 : columns）
　　　24.新增欄位
　　　25.修改欄位
　　　26.刪除欄位

（記錄列 : records）
　　　27.新增記錄列
　　　28.修改記錄列
　　　29.刪除記錄列
　　　30.列出記錄列

（多表查詢 : SQL JOIN）
　　　31.產生演示所需要的兩個表格及資料
　　　32.CROSS JOIN
　　　33.INNER JOIN
　　　34.OUTER JOIN (LEFT OUTER JOIN)
　　　35.OUTER JOIN (RIGHT OUTER JOIN)
　　　36.OUTER JOIN (FULL OUTER JOIN)
　　　37.產生演示SELF JOIN所需要的一個表格及資料
　　　38.SELF JOIN

（備份及還原：backup and restore）

（抄寫 : replication from master）

（關於那些我沒寫進來的東西：）

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
1.查看mysqld運行狀態

root@cubie:~# service mysql status
[ ok ] MySQL running (2288).
root@cubie:~# netstat -anp|grep mysql
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      2288/mysqld     
unix  2      [ ACC ]     STREAM     LISTENING     2961     2288/mysqld         /run/mysqld/mysqld.sock
root@cubie:~# ps aux |grep mysql
root      2047  0.0  0.0   1336   484 ?        S    14:52   0:00 /bin/sh /usr/local/mariadb-10.0.14/bin/mysqld_safe --datadir=/srv/mysql --pid-file=/srv/mysql/cubie.pid
mysql     2288  0.0  2.3 500032 47188 ?        Sl   14:52   0:16 /usr/local/mariadb-10.0.14/sbin/mysqld --basedir=/usr/local/mariadb-10.0.14 --datadir=/srv/mysql --plugin-dir=/usr/local/mariadb-10.0.14/lib/mysql/plugin --user=mysql --log-error=/srv/mysql/cubie.err --pid-file=/srv/mysql/cubie.pid --socket=/run/mysqld/mysqld.sock --port=3306
root     29210  0.0  0.0   4032   772 pts/0    S+   20:15   0:00 grep mysql
root@cubie:~#

由以上的終端機輸出訊息可以得知
mysqld以pid 2288運行於本機地址127.0.0.1端口3306

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
2.啟動、重啟、停止、重載mysqld、設定檔語法測試

可以這樣
# service mysql start
# service mysql restart
# service mysql stop
# service mysql reload
# service mysql configtest

或是這樣
# /etc/init.d/mysql start
# /etc/init.d/mysql restart
# /etc/init.d/mysql stop
# /etc/init.d/mysql reload
# /etc/init.d/mysql configtest

終端機輸出就不放上了

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
3.重要檔案及目錄的路徑

安裝目錄
/usr/local/mariadb-10.0.14

Symbolic Link指向上面的安裝目錄
/usr/local/mariadb
（如果將來昇級到10.0.16版，可以指向新的/usr/local/mariadb-10.0.16目錄，而與舊版和平共存）

如果以後有什麼指令問你--basedir在那裡，那麼回答上面兩個路徑的任何一個都可以
而--datadir是系統放置所有資料庫的目錄，在/srv/mysql

========== 設定檔/etc/my.cnf及裡面值得關注的設定值 begin here ==========

如果要mysqld運行於不同的IP或是TCP port
就修改/etc/my.cnf設定檔裡的
bind-address    = 127.0.0.1
port            = 3306

在/etc/my.cnf的[mysqld]區塊
還可以設定log檔的位置，包括

log_error的設定如果完全沒有出現在/etc/my.cnf裡
記錄檔預設還是會寫在/srv/mysql/<HOSTNAME>.err
這個log檔是關不掉的，如果MariaDB服務器有什麼問題
你第一個該看的就是這個檔案
log_error = /srv/mysql/error.log

這個是general_log，沒什麼事的話不用打開
它比binary log更囉嗦，就算沒有更新資料庫裡的任何記錄列
只是SELECT資料，general_log一樣會忠實記錄下來
打開它的原因，是為了優化資料庫的效能
庇如分析每天的general_log看看是不是有同樣的SELECT query一直重複被執行
如果是這樣，那麼那一條重複的SELECT產生的結果
是不是考慮要放到cache裡，然後設個expire time例如60秒之內都讓用戶去讀快取裡的資料，別來煩MariaDB服務器
general_log = 1
general_log_file = /srv/mysql/general.log

然後這個是slow log的設定
如果某個query會超過我這裡設定的時間0.05秒，那麼我就當它是個龜速的query
請記錄下來，但是我又擔心重複的記錄太多，很快就把硬碟塞爆
所以我在這裡設定同樣的記錄只記錄30分之1，每30條同樣的記1條就夠了
最後一個log_slow_verbosity是設定要記錄下什麼資訊
slow_query_log=1
slow_query_log_file=/srv/mysql/mariadb-slow.log
long_query_time=0.05
log_slow_rate_limit=30
log_slow_verbosity=query_plan,innodb,explain

========== 設定檔/etc/my.cnf及裡面值得關注的設定值 end here ==========

init script啟動腳本的路徑
/etc/init.d/mysql

編譯時留下的
/usr/local/src/mariadb-10.0.14/support-files目錄裡
有一些官方的像是my-huge.cnf、my-large.cnf、my-medium.cnf這些設定檔可以參考

pid檔路徑
/srv/mysql/<HOSTNAME>.pid

socket檔路徑
/run/mysqld/mysqld.sock

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
4.啟用binary log並檢視它

啟用binary log的設定一樣放在/etc/my.cnf設定檔裡
要寫在[mysqld]區塊裡
只有一行
log_bin = /srv/mysql/mariadb-binary-logs

啟動MariaDB服務器之後
這些binary logs檔案會被存成
/srv/mysql/mariadb-binary-logs.000001
/srv/mysql/mariadb-binary-logs.000002
/srv/mysql/mariadb-binary-logs.000003
這樣子的binary檔案，檔案後面的六位數的數字會一直累加，數字愈大是愈新的記錄檔
如果要查看它們的內容，不能使用vi文字編輯器
因為它們是二進制檔
所以請這樣查看它們

root@cubie:/srv/mysql# pwd
/srv/mysql
root@cubie:/srv/mysql# ls -al|grep binary
-rw-rw---- 1 mysql mysql      341 12月 10 18:00 mariadb-binary-logs.000001
-rw-rw---- 1 mysql mysql      341 12月 10 18:36 mariadb-binary-logs.000002
-rw-rw---- 1 mysql mysql      322 12月 10 23:30 mariadb-binary-logs.000003
-rw-rw---- 1 mysql mysql      114 12月 10 23:30 mariadb-binary-logs.index
root@cubie:/srv/mysql# which mysqlbinlog
/usr/local/mariadb/bin/mysqlbinlog
root@cubie:/srv/mysql# mysqlbinlog ./mariadb-binary-logs.000003
/*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=1*/;
/*!40019 SET @@session.max_insert_delayed_threads=0*/;
/*!50003 SET @OLD_COMPLETION_TYPE=@@COMPLETION_TYPE,COMPLETION_TYPE=0*/;
DELIMITER /*!*/;
# at 4
#141210 23:30:01 server id 1  end_log_pos 248 	Start: binlog v 4, server v 10.0.14-MariaDB-log created 141210 23:30:01 at startup
# Warning: this binlog is either in use or was not closed properly.
ROLLBACK/*!*/;
BINLOG '
+WaIVA8BAAAA9AAAAPgAAAABAAQAMTAuMC4xNC1NYXJpYURCLWxvZwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAD5ZohUEzgNAAgAEgAEBAQEEgAA3AAEGggAAAAICAgCAAAACgoKAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAEEwQAFOdI7g==
'/*!*/;
# at 248
#141210 23:30:01 server id 1  end_log_pos 273 	Gtid list []
# at 273
#141210 23:30:01 server id 1  end_log_pos 322 	Binlog checkpoint mariadb-binary-logs.000003
DELIMITER ;
# End of log file
ROLLBACK /* added by mysqlbinlog */;
/*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/;
/*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=0*/;
root@cubie:/srv/mysql#

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
5.utf8問題

參考資料：
http://outofcontrol.ca/blog/comments/change-mysql-5.5-default-character-set-to-utf8

如果你是一步步照著我寫的筆記操作
現在MariaDB服務器的預設編碼方式就是utf8
相關設定在/etc/my.cnf設定檔的[mysqld]區塊裡
以下這幾行設定就是關鍵
[mysqld]
#
# --- (some other settings) ---

# --- utf8 settings begin ---
init_connect=‘SET collation_connection = utf8_unicode_ci’
init_connect=‘SET NAMES utf8’
character-set-server=utf8
collation-server=utf8_unicode_ci
skip-character-set-client-handshake
# --- utf8 settings end ---

# --- (some other settings) ---

我們實際查看一下現在的編碼
MariaDB [(none)]> SHOW VARIABLES LIKE '%character%';
+--------------------------+--------------------------------------------------+
| Variable_name            | Value                                            |
+--------------------------+--------------------------------------------------+
| character_set_client     | utf8                                             |
| character_set_connection | utf8                                             |
| character_set_database   | utf8                                             |
| character_set_filesystem | binary                                           |
| character_set_results    | utf8                                             |
| character_set_server     | utf8                                             |
| character_set_system     | utf8                                             |
| character_sets_dir       | /usr/local/mariadb-10.0.14/share/mysql/charsets/ |
+--------------------------+--------------------------------------------------+
8 rows in set (0.00 sec)

MariaDB [(none)]> SHOW VARIABLES LIKE '%collation%';
+----------------------+-----------------+
| Variable_name        | Value           |
+----------------------+-----------------+
| collation_connection | utf8_unicode_ci |
| collation_database   | utf8_unicode_ci |
| collation_server     | utf8_unicode_ci |
+----------------------+-----------------+
3 rows in set (0.00 sec)

MariaDB [(none)]>

都是utf8，很好很好

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

6.使用不是很優雅的方式連入MariaDB
root@cubie:~# mysql -u root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 4
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]>

還有一種方式是連密碼一起作一次輸入
指令是
# mysql -u root -pMYPASSWORD
-p的後面緊緊貼著你的MariaDB的root用戶密碼
非常不建議這樣使用，因為很不安全
別忘了~/.bash_history裡存放著所有你曾經執行過的終端機指令

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
7.使用安全的方式連入MariaDB

直接給出終端機輸出比較快，如下
root@cubie:~# touch ./mysql_client_settings.txt
root@cubie:~# echo "[client]" >> ./mysql_client_settings.txt
root@cubie:~# echo "user = root" >> ./mysql_client_settings.txt
root@cubie:~# echo "password=root" >> ./mysql_client_settings.txt
root@cubie:~# chown root:root ./mysql_client_settings.txt
root@cubie:~# chmod 600 ./mysql_client_settings.txt
root@cubie:~# ls -al|grep setting
-rw-------  1 root root    35 12月  1 23:11 mysql_client_settings.txt
root@cubie:~# cat ./mysql_client_settings.txt
[client]
user = root
password=root
root@cubie:~# which mysql
/usr/local/mariadb/bin/mysql
root@cubie:~# mysql --defaults-file=/root/mysql_client_settings.txt
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 3
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
8.使用MySQL Workbench連入MariaDB

雖然在command line client的文字模式下，幾乎就可以應付所有的資料庫管理情況
但是也許有人會喜歡在GUI圖形介面的MySQL Workbench裡面來執行日常工作
這裡我們先把MySQL Workbench安裝起來
不過這裡我要先說明，我是在X86-64的筆記型電腦上安裝MySQL Workbench的
因為MySQL官網提供的Ubuntu/Debian發行版的.deb安裝檔只能在X86-64的機器上安裝
在我的Lenovo B590筆記型電腦上，執行
# uname -a
終端機會回應
Linux anntony-Lenovo-B590 3.13.0-24-generic #47-Ubuntu SMP Fri May 2 23:30:00 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux
然後在CubieTruck上執行
# uname -a
終端機回應的是
Linux cubie 3.4.79-sun7i #14 SMP PREEMPT Thu Jul 3 06:39:51 CST 2014 armv7l GNU/Linux

上面的終端機訊息很清楚，筆記型電腦是X86-64架構，CubieTruck當然是Armv7架構
所以MySQL官網提供下載的那個mysql-workbench-community-6.2.4-1ubu1404-amd64.deb
只能安裝在X86-64的機器上（我的筆記型電腦），了解之後請到MySQL官網下載這個.deb檔案

http://dev.mysql.com/downloads/workbench/

我的筆記型電腦是Linux Mint 17，一樣是使用Ubuntu 14.04的apt庫
安裝MySQL workbench之前，必須先裝上依賴套件，在筆記型電腦上登入之後，切換到root身分，再執行
# apt-get install libctemplate2 libpcrecpp0

接下來就可以安裝剛才下載的deb包了
# cd /home/anntony/下載
# dpkg -i ./mysql-workbench-community-6.2.4-1ubu1404-amd64.deb

安裝完成之後，可以在桌面左下的Menu > 軟體開發 > MySQL Workbench找到它
在打開MySQL Workbench之前，請先在MariaDB服務器這裡
新增tony@127.0.0.1這個用戶，並將他變成超級使用者
（請參考本筆記的步驟11.新增用戶和步驟12.給予權限，這裡不再重複寫一樣的事）

進入MySQL Workbench之後，可以在最上面的功能選單的Database > Manage Connections...
然後跳出了Manage Server Connections對話框，
在這裡可以設定我們的用戶端程式要連到那一台MySQL/MariaDB服務器
基本上我只在Connection這一頁，我並沒有切到Remote Management或是System Profile去更改其他設定值
在Connection這一頁，我的重要設定值如下

Connection Name: MariaDB_on_cubie （這個連線的名稱，請取個容易理解又直觀的名稱）
Connection Method: Standard TCP/IP over SSH
SSH Hostname: 192.168.0.160:36000 （我的CubieTruck上面運行的SSH Server的IP地址及TCP端口號）
SSH Username: cubie （Cubian機器上面合法的可以登入SSH Server的用戶名稱）
SSH Key File: /home/anntony/.ssh/cubian/cubie@cubian.private.key（SSH私鑰存放的路徑）
MySQL Hostname: localhost （當SSH連線成功之後，以那台SSH Server的觀點來看，MySQL Server是叫什麼名字？）
MySQL Server Port: 3306
Username: tony

設定好了之後，按下右下角的Test Connection按鈕，試試連線是否正常？
在輸入MariaDB資料庫用戶tony的密碼之後，會出現這個視窗
Connection Warning

Incompatible/nonstandard server version or connection
 protocol detected (10.0.14).

A connection to this database can be established but some 
MySQL Workbench features may not work properly since the 
database is not fully compatible with the supported versions 
of MySQL.

MySQL Workbench is developed and tested for MySQL Server 
versions 5.1, 5.5, 5.6 and 5.7

                    [ Continue Anyway ] [ Cancel ]

不要理它，按下continue Anyway
又出現了一個對話框
Connected to MySQL at localhost:3306 through 
SSH tunnel at 192.168.0.160:36000 with user tony

Connection parameters are correct

SSL not enabled
                                   [ OK ]

按下OK，再按下Manage Server Connections對話框右下角的Close關掉該對話框
現在回到MySQL Workbench首頁，按下我們剛才新增的連線MariaDB_on_cubie，
按下Continue Anyway按鈕，你已經連到Cubian上面運行的MariaDB服務器了
接下來就是嗡嗡嗡了…

（提示：在CubieTruck機器上，我的MariaDB還是一樣運行在127.0.0.1的3306端口）

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

9.列出目前所有資料庫用戶名稱

MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.00 sec)

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> show tables;
+---------------------------+
| Tables_in_mysql           |
+---------------------------+
（這裡的輸出省略…因為不是重點）
| time_zone_transition_type |
| user                      |
+---------------------------+
30 rows in set (0.00 sec)

MariaDB [mysql]> select User,Host from user;
+------+-----------+
| User | Host      |
+------+-----------+
| root | 127.0.0.1 |
| root | ::1       |
| root | localhost |
+------+-----------+
3 rows in set (0.00 sec)

MariaDB [mysql]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.查看某一位用戶的權限

MariaDB [(none)]> SHOW GRANTS FOR 'root'@'localhost';
+----------------------------------------------------------------------------------------------------------------------------------------+
| Grants for root@localhost                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' IDENTIFIED BY PASSWORD '*81F5E21E35407D884A6CD4A731AEBFB6AF209E1B' WITH GRANT OPTION |
| GRANT PROXY ON ''@'%' TO 'root'@'localhost' WITH GRANT OPTION                                                                          |
+----------------------------------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'root'@'127.0.0.1';
+----------------------------------------------------------------------------------------------------------------------------------------+
| Grants for root@127.0.0.1                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO 'root'@'127.0.0.1' IDENTIFIED BY PASSWORD '*81F5E21E35407D884A6CD4A731AEBFB6AF209E1B' WITH GRANT OPTION |
+----------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'root'@'::1';
+----------------------------------------------------------------------------------------------------------------------------------+
| Grants for root@::1                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO 'root'@'::1' IDENTIFIED BY PASSWORD '*81F5E21E35407D884A6CD4A731AEBFB6AF209E1B' WITH GRANT OPTION |
+----------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
11.新增用戶

MariaDB [(none)]> CREATE USER 'chakra'@'%' IDENTIFIED BY 'password1111';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'tony'@'localhost' IDENTIFIED BY 'password2222';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'dgdg'@'host1.example.net' IDENTIFIED BY 'password3333';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'narudo'@'%.example.net' IDENTIFIED BY 'password4444';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'nodelasky'@'192.168.0.12' IDENTIFIED BY 'password5555';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'jojo'@'192.168.0.%' IDENTIFIED BY 'password6666';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> CREATE USER 'laravel'@'192.168.0.0/255.255.255.0' IDENTIFIED BY 'password7777';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.00 sec)

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> describe user;
+------------------------+-----------------------------------+------+-----+---------+-------+
| Field                  | Type                              | Null | Key | Default | Extra |
+------------------------+-----------------------------------+------+-----+---------+-------+
| Host                   | char(60)                          | NO   | PRI |         |       |
| User                   | char(80)                          | NO   | PRI |         |       |
| Password               | char(41)                          | NO   |     |         |       |
（這裡的輸出省略…因為不是重點）
+------------------------+-----------------------------------+------+-----+---------+-------+
44 rows in set (0.03 sec)

MariaDB [mysql]> select User,Host,Password from user;
+-----------+---------------------------+-------------------------------------------+
| User      | Host                      | Password                                  |
+-----------+---------------------------+-------------------------------------------+
| root      | localhost                 | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root      | 127.0.0.1                 | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root      | ::1                       | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| tony      | localhost                 | *739AC22A9A52BA49DFBEA94CFF72CD2EB9073422 |
| chakra    | %                         | *1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16 |
| dgdg      | host1.example.net         | *761A0433732816E7C8FA3B75988F2C7F040901AE |
| narudo    | %.example.net             | *C9227A2D81C4C9794F3D69D6E68A1042B66DF07F |
| nodelasky | 192.168.0.12              | *4D60DB4F79E0B82BA8A0F92F876EFCE34A66CE3A |
| jojo      | 192.168.0.%               | *0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E |
| laravel   | 192.168.0.0/255.255.255.0 | *C7B931A62D265417B627B6AA1DD3747A7EBE4639 |
+-----------+---------------------------+-------------------------------------------+
10 rows in set (0.01 sec)

MariaDB [mysql]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
12.給予權限

授權給 tony@localhost 最高資料庫管理權限（和root@localhost一樣大的權限）
為什麼要讓它擁有和root用戶 (MariaDB資料庫的root用戶) 一樣那麼大的權限
是因為你總不希望每次連進資料庫都是用root用戶去連（這樣很LOW又不安全）
但是你又希望有root那麼大的權限
記住這個超級使用者 tony@localhost必須先在上個步驟設定好登入密碼了

MariaDB [(none)]> SHOW GRANTS FOR 'tony'@'localhost';
+-------------------------------------------------------------------------------------------------------------+
| Grants for tony@localhost                                                                                   |
+-------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'tony'@'localhost' IDENTIFIED BY PASSWORD '*739AC22A9A52BA49DFBEA94CFF72CD2EB9073422' |
+-------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> GRANT ALL ON *.* TO 'tony'@'localhost' WITH GRANT OPTION;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'tony'@'localhost';
+----------------------------------------------------------------------------------------------------------------------------------------+
| Grants for tony@localhost                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO 'tony'@'localhost' IDENTIFIED BY PASSWORD '*739AC22A9A52BA49DFBEA94CFF72CD2EB9073422' WITH GRANT OPTION |
+----------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

第二個要授權的用戶是  jojo@192.168.0.%
讓她可以對testdb1資料庫的任何資料表作CRUD操作

MariaDB [(none)]> SHOW GRANTS FOR 'jojo'@'192.168.0.%';
+---------------------------------------------------------------------------------------------------------------+
| Grants for jojo@192.168.0.%                                                                                   |
+---------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'jojo'@'192.168.0.%' IDENTIFIED BY PASSWORD '*0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E' |
+---------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> GRANT SELECT,INSERT,UPDATE,DELETE ON testdb1.* TO 'jojo'@'192.168.0.%';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'jojo'@'192.168.0.%';
+---------------------------------------------------------------------------------------------------------------+
| Grants for jojo@192.168.0.%                                                                                   |
+---------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'jojo'@'192.168.0.%' IDENTIFIED BY PASSWORD '*0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E' |
| GRANT SELECT, INSERT, UPDATE, DELETE ON `testdb1`.* TO 'jojo'@'192.168.0.%'                                   |
+---------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

第三個要授權的用戶是 laravel@192.168.0.0/255.255.255.0
讓這個用戶可以對資料庫testdb2進行任何操作（當然包含其中所有資料表），
但是沒有辦法給其他用戶授權 （沒有 WITH GRANT OPTION）

MariaDB [(none)]> SHOW GRANTS FOR 'laravel'@'192.168.0.0/255.255.255.0';
+--------------------------------------------------------------------------------------------------------------------------------+
| Grants for laravel@192.168.0.0/255.255.255.0                                                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'laravel'@'192.168.0.0/255.255.255.0' IDENTIFIED BY PASSWORD '*C7B931A62D265417B627B6AA1DD3747A7EBE4639' |
+--------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> GRANT ALL ON testdb2.* TO 'laravel'@'192.168.0.0/255.255.255.0';
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'laravel'@'192.168.0.0/255.255.255.0';
+--------------------------------------------------------------------------------------------------------------------------------+
| Grants for laravel@192.168.0.0/255.255.255.0                                                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'laravel'@'192.168.0.0/255.255.255.0' IDENTIFIED BY PASSWORD '*C7B931A62D265417B627B6AA1DD3747A7EBE4639' |
| GRANT ALL PRIVILEGES ON `testdb2`.* TO 'laravel'@'192.168.0.0/255.255.255.0'                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

第四個要授權的用戶是chakra@%
@後面的%就是表示不管是那一台主機那一個IP都可以
%是主機名稱的wildcard字元
我們授權給chakra@%這個用戶可以讀取testdb3資料庫的staff資料表（SELECT權限）
然後讓他可以再授權給其他的用戶，和自已一樣的權限（WITH GRANT OPTION）

MariaDB [(none)]> SHOW GRANTS FOR 'chakra'@'%';
+-------------------------------------------------------------------------------------------------------+
| Grants for chakra@%                                                                                   |
+-------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'chakra'@'%' IDENTIFIED BY PASSWORD '*1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16' |
+-------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [(none)]> GRANT SELECT ON testdb3.staff TO 'chakra'@'%' WITH GRANT OPTION;
ERROR 1146 (42S02): Table 'testdb3.staff' doesn't exist
MariaDB [(none)]> SHOW GRANTS FOR 'chakra'@'%';
+-------------------------------------------------------------------------------------------------------+
| Grants for chakra@%                                                                                   |
+-------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'chakra'@'%' IDENTIFIED BY PASSWORD '*1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16' |
+-------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

哦哦終端機靠腰了，結果是什麼都沒有改變，
上面的訊息告訴我們，因為testdb3資料庫的staff資料表並不存在所以不能授權
話雖如此，可是前面的例子裡，testdb1、testdb2資料庫也不存在啊？？？
只是在前面我沒刻意指定一個table name而是用 * 代替所有表格名
好吧那這一次改變一下，把testdb3資料庫的所有資料表，授權讓chakra@%這個用戶有讀（SELECT）的權限，以及WITH GRANT OPTION

MariaDB [(none)]> GRANT SELECT ON testdb3.* TO 'chakra'@'%' WITH GRANT OPTION;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> SHOW GRANTS FOR 'chakra'@'%';
+-------------------------------------------------------------------------------------------------------+
| Grants for chakra@%                                                                                   |
+-------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'chakra'@'%' IDENTIFIED BY PASSWORD '*1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16' |
| GRANT SELECT ON `testdb3`.* TO 'chakra'@'%' WITH GRANT OPTION                                         |
+-------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

結果授權成功，然後得到兩個小結論
（一）
如果資料庫testdb3不存在（當然也不存在裡面的staff資料表）
下面這一行的授權指令還是會成功
GRANT SELECT ON testdb3.* TO 'chakra'@'%' WITH GRANT OPTION;
但是下面這一行會執行失敗，和上面那一行指令差別在於：這裡完整的敘述了一個不存在資料表staff的名字
GRANT SELECT ON testdb3.staff TO 'chakra'@'%' WITH GRANT OPTION;

（二）
值得注意的是，如果要在資料庫服務器上產生一個超級使用者
在這裡我假設這個用戶的名字是tony
那麼你必須要讓
tony@localhost
tony@127.0.0.1
這兩個用戶同時存在，而且最好是讓他們兩個持有一模一樣的密碼
然後再使用
GRANT ALL ON *.* TO 'tony'@'localhost' WITH GRANT OPTION;
GRANT ALL ON *.* TO 'tony'@'127.0.0.1' WITH GRANT OPTION;
為這兩個用戶授權
tony@localhost是在Cubian本機上的MariaDB服務器的command line client使用的
tony@127.0.0.1是給異地機器SSH登入Cubian機器後再連到MariaDB服務器的程式，像是MySQL workbench使用的

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
13.收回權限

上個步驟我們授權了四個用戶不同的權限
現在一個一個把權限給收回來
首先再次確認MariaDB目前的用戶列表

MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.01 sec)

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> show tables;
+---------------------------+
| Tables_in_mysql           |
+---------------------------+
（這裡的輸出省略…因為不是重點）
| time_zone_transition      |
| time_zone_transition_type |
| user                      |
+---------------------------+
30 rows in set (0.00 sec)

MariaDB [mysql]> describe user;
+------------------------+-----------------------------------+------+-----+---------+-------+
| Field                  | Type                              | Null | Key | Default | Extra |
+------------------------+-----------------------------------+------+-----+---------+-------+
| Host                   | char(60)                          | NO   | PRI |         |       |
| User                   | char(80)                          | NO   | PRI |         |       |
| Password               | char(41)                          | NO   |     |         |       |
| Select_priv            | enum('N','Y')                     | NO   |     | N       |       |
| Insert_priv            | enum('N','Y')                     | NO   |     | N       |       |
| Update_priv            | enum('N','Y')                     | NO   |     | N       |       |
（這裡的輸出省略…因為不是重點）
+------------------------+-----------------------------------+------+-----+---------+-------+
44 rows in set (0.03 sec)

MariaDB [mysql]> select User,Host,Password from user;
+-----------+---------------------------+-------------------------------------------+
| User      | Host                      | Password                                  |
+-----------+---------------------------+-------------------------------------------+
| root      | localhost                 | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root      | 127.0.0.1                 | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| root      | ::1                       | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B |
| tony      | localhost                 | *739AC22A9A52BA49DFBEA94CFF72CD2EB9073422 |
| chakra    | %                         | *1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16 |
| dgdg      | host1.example.net         | *761A0433732816E7C8FA3B75988F2C7F040901AE |
| narudo    | %.example.net             | *C9227A2D81C4C9794F3D69D6E68A1042B66DF07F |
| nodelasky | 192.168.0.12              | *4D60DB4F79E0B82BA8A0F92F876EFCE34A66CE3A |
| jojo      | 192.168.0.%               | *0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E |
| laravel   | 192.168.0.0/255.255.255.0 | *C7B931A62D265417B627B6AA1DD3747A7EBE4639 |
+-----------+---------------------------+-------------------------------------------+
10 rows in set (0.00 sec)

收回用戶chakra@%的權限

MariaDB [mysql]> SHOW GRANTS FOR 'chakra'@'%';
+-------------------------------------------------------------------------------------------------------+
| Grants for chakra@%                                                                                   |
+-------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'chakra'@'%' IDENTIFIED BY PASSWORD '*1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16' |
| GRANT SELECT ON `testdb3`.* TO 'chakra'@'%' WITH GRANT OPTION                                         |
+-------------------------------------------------------------------------------------------------------+
2 rows in set (0.01 sec)

MariaDB [mysql]> REVOKE SELECT,GRANT OPTION ON testdb3.* FROM 'chakra'@'%';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> SHOW GRANTS FOR 'chakra'@'%';
+-------------------------------------------------------------------------------------------------------+
| Grants for chakra@%                                                                                   |
+-------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'chakra'@'%' IDENTIFIED BY PASSWORD '*1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16' |
+-------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

收回用戶laravel@192.168.0.0/255.255.255.0的權限

MariaDB [mysql]> SHOW GRANTS FOR 'laravel'@'192.168.0.0/255.255.255.0';
+--------------------------------------------------------------------------------------------------------------------------------+
| Grants for laravel@192.168.0.0/255.255.255.0                                                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'laravel'@'192.168.0.0/255.255.255.0' IDENTIFIED BY PASSWORD '*C7B931A62D265417B627B6AA1DD3747A7EBE4639' |
| GRANT ALL PRIVILEGES ON `testdb2`.* TO 'laravel'@'192.168.0.0/255.255.255.0'                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

MariaDB [mysql]> REVOKE ALL ON testdb2.* FROM 'laravel'@'192.168.0.0/255.255.255.0';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> SHOW GRANTS FOR 'laravel'@'192.168.0.0/255.255.255.0';
+--------------------------------------------------------------------------------------------------------------------------------+
| Grants for laravel@192.168.0.0/255.255.255.0                                                                                   |
+--------------------------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'laravel'@'192.168.0.0/255.255.255.0' IDENTIFIED BY PASSWORD '*C7B931A62D265417B627B6AA1DD3747A7EBE4639' |
+--------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

收回用戶jojo@192.168.0.%的部分權限，只收回DELETE和UPDATE

MariaDB [mysql]> SHOW GRANTS FOR 'jojo'@'192.168.0.%';
+---------------------------------------------------------------------------------------------------------------+
| Grants for jojo@192.168.0.%                                                                                   |
+---------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'jojo'@'192.168.0.%' IDENTIFIED BY PASSWORD '*0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E' |
| GRANT SELECT, INSERT, UPDATE, DELETE ON `testdb1`.* TO 'jojo'@'192.168.0.%'                                   |
+---------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

MariaDB [mysql]> REVOKE DELETE,UPDATE ON testdb1.* FROM 'jojo'@'192.168.0.%';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> SHOW GRANTS FOR 'jojo'@'192.168.0.%';
+---------------------------------------------------------------------------------------------------------------+
| Grants for jojo@192.168.0.%                                                                                   |
+---------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'jojo'@'192.168.0.%' IDENTIFIED BY PASSWORD '*0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E' |
| GRANT SELECT, INSERT ON `testdb1`.* TO 'jojo'@'192.168.0.%'                                                   |
+---------------------------------------------------------------------------------------------------------------+
2 rows in set (0.00 sec)

收回tony@localhost的全部權限，他將不再是超級使用者，只是一個除了登入什麼權限都沒有的用戶
注意這裡使用的REVOKE指令，和上面不同的地方是沒有指定資料庫名.表格名

MariaDB [mysql]> SHOW GRANTS FOR 'tony'@'localhost';
+----------------------------------------------------------------------------------------------------------------------------------------+
| Grants for tony@localhost                                                                                                              |
+----------------------------------------------------------------------------------------------------------------------------------------+
| GRANT ALL PRIVILEGES ON *.* TO 'tony'@'localhost' IDENTIFIED BY PASSWORD '*5938568D06F7260E41353CAB3E9B305CAC18570C' WITH GRANT OPTION |
+----------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [mysql]> REVOKE ALL,GRANT OPTION FROM 'tony'@'localhost';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> SHOW GRANTS FOR 'tony'@'localhost';
+-------------------------------------------------------------------------------------------------------------+
| Grants for tony@localhost                                                                                   |
+-------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'tony'@'localhost' IDENTIFIED BY PASSWORD '*5938568D06F7260E41353CAB3E9B305CAC18570C' |
+-------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [mysql]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
14.刪除用戶

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> select User,Host,Password from user;
+-----------+---------------------------+-------------------------------------------+
| User      | Host                      | Password                                  |
+-----------+---------------------------+-------------------------------------------+
| root      | localhost                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | 127.0.0.1                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | ::1                       | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| tony      | localhost                 | *5938568D06F7260E41353CAB3E9B305CAC18570C |
| chakra    | %                         | *1D4B7A462F788B40C331CB3D1DCFD4AD99CAAA16 |
| dgdg      | host1.example.net         | *761A0433732816E7C8FA3B75988F2C7F040901AE |
| narudo    | %.example.net             | *C9227A2D81C4C9794F3D69D6E68A1042B66DF07F |
| nodelasky | 192.168.0.12              | *4D60DB4F79E0B82BA8A0F92F876EFCE34A66CE3A |
| jojo      | 192.168.0.%               | *0B6AF54E7A71E9833EFD9954B4AC16E0BDFDD01E |
| laravel   | 192.168.0.0/255.255.255.0 | *C7B931A62D265417B627B6AA1DD3747A7EBE4639 |
+-----------+---------------------------+-------------------------------------------+
10 rows in set (0.00 sec)

MariaDB [mysql]> DROP USER 'dgdg'@'host1.example.net';
Query OK, 0 rows affected (0.01 sec)

MariaDB [mysql]> DROP USER 'jojo'@'192.168.0.%';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> DROP USER 'chakra'@'%';
Query OK, 0 rows affected (0.01 sec)

MariaDB [mysql]> SHOW GRANTS FOR 'dgdg'@'host1.example.net';
ERROR 1141 (42000): There is no such grant defined for user 'dgdg' on host 'host1.example.net'
MariaDB [mysql]> SHOW GRANTS FOR 'jojo'@'192.168.0.%';
ERROR 1141 (42000): There is no such grant defined for user 'jojo' on host '192.168.0.%'
MariaDB [mysql]> SHOW GRANTS FOR 'chakra'@'%';
ERROR 1141 (42000): There is no such grant defined for user 'chakra' on host '%'
MariaDB [mysql]> select User,Host,Password from user;
+-----------+---------------------------+-------------------------------------------+
| User      | Host                      | Password                                  |
+-----------+---------------------------+-------------------------------------------+
| root      | localhost                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | 127.0.0.1                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | ::1                       | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| tony      | localhost                 | *5938568D06F7260E41353CAB3E9B305CAC18570C |
| narudo    | %.example.net             | *C9227A2D81C4C9794F3D69D6E68A1042B66DF07F |
| nodelasky | 192.168.0.12              | *4D60DB4F79E0B82BA8A0F92F876EFCE34A66CE3A |
| laravel   | 192.168.0.0/255.255.255.0 | *C7B931A62D265417B627B6AA1DD3747A7EBE4639 |
+-----------+---------------------------+-------------------------------------------+
7 rows in set (0.00 sec)

MariaDB [mysql]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
15.變更用戶密碼

變更用戶tony@localhost的密碼為tonypassword

MariaDB [mysql]> SET PASSWORD FOR 'tony'@'localhost' = PASSWORD('tonypassword');
Query OK, 0 rows affected (0.00 sec)

變更管理者root的密碼為rootpassword
參考資料：
https://mariadb.com/blog/how-reset-root-password-mariadb-linux
因為同時有三個用戶root@localhost、root@127.0.0.1、root@::1
所以請你這樣子變更root用戶的密碼

root@cubie:~# mysql -u root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 7
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> use mysql;
Database changed
MariaDB [mysql]> update user set password=PASSWORD("rootpassword") where User='root';
Query OK, 3 rows affected (0.01 sec)
Rows matched: 3  Changed: 3  Warnings: 0

MariaDB [mysql]> flush privileges;
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> exit
Bye
root@cubie:~# mysql -u root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 8
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
16.列出所有資料庫名稱

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.01 sec)

MariaDB [(none)]>  

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
17.新增資料庫

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.00 sec)

MariaDB [(none)]> CREATE DATABASE testdb1;
Query OK, 1 row affected (0.00 sec)

MariaDB [(none)]> CREATE DATABASE IF NOT EXISTS testdb2;
Query OK, 1 row affected (0.00 sec)

MariaDB [(none)]> CREATE DATABASE testdb3;
Query OK, 1 row affected (0.00 sec)

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
| testdb2            |
| testdb3            |
+--------------------+
6 rows in set (0.00 sec)

MariaDB [(none)]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
18.刪除資料庫

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
| testdb2            |
| testdb3            |
+--------------------+
6 rows in set (0.00 sec)

MariaDB [(none)]> DROP DATABASE testdb2;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> DROP DATABASE IF EXISTS testdb3;
Query OK, 0 rows affected (0.00 sec)

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
+--------------------+
4 rows in set (0.00 sec)

MariaDB [(none)]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
19.選定一個資料庫

MariaDB [(none)]> USE mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
20.列出目前選定資料庫內所有資料表名稱

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> show tables;
+---------------------------+
| Tables_in_mysql           |
+---------------------------+
| column_stats              |
| columns_priv              |
| db                        |
| event                     |
| func                      |
| general_log               |
| gtid_slave_pos            |
| help_category             |
| help_keyword              |
| help_relation             |
| help_topic                |
| host                      |
| index_stats               |
| innodb_index_stats        |
| innodb_table_stats        |
| plugin                    |
| proc                      |
| procs_priv                |
| proxies_priv              |
| roles_mapping             |
| servers                   |
| slow_log                  |
| table_stats               |
| tables_priv               |
| time_zone                 |
| time_zone_leap_second     |
| time_zone_name            |
| time_zone_transition      |
| time_zone_transition_type |
| user                      |
+---------------------------+
30 rows in set (0.00 sec)

MariaDB [mysql]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
21.新增資料表

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
+--------------------+
4 rows in set (0.00 sec)

MariaDB [(none)]> USE testdb1;
Database changed
MariaDB [testdb1]> SHOW TABLES;
Empty set (0.00 sec)

MariaDB [testdb1]> CREATE TABLE employees (
    -> id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    -> surname VARCHAR(100),
    -> givenname VARCHAR(100),
    -> pref_name VARCHAR(50),
    -> birthday DATE
    -> );
Query OK, 0 rows affected (0.30 sec)

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.00 sec)

MariaDB [testdb1]> SHOW CREATE TABLE employees\G
*************************** 1. row ***************************
       Table: employees
Create Table: CREATE TABLE `employees` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `surname` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `givenname` varchar(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  `pref_name` varchar(50) COLLATE utf8_unicode_ci DEFAULT NULL,
  `birthday` date DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci
1 row in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
22.查看資料表結構

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.00 sec)

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(50)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)

MariaDB [testdb1]> 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
23.刪除資料表

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.00 sec)

MariaDB [testdb1]> DROP TABLE employees;
Query OK, 0 rows affected (0.13 sec)

MariaDB [testdb1]> SHOW TABLES;
Empty set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
24.新增欄位

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.01 sec)

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(50)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)

MariaDB [testdb1]> ALTER TABLE employees ADD username varchar(20) AFTER pref_name;
Query OK, 0 rows affected (0.95 sec)
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(50)  | YES  |     | NULL    |                |
| username  | varchar(20)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
25.修改欄位

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(50)  | YES  |     | NULL    |                |
| username  | varchar(20)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> ALTER TABLE employees MODIFY pref_name varchar(25);
Query OK, 0 rows affected (0.76 sec)               
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(25)  | YES  |     | NULL    |                |
| username  | varchar(20)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
26.刪除欄位

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(25)  | YES  |     | NULL    |                |
| username  | varchar(20)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> ALTER TABLE employees DROP username;
Query OK, 0 rows affected (0.50 sec)
Records: 0  Duplicates: 0  Warnings: 0

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(25)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
5 rows in set (0.01 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
27.新增記錄列

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.00 sec)

MariaDB [testdb1]> DESCRIBE employees;
+-----------+--------------+------+-----+---------+----------------+
| Field     | Type         | Null | Key | Default | Extra          |
+-----------+--------------+------+-----+---------+----------------+
| id        | int(11)      | NO   | PRI | NULL    | auto_increment |
| surname   | varchar(100) | YES  |     | NULL    |                |
| givenname | varchar(100) | YES  |     | NULL    |                |
| pref_name | varchar(25)  | YES  |     | NULL    |                |
| birthday  | date         | YES  |     | NULL    |                |
+-----------+--------------+------+-----+---------+----------------+
5 rows in set (0.03 sec)

MariaDB [testdb1]> SELECT * FROM employees;
Empty set (0.01 sec)

MariaDB [testdb1]> INSERT INTO employees (surname,givenname) VALUES
    -> ("Picachu","Kenny"),
    -> ("Narudo","Tony"),
    -> ("Sabastin","Landy");
Query OK, 3 rows affected (0.05 sec)
Records: 3  Duplicates: 0  Warnings: 0

MariaDB [testdb1]> INSERT INTO employees (pref_name,givenname,surname,birthday) VALUES ("Chakura","Chakura Bom","Charky","1975-02-03");
Query OK, 1 row affected (0.04 sec)

MariaDB [testdb1]> INSERT employees (surname) VALUE ("RcLond");
Query OK, 1 row affected (0.04 sec)

MariaDB [testdb1]> INSERT INTO employees VALUES (NULL,"Duran","Jin-Duran",NULL,NULL);
Query OK, 1 row affected (0.05 sec)

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | NULL      | NULL       |
|  2 | Narudo   | Tony        | NULL      | NULL       |
|  3 | Sabastin | Landy       | NULL      | NULL       |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
|  6 | Duran    | Jin-Duran   | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
28.修改記錄列

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | NULL      | NULL       |
|  2 | Narudo   | Tony        | NULL      | NULL       |
|  3 | Sabastin | Landy       | NULL      | NULL       |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
|  6 | Duran    | Jin-Duran   | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> UPDATE employees SET pref_name = "Pika Pika", birthday = "1950-11-23"
    -> WHERE surname = "Picachu" and givenname = "Kenny";
Query OK, 1 row affected (0.05 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [testdb1]> UPDATE employees SET
    -> pref_name = "Utsumaki", birthday = "1990-03-15"
    -> WHERE surname = "Narudo";
Query OK, 1 row affected (0.10 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [testdb1]> UPDATE employees SET
    -> birthday = "1966-04-12"
    -> WHERE surname = "Sabastin";
Query OK, 1 row affected (0.03 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | Pika Pika | 1950-11-23 |
|  2 | Narudo   | Tony        | Utsumaki  | 1990-03-15 |
|  3 | Sabastin | Landy       | NULL      | 1966-04-12 |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
|  6 | Duran    | Jin-Duran   | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
29.刪除記錄列

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | Pika Pika | 1950-11-23 |
|  2 | Narudo   | Tony        | Utsumaki  | 1990-03-15 |
|  3 | Sabastin | Landy       | NULL      | 1966-04-12 |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
|  6 | Duran    | Jin-Duran   | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> DELETE FROM employees WHERE id = 6;
Query OK, 1 row affected (0.05 sec)

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | Pika Pika | 1950-11-23 |
|  2 | Narudo   | Tony        | Utsumaki  | 1990-03-15 |
|  3 | Sabastin | Landy       | NULL      | 1966-04-12 |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
5 rows in set (0.00 sec)

MariaDB [testdb1]> 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
30.列出記錄列

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| employees         |
+-------------------+
1 row in set (0.01 sec)

MariaDB [testdb1]> SELECT * FROM employees;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  1 | Picachu  | Kenny       | Pika Pika | 1950-11-23 |
|  2 | Narudo   | Tony        | Utsumaki  | 1990-03-15 |
|  3 | Sabastin | Landy       | NULL      | 1966-04-12 |
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
+----+----------+-------------+-----------+------------+
5 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT id,pref_name,surname FROM employees;
+----+-----------+----------+
| id | pref_name | surname  |
+----+-----------+----------+
|  1 | Pika Pika | Picachu  |
|  2 | Utsumaki  | Narudo   |
|  3 | NULL      | Sabastin |
|  4 | Chakura   | Charky   |
|  5 | NULL      | RcLond   |
+----+-----------+----------+
5 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employees WHERE birthday > '1970-01-01';
+----+---------+-------------+-----------+------------+
| id | surname | givenname   | pref_name | birthday   |
+----+---------+-------------+-----------+------------+
|  2 | Narudo  | Tony        | Utsumaki  | 1990-03-15 |
|  4 | Charky  | Chakura Bom | Chakura   | 1975-02-03 |
+----+---------+-------------+-----------+------------+
2 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employees ORDER BY surname;
+----+----------+-------------+-----------+------------+
| id | surname  | givenname   | pref_name | birthday   |
+----+----------+-------------+-----------+------------+
|  4 | Charky   | Chakura Bom | Chakura   | 1975-02-03 |
|  2 | Narudo   | Tony        | Utsumaki  | 1990-03-15 |
|  1 | Picachu  | Kenny       | Pika Pika | 1950-11-23 |
|  5 | RcLond   | NULL        | NULL      | NULL       |
|  3 | Sabastin | Landy       | NULL      | 1966-04-12 |
+----+----------+-------------+-----------+------------+
5 rows in set (0.01 sec)

MariaDB [testdb1]> SELECT * FROM employees WHERE surname LIKE "Pic%";
+----+---------+-----------+-----------+------------+
| id | surname | givenname | pref_name | birthday   |
+----+---------+-----------+-----------+------------+
|  1 | Picachu | Kenny     | Pika Pika | 1950-11-23 |
+----+---------+-----------+-----------+------------+
1 row in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
31.產生演示所需要的兩個表格及資料

參考資料
http://en.wikipedia.org/wiki/Join_%28SQL%29
http://stackoverflow.com/questions/5152921/import-sql-file-from-mysql-console

root@cubie:~# pwd
/root
root@cubie:~# ls
example.sql  mysql_client_settings.txt	sunxi-tools  vncpasswd
root@cubie:~# cat ./example.sql
CREATE TABLE department
(
 DepartmentID INT,
 DepartmentName VARCHAR(20)
);
 
CREATE TABLE employee
(
 LastName VARCHAR(20),
 DepartmentID INT
);
 
INSERT INTO department VALUES(31, 'Sales');
INSERT INTO department VALUES(33, 'Engineering');
INSERT INTO department VALUES(34, 'Clerical');
INSERT INTO department VALUES(35, 'Marketing');
 
INSERT INTO employee VALUES('Rafferty', 31);
INSERT INTO employee VALUES('Jones', 33);
INSERT INTO employee VALUES('Heisenberg', 33);
INSERT INTO employee VALUES('Robinson', 34);
INSERT INTO employee VALUES('Smith', 34);
INSERT INTO employee VALUES('Williams', NULL);
root@cubie:~# which mysql
/usr/local/mariadb/bin/mysql
root@cubie:~# mysql --defaults-file=./mysql_client_settings.txt
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 4
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
+--------------------+
4 rows in set (0.00 sec)

MariaDB [(none)]> use testdb1;
Database changed
MariaDB [testdb1]> SHOW TABLES;
Empty set (0.01 sec)

MariaDB [testdb1]> SOURCE /root/example.sql;
Query OK, 0 rows affected (0.34 sec)

Query OK, 0 rows affected (0.30 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.13 sec)

Query OK, 1 row affected (0.05 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.05 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.05 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.05 sec)

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| department        |
| employee          |
+-------------------+
2 rows in set (0.01 sec)

MariaDB [testdb1]> SELECT * FROM department;
+--------------+----------------+
| DepartmentID | DepartmentName |
+--------------+----------------+
|           31 | Sales          |
|           33 | Engineering    |
|           34 | Clerical       |
|           35 | Marketing      |
+--------------+----------------+
4 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employee;
+------------+--------------+
| LastName   | DepartmentID |
+------------+--------------+
| Rafferty   |           31 |
| Jones      |           33 |
| Heisenberg |           33 |
| Robinson   |           34 |
| Smith      |           34 |
| Williams   |         NULL |
+------------+--------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> DESCRIBE department;
+----------------+-------------+------+-----+---------+-------+
| Field          | Type        | Null | Key | Default | Extra |
+----------------+-------------+------+-----+---------+-------+
| DepartmentID   | int(11)     | YES  |     | NULL    |       |
| DepartmentName | varchar(20) | YES  |     | NULL    |       |
+----------------+-------------+------+-----+---------+-------+
2 rows in set (0.03 sec)

MariaDB [testdb1]> DESCRIBE employee;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| LastName     | varchar(20) | YES  |     | NULL    |       |
| DepartmentID | int(11)     | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
2 rows in set (0.00 sec)

MariaDB [testdb1]> 

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
32.CROSS JOIN

CROSS JOIN產生的結果為Cartesian product（中譯：笛卡兒乘積）
關於笛卡兒乘積的說明可在這裡了解意義
http://zh.wikipedia.org/wiki/%E7%AC%9B%E5%8D%A1%E5%84%BF%E7%A7%AF
維基百科的此頁面有個簡單的解釋，集合X是 { A,K,Q,J,10,9,8,7,6,5,4,3,2 }
而集合Y是 { 黑桃、紅心、方塊、梅花 }，則集合X與集合Y的笛卡兒乘積是一副標準樸克牌的52個元素的集合
{ (A,黑桃),(K,黑桃),(Q,黑桃),(J,黑桃),.......(4,梅花),(3,梅花),(2,梅花) }
有點像以前中學數學裡學過的多項式乘法 (a+b)(c+d) = ac + ad + bc + bd 的概念

MariaDB [testdb1]> SELECT * FROM department;
+--------------+----------------+
| DepartmentID | DepartmentName |
+--------------+----------------+
|           31 | Sales          |
|           33 | Engineering    |
|           34 | Clerical       |
|           35 | Marketing      |
+--------------+----------------+
4 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employee;
+------------+--------------+
| LastName   | DepartmentID |
+------------+--------------+
| Rafferty   |           31 |
| Jones      |           33 |
| Heisenberg |           33 |
| Robinson   |           34 |
| Smith      |           34 |
| Williams   |         NULL |
+------------+--------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employee CROSS JOIN department;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Rafferty   |           31 |           33 | Engineering    |
| Rafferty   |           31 |           34 | Clerical       |
| Rafferty   |           31 |           35 | Marketing      |
| Jones      |           33 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Jones      |           33 |           34 | Clerical       |
| Jones      |           33 |           35 | Marketing      |
| Heisenberg |           33 |           31 | Sales          |
| Heisenberg |           33 |           33 | Engineering    |
| Heisenberg |           33 |           34 | Clerical       |
| Heisenberg |           33 |           35 | Marketing      |
| Robinson   |           34 |           31 | Sales          |
| Robinson   |           34 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Robinson   |           34 |           35 | Marketing      |
| Smith      |           34 |           31 | Sales          |
| Smith      |           34 |           33 | Engineering    |
| Smith      |           34 |           34 | Clerical       |
| Smith      |           34 |           35 | Marketing      |
| Williams   |         NULL |           31 | Sales          |
| Williams   |         NULL |           33 | Engineering    |
| Williams   |         NULL |           34 | Clerical       |
| Williams   |         NULL |           35 | Marketing      |
+------------+--------------+--------------+----------------+
24 rows in set (0.00 sec)

MariaDB [testdb1]> SELECT * FROM employee,department;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Rafferty   |           31 |           33 | Engineering    |
| Rafferty   |           31 |           34 | Clerical       |
| Rafferty   |           31 |           35 | Marketing      |
| Jones      |           33 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Jones      |           33 |           34 | Clerical       |
| Jones      |           33 |           35 | Marketing      |
| Heisenberg |           33 |           31 | Sales          |
| Heisenberg |           33 |           33 | Engineering    |
| Heisenberg |           33 |           34 | Clerical       |
| Heisenberg |           33 |           35 | Marketing      |
| Robinson   |           34 |           31 | Sales          |
| Robinson   |           34 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Robinson   |           34 |           35 | Marketing      |
| Smith      |           34 |           31 | Sales          |
| Smith      |           34 |           33 | Engineering    |
| Smith      |           34 |           34 | Clerical       |
| Smith      |           34 |           35 | Marketing      |
| Williams   |         NULL |           31 | Sales          |
| Williams   |         NULL |           33 | Engineering    |
| Williams   |         NULL |           34 | Clerical       |
| Williams   |         NULL |           35 | Marketing      |
+------------+--------------+--------------+----------------+
24 rows in set (0.00 sec)

MariaDB [testdb1]>

值得注意的是，上面的兩行SQL指令
SELECT * FROM employee CROSS JOIN department;
SELECT * FROM employee,department;
產生了相同的結果
第一句有顯式指定CROSS JOIN關鍵字
第二句雖然沒有寫出CROSS JOIN關鍵字，但是執行結果和前面第一句有強調CROSS JOIN是一樣的
指令產生的結果表格都是employee表格和department表格的笛卡兒乘積

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
33.INNER JOIN
兩個參與JOIN的表格，裡面分別要有一個欄位的值，是兜得起來的，才會被選為結果表的記錄列
我懷疑我有點語言障礙，我想說得更清楚但沒辦法，看實際操作好了

顯式用法
MariaDB [testdb1]> SELECT * FROM employee INNER JOIN department ON employee.DepartmentID = department.DepartmentID;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Heisenberg |           33 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Smith      |           34 |           34 | Clerical       |
+------------+--------------+--------------+----------------+
5 rows in set (0.00 sec)

MariaDB [testdb1]>

隱式用法
MariaDB [testdb1]> SELECT * FROM employee,department WHERE employee.DepartmentID = department.DepartmentID;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Heisenberg |           33 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Smith      |           34 |           34 | Clerical       |
+------------+--------------+--------------+----------------+
5 rows in set (0.00 sec)

SQL-92規範的用法
注意在兩個表格裡用來JOIN的那個欄位必需有同樣的名稱（在這裡是DepartmentID）
還有仔細觀察INNER JOIN運算後輸出的result set只有三個欄位，
和上面兩個用法所產生的result set不同
這個SQL指令只產生了一個DepartmentID欄位

MariaDB [testdb1]> SELECT * FROM employee INNER JOIN department USING(DepartmentID);
+--------------+------------+----------------+
| DepartmentID | LastName   | DepartmentName |
+--------------+------------+----------------+
|           31 | Rafferty   | Sales          |
|           33 | Jones      | Engineering    |
|           33 | Heisenberg | Engineering    |
|           34 | Robinson   | Clerical       |
|           34 | Smith      | Clerical       |
+--------------+------------+----------------+
5 rows in set (0.01 sec)

Natural join用法
（資料庫專家們不建議使用此方法，不顯式指定連接欄位的情況下，你有可能不小心使用了不想使用的欄位作連接）
和上面SQL-92用法相同，一樣是參與INNER JOIN的兩個表格要有同樣名稱的欄位（DepartmentID）當作連接兩個表的欄位
和SQL-92用法只有指令寫法上的差異，另外不必再顯式指定那個連接欄位DepartmentID（這就是它危險之處，由資料庫自行認定連接欄位）
這個指令會自動比對兩個參加INNER JOIN運算的表格，找出相同名稱的欄位，自動當作連接兩個表的欄位
如果參加INNER JOIN運算的兩個表格沒有共同名稱的欄位，則會執行CROSS JOIN

MariaDB [testdb1]> SELECT * FROM employee NATURAL JOIN department;
+--------------+------------+----------------+
| DepartmentID | LastName   | DepartmentName |
+--------------+------------+----------------+
|           31 | Rafferty   | Sales          |
|           33 | Jones      | Engineering    |
|           33 | Heisenberg | Engineering    |
|           34 | Robinson   | Clerical       |
|           34 | Smith      | Clerical       |
+--------------+------------+----------------+
5 rows in set (0.00 sec)

MariaDB [testdb1]> 

還有特別注意在employee表格裡的Williams那一個員工
還有在department表格裡的Marketing這個部門
完全沒有出現在上面的INNER JOIN結果表格中（無論是顯式或是隱式用法或SQL-92用法或Natural Join用法）
這是因為員工Williams沒有DepartmentID
而Marketing部門也沒有擁有任何員工（沒有任何DepartmentID為35的員工記錄存在）
就如同前面我所說的，參與INNER JOIN運算的兩個表格裡
分別要有一個欄位的值（在這裡是DepartmentID）要一樣
才會被選進結果表的記錄列裡
在寫程式的時候要注意INNER JOIN和OUTER JOIN所產生的結果表有著微妙的差異
不然可能會寫出有bug的程式

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
34.OUTER JOIN (LEFT OUTER JOIN)

剛才在上面INNER JOIN運算的時候，我們發現了在兩個參加運算的表格中
只要是連接欄位（DepartmentID）為NULL的員工記錄，像是Williams
或是沒有任何員工存在的部門記錄，像是DepartmentID欄位值為35的Marketing部門
都不會出現在運算結果的result set裡
那麼如果我們一定要運算結果result set裡面有所有員工記錄，不管那個員工有沒有被分類到某個部門
（可能是第一天進公司報到的菜鳥，所以還沒有給他決定編制在那個部門）
又或者反過來，我們一定要運算結果result set裡面必須有所有的部門記錄，不管這個部門裡面有沒有實質在工作的員工
（可能是老板今天剛想到要成立品質保證部門，但是還沒有想到新部門裡面要有那些員工）
又或者是我們希望無論如何，運算結果的result set都會有所有的員工和部門存在
這個時候就要用到OUTER JOIN
而OUTER JOIN可以再細分為只完整保存其中一個表格所有記錄列的LEFT OUTER JOIN和RIGHT OUTER JOIN
還有無論如何運算結果都要保存兩個表格所有記錄列的FULL OUTER JOIN

嘴砲打完了，現在先來看LEFT OUTER JOIN
這個例子指定要完整保留所有員工記錄

MariaDB [testdb1]> SELECT * FROM employee LEFT OUTER JOIN department ON employee.DepartmentID = department.DepartmentID;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Heisenberg |           33 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Smith      |           34 |           34 | Clerical       |
| Williams   |         NULL |         NULL | NULL           |
+------------+--------------+--------------+----------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

而下面這個例子指定要完整保留所有部門記錄

MariaDB [testdb1]> SELECT * FROM department LEFT OUTER JOIN employee ON department.DepartmentID = employee.DepartmentId;
+--------------+----------------+------------+--------------+
| DepartmentID | DepartmentName | LastName   | DepartmentID |
+--------------+----------------+------------+--------------+
|           31 | Sales          | Rafferty   |           31 |
|           33 | Engineering    | Jones      |           33 |
|           33 | Engineering    | Heisenberg |           33 |
|           34 | Clerical       | Robinson   |           34 |
|           34 | Clerical       | Smith      |           34 |
|           35 | Marketing      | NULL       |         NULL |
+--------------+----------------+------------+--------------+
6 rows in set (0.01 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
35.OUTER JOIN (RIGHT OUTER JOIN)

對，你發現了，LEFT OUTER JOIN和RIGHT OUTER JOIN只是方向不同
下指令的時候，要保留的那個表格的位置是互相反過來的
其他沒什麼不同，所以相較於前一個步驟，如果我們要運算結果完整保留所有的員工記錄，
使用RIGHT OUTER JOIN我們就這樣子下指令：

MariaDB [testdb1]> SELECT * FROM department RIGHT OUTER JOIN employee ON employee.DepartmentID = department.DepartmentID;
+--------------+----------------+------------+--------------+
| DepartmentID | DepartmentName | LastName   | DepartmentID |
+--------------+----------------+------------+--------------+
|           31 | Sales          | Rafferty   |           31 |
|           33 | Engineering    | Jones      |           33 |
|           33 | Engineering    | Heisenberg |           33 |
|           34 | Clerical       | Robinson   |           34 |
|           34 | Clerical       | Smith      |           34 |
|         NULL | NULL           | Williams   |         NULL |
+--------------+----------------+------------+--------------+
6 rows in set (0.01 sec)

MariaDB [testdb1]>

那如果要保留的是所有的部門記錄呢？就這樣子下指令

MariaDB [testdb1]> SELECT * FROM employee RIGHT OUTER JOIN department ON employee.DepartmentID = department.DepartmentID;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Heisenberg |           33 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Smith      |           34 |           34 | Clerical       |
| NULL       |         NULL |           35 | Marketing      |
+------------+--------------+--------------+----------------+
6 rows in set (0.01 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
36.OUTER JOIN (FULL OUTER JOIN)

上面講的LEFT OUTER JOIN和RIGHT OUTER JOIN都只保證其中一個表格的記錄列一定會完整出現
啊我如果兩個表格裡所有的記錄列，都至少要在運算結果的result set裡出現一次呢？
然後我很快樂的執行了

MariaDB [testdb1]> SELECT * FROM employee FULL OUTER JOIN department ON employee.DepartmentID = department.DepartmentID;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'OUTER JOIN department ON employee.DepartmentID = department.DepartmentID' at line 1
MariaDB [testdb1]> 

好慘，看來是MariaDB不支援FULL OUTER JOIN語法的樣子
有其他辦法可以得到FULL OUTER JOIN的運算結果嗎？

應該有，在得到FULL OUTER JOIN的運算結果之前
請你作一件事，用union and intersection當作關鍵字
然後使用Google的圖片搜尋，這樣你會立刻了解union和intersection的差別
現在我假設你已經知道兩者的差異
那麼在這裡我假設們所求的FULL OUTER JOIN的運算結果是F
LEFT OUTER JOIN的運算結果是L
RIGHT OUTER JOIN的運算結果是R
那麼
F = L UNION R

這裡說些看起來毫無關係，卻又好像有關係的事情
我突然想到一個應該算是數學題的問題
有一個爸爸有10個小孩，其中7個數學及格，7個英文及格
這個時候爸爸說了：如果你們其中有人數學和英文兩個科目都沒有及格
那麼我就不發下個月的零用錢給這個不用功的孩子
那麼請問這個爸爸下個月有可能要發給幾個孩子零用錢？
答案是：7個或是8個或是9個或是10個孩子全發
那麼為什麼？這和我們想知道的FULL OUTER JOIN的運算結果有關係嗎？

Min:7個人
領得到零用錢的孩子●●●●●●●○○○
　英　文　及　格　●●●●●●●○○○
　數　學　及　格　●●●●●●●○○○

Max:10個人
領得到零用錢的孩子●●●●●●●●●●
　英　文　及　格　●●●●●●●○○○
　數　學　及　格　○○○●●●●●●●

我覺得這兩個概念很像，所以順便寫在這裡，
我們直接來看在MariaDB裡，在不能直接支援FULL OUTER JOIN語法的情況下
要怎麼產生結果同樣的result set比較直接

MariaDB [testdb1]> SELECT * FROM employee LEFT OUTER JOIN department ON employee.DepartmentID = department.DepartmentID
    -> UNION
    -> SELECT * FROM employee RIGHT OUTER JOIN department ON employee.DepartmentID = department.DepartmentID;
+------------+--------------+--------------+----------------+
| LastName   | DepartmentID | DepartmentID | DepartmentName |
+------------+--------------+--------------+----------------+
| Rafferty   |           31 |           31 | Sales          |
| Jones      |           33 |           33 | Engineering    |
| Heisenberg |           33 |           33 | Engineering    |
| Robinson   |           34 |           34 | Clerical       |
| Smith      |           34 |           34 | Clerical       |
| Williams   |         NULL |         NULL | NULL           |
| NULL       |         NULL |           35 | Marketing      |
+------------+--------------+--------------+----------------+
7 rows in set (0.00 sec)

MariaDB [testdb1]>

即使MariaDB不支援FULL OUTER JOIN的語法
我們還是可以利用UNION的概念，運算出FULL OUTER JOIN應該有的結果result set
就是SQL指令寫長一點，感覺不是很優雅而已

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
37.產生演示SELF JOIN所需要的一個表格及資料

緊接著應該要示範的是SELF JOIN才對
可是要先產生適合示範用的表格和資料

root@cubie:~# pwd
/root
root@cubie:~# ls
data.sql  example.sql  mysql_client_settings.txt  sunxi-tools  vncpasswd
root@cubie:~# cat ./data.sql
CREATE TABLE tb_employee (
id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(20) NOT NULL,
country VARCHAR(20) NOT NULL,
DepartmentID INT(11)
);
 
INSERT INTO tb_employee VALUES(123,'Rafferty','Australia',31);
INSERT INTO tb_employee VALUES(124,'Jones','Australia',33);
INSERT INTO tb_employee VALUES(145,'Heisenberg','Australia',33);
INSERT INTO tb_employee VALUES(201,'Robinson','United States',34);
INSERT INTO tb_employee VALUES(305,'Smith','Germany',34);
INSERT INTO tb_employee VALUES(306,'Williams','Germany',NULL);
root@cubie:~# which mysql
/usr/local/mariadb/bin/mysql
root@cubie:~# mysql --defaults-file=./mysql_client_settings.txt
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 6
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> SHOW DATABASES;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb1            |
+--------------------+
4 rows in set (0.01 sec)

MariaDB [(none)]> USE testdb1;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| department        |
| employee          |
+-------------------+
2 rows in set (0.00 sec)

MariaDB [testdb1]> SOURCE /root/data.sql;
Query OK, 0 rows affected (0.33 sec)

Query OK, 1 row affected (0.05 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.09 sec)

Query OK, 1 row affected (0.09 sec)

Query OK, 1 row affected (0.04 sec)

Query OK, 1 row affected (0.04 sec)

MariaDB [testdb1]> SHOW TABLES;
+-------------------+
| Tables_in_testdb1 |
+-------------------+
| department        |
| employee          |
| tb_employee       |
+-------------------+
3 rows in set (0.00 sec)

MariaDB [testdb1]> DESCRIBE tb_employee;
+--------------+-------------+------+-----+---------+----------------+
| Field        | Type        | Null | Key | Default | Extra          |
+--------------+-------------+------+-----+---------+----------------+
| id           | int(11)     | NO   | PRI | NULL    | auto_increment |
| name         | varchar(20) | NO   |     | NULL    |                |
| country      | varchar(20) | NO   |     | NULL    |                |
| DepartmentID | int(11)     | YES  |     | NULL    |                |
+--------------+-------------+------+-----+---------+----------------+
4 rows in set (0.01 sec)

MariaDB [testdb1]> SELECT * FROM tb_employee;
+-----+------------+---------------+--------------+
| id  | name       | country       | DepartmentID |
+-----+------------+---------------+--------------+
| 123 | Rafferty   | Australia     |           31 |
| 124 | Jones      | Australia     |           33 |
| 145 | Heisenberg | Australia     |           33 |
| 201 | Robinson   | United States |           34 |
| 305 | Smith      | Germany       |           34 |
| 306 | Williams   | Germany       |         NULL |
+-----+------------+---------------+--------------+
6 rows in set (0.00 sec)

MariaDB [testdb1]>

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
38.SELF JOIN

MariaDB [testdb1]> SELECT f.id,f.name,s.id,s.name,f.country
    -> FROM tb_employee f INNER JOIN tb_employee s ON f.country = s.country
    -> WHERE f.id < s.id
    -> ORDER BY f.id,s.id;
+-----+----------+-----+------------+-----------+
| id  | name     | id  | name       | country   |
+-----+----------+-----+------------+-----------+
| 123 | Rafferty | 124 | Jones      | Australia |
| 123 | Rafferty | 145 | Heisenberg | Australia |
| 124 | Jones    | 145 | Heisenberg | Australia |
| 305 | Smith    | 306 | Williams   | Germany   |
+-----+----------+-----+------------+-----------+
4 rows in set (0.00 sec)

MariaDB [testdb1]>

只要兩個員工的country欄位值相同（兩個人來自相同的國家）
結果的result set就會包含以這兩個員工的id和name欄位值，再加上他們相同的country欄位值所產生的一條記錄列
和上面其他JOIN方式不同的是，這裡參加SELF JOIN運算的只有一個表格的資料
這個tb_employee分別被取了兩個alias別名，一個叫f一個叫s（first & second）
雖然指令裡還是覺得有兩個表格在參與運算，但是實際上只有一個表格的資料
還有使用了WHERE f.id < s.id是為了消除重複的配對記錄或是員工自已與自已配對的記錄（exclude duplicate pairings and self-pairings）
你可以把WHERE f.id < s.id的部分故意省略不打，再執行一次SQL指令看看
你就會立刻了解到它的作用了

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
