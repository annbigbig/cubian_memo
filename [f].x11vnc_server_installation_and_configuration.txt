f.安裝x11vnc服務器，並設定好開機自動執行，並使用ssh tunnel加密連線

參考資料來源：
http://terry.im/wiki/terry/Install%2Band%2BConfig%2BVNC%2BServer.html#InstallandConfigVNCServer-Ubuntu/Debian

登入Cubian之後，切換到root用戶身份
$ sudo -i

在終端機執行以下指令安裝x11vnc套件
# apt-get install x11vnc

安裝完成之後，再切換回預設用戶cubie的身分
# exit

切換到家目錄
$ cd ~

看一下現在的位置
$ pwd

終端機打印了
/home/cubie

看一下有沒有什麼叫作vnc的目錄
$ ls -al|grep vnc

終端機輸出的是空白，沒有，/home/cubie目錄裡沒有任何名字裡有vnc三個字的子目錄
現在來設定vnc密碼，執行
$ x11vnc -storepasswd

終端機打印了
Enter VNC password: 
Verify password:    
Write password to /home/cubie/.vnc/passwd?  [y]/n y
Password written to: /home/cubie/.vnc/passwd

我在剛才設定好了用戶cubie的vnc密碼
可以看一下
$ ls -al|grep vnc

終端機打印了
drwxr-xr-x  2 cubie cubie   4096 11月 14 02:46 .vnc

切換進這個.vnc子目錄，然後看看有什麼檔案？
$ cd .vnc
$ ls -al

終端機打印了
總計 12
drwxr-xr-x  2 cubie cubie 4096 11月 14 02:46 .
drwxr-xr-x 16 cubie cubie 4096 11月 14 02:46 ..
-rw-------  1 cubie cubie    8 11月 14 02:46 passwd

剛才設定的vnc密碼就存在這裡
現在要啟動vnc server，一樣還是用戶cubie的身分，請執行
$ x11vnc -safer -forever -display :0 -rfbauth /home/cubie/.vnc/passwd -rfbport 59000 -bg

如果要開log功能，就執行
$ x11vnc -safer -forever -display :0 -rfbauth /home/cubie/.vnc/passwd -rfbport 59000 -bg > /tmp/x11vnc.log 2>&1 &

這個時候隨便找一個有安裝vnc viewer的客戶端機器（例如我的筆記型電腦）就可以對Cubian使用vnc連線了
使用IP_Address:port這樣的地址來連線（例如：192.168.0.162:59000）
如果要讓Cubian在開機的時候於背景自動執行x11vnc，在x11vnc啟動之前，首先要讓X Server先啟動
這裡為了方便，直接讓Cubian在開機之後，以預設用戶cubie登入X window，不再詢問用戶名稱和密碼
請登入為root用戶，打開vi文字編輯器，修改/etc/slim.conf
# vi /etc/slim.conf
我只改了這兩行
auto_login          yes
default_user        cubie
修改完就存檔離開vi文字編輯器

剛才修改/etc/slim.conf的時候
可以看到這個檔案裡有一段設定是這樣
# This command is executed after a succesful login.
# it runs in root
login_success_cmd     exec /bin/bash /usr/lib/cubian/cubian-xinitrc-success %screen_width %screen_height 

所以我可以大概知道，如果用戶登入圖形介面之後
/usr/lib/cubian/cubian-xinitrc-success
這個檔案會被執行一次

所以再修改/usr/lib/cubian/cubian-xinitrc-success
在最後面加上這兩行
# x11vnc service autostart
x11vnc -safer -forever -display :0 -rfbauth /root/vncpasswd -rfbport 59000 -bg > /tmp/x11vnc.log 2>&1 &

複製剛才產生的vnc密碼檔，到root的家目錄下
# cp /home/cubie/.vnc/passwd /root/vncpasswd
# chown root:root /root/vncpasswd
# chmod 600 /root/vncpasswd

接下來把cubietruck重新開機，這一次一開機，就會以用戶cubie的身分自動登入圖形介面了
這是因為我們剛才在/etc/slim.conf修改的設定生效了
然後登入圖形介面之後，又會再自動執行一次
/usr/lib/cubian/cubian-xinitrc-success
這個檔案裡的最後兩行是我們剛才加上去的
接著x11vnc也在自動登入圖形介面之後，自動於埠號59000啟動了

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
額外的安全設定：使用ssh tunnel加密vnc連線

網路參數：
稍早前我又改變心意，把網路線接到CubieTruck的RJ45接口上了
所以網路參數現在是
Cubian機：192.168.0.160
筆記型電腦：192.168.0.12

參考資料：
http://www.karlrunge.com/x11vnc/#tunnelling
（作者寫得超長，不過我只有參考SSH method: If both users開頭下面那二十幾行…）
這一篇文章寫了幾個方法都可以建立加密通道
不過這個我一試就成，我也懶得去試其他的了，反正效果都一樣，有給我乖乖加密就好

動手之前先微調上面我們剛完成的/usr/lib/cubian/cubian-xinitrc-success
# vi /usr/lib/cubian/cubian-xinitrc-success

把裡面啟動x11vnc的那行指令改成這樣
x11vnc -safer -forever -display :0 -rfbauth /root/vncpasswd -localhost -rfbport 5900 -bg > /tmp/x11vnc.log 2>&1 &

這麼作是為了要讓x11vnc綁定在127.0.0.1:5900
改好之後請重新啟動Cubian機器之後，再作下面的動作，執行
# init 6

要建立ssh tunnel，必須要VNC Server（Cubian機）和VNC Viewer（筆記型電腦）同時議定一個port number
在這裡我假設是5933

在VNC Server這邊，也就是Cubian機器上，請以用戶cubie登入，然後執行
$ ssh -p36000 -t -R 5933:localhost:5900 cubie@localhost

在VNC Viewer這邊，也就是筆記型電腦上，請以用戶anntony身分登入，然後執行
$ cd /home/anntony/.ssh/cubian
$ ssh -p36000 -i ./cubie@cubian.private.key -t -L 5900:localhost:5933 cubie@192.168.0.160

這樣就可以了，然後我們在筆記型電腦上面打開遠端桌面檢視器 vinagre
對著這個地址作連線
127.0.0.1:5900

按下連線之後，大功告成
值得注意的是，在VNC Server端還有VNC Client端我們都各自執行了一個ssh指令
如果其中一邊退出了ssh登入，那麼你在筆記型電腦上，就再不能使用127.0.0.1:5900來連到Cubian機器上運行的VNC Server了

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
