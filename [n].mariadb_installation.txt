n.安裝MariaDB

需要完成的工作列表：
1.安裝cmake
2.安裝MariaDB
3.為什麼最新的stable release是10.0.15，可是我在這裡卻安裝10.0.14？

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
1.安裝cmake

參考資料：
http://www.cmake.org/install/

登入為root身分之後
# cd /usr/local/src
# wget http://www.cmake.org/files/v3.0/cmake-3.0.2.tar.gz
# tar zxvf ./cmake-3.0.2.tar.gz
# cd cmake-3.0.2
# ./bootstrap
# make
# ln -s /usr/local/src/cmake-3.0.2/bin/cmake /usr/local/sbin/cmake
# ln -s /usr/local/src/cmake-3.0.2/bin/ctest /usr/local/sbin/ctest
# ln -s /usr/local/src/cmake-3.0.2/bin/cpack /usr/local/sbin/cpack

這樣就安裝好cmake了

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
2.安裝MariaDB

參考資料：
http://www.linuxfromscratch.org/blfs/view/svn/server/mariadb.html

安裝依賴套件
# apt-get install libncurses5-dev
# apt-get install bison

新增mysql用戶及mysql群組
# groupadd -g 400 mysql
# useradd -c "MySQL Server" -d /srv/mysql -g mysql -s /bin/false -u 400 mysql

安裝了，細節不解釋了
# cd /usr/local/src
# wget ftp://mirrors.fe.up.pt/pub/mariadb/mariadb-10.0.14/source/mariadb-10.0.14.tar.gz
# tar zxvf ./mariadb-10.0.14.tar.gz
# cd mariadb-10.0.14
# sed -i "s@data/test@\${INSTALL_MYSQLTESTDIR}@g" sql/CMakeLists.txt
# sed -i "s/srv_buf_size/srv_sort_buf_size/" storage/innobase/row/row0log.cc
# cmake -DCMAKE_BUILD_TYPE=Release                       \
      -DCMAKE_INSTALL_PREFIX=/usr/local/mariadb-10.0.14 \
      -DINSTALL_DOCDIR=share/doc/mariadb-10.0.14       \
      -DINSTALL_DOCREADMEDIR=share/doc/mariadb-10.0.14 \
      -DINSTALL_MANDIR=share/man                       \
      -DINSTALL_MYSQLSHAREDIR=share/mysql              \
      -DINSTALL_MYSQLTESTDIR=share/mysql/test          \
      -DINSTALL_PLUGINDIR=lib/mysql/plugin             \
      -DINSTALL_SBINDIR=sbin                           \
      -DINSTALL_SCRIPTDIR=bin                          \
      -DINSTALL_SQLBENCHDIR=share/mysql/bench          \
      -DINSTALL_SUPPORTFILESDIR=share/mysql            \
      -DMYSQL_DATADIR=/srv/mysql                       \
      -DMYSQL_UNIX_ADDR=/run/mysqld/mysqld.sock        \
      -DWITH_EXTRA_CHARSETS=complex                    \
      -DWITH_EMBEDDED_SERVER=ON                        \
      -DTOKUDB_OK=0

# make
# make test
# make install

安裝完成之後，設定一下目錄的權限值、擁有人及群組，然後作個Symbolic Link
# cd /usr/local
# chmod -R g-s ./mariadb-10.0.14
# chmod -R g+w ./mariadb-10.0.14
# chown -R mysql:mysql ./mariadb-10.0.14
# ln -s mariadb-10.0.14 mariadb

產生my.cnf設定檔
# touch /etc/my.cnf
# vi /etc/my.cnf

內容如下：
### Begin /etc/my.cnf

# The following options will be passed to all MySQL clients
[client]
#password       = your_password
port            = 3306
socket          = /run/mysqld/mysqld.sock
# this variable below is deprecated from mysql 5.0 and shouldn't be enabled
# default-character-set=utf8

# The MySQL server
[mysqld]
bind-address    = 127.0.0.1
#bind-address    = 192.168.0.160
port            = 3306
socket          = /run/mysqld/mysqld.sock
datadir         = /srv/mysql
skip-external-locking
key_buffer_size = 16M
max_allowed_packet = 1M
sort_buffer_size = 512K
net_buffer_length = 16K
myisam_sort_buffer_size = 8M

# Don't listen on a TCP/IP port at all.
#skip-networking

# required unique id between 1 and 2^32 - 1
server-id       = 1

# Uncomment the following if you are using BDB tables
#bdb_cache_size = 4M
#bdb_max_lock = 10000

# Uncomment the following if you are using InnoDB tables
#innodb_data_home_dir = /srv/mysql
#innodb_data_file_path = ibdata1:10M:autoextend
#innodb_log_group_home_dir = /srv/mysql
# You can set .._buffer_pool_size up to 50 - 80 %
# of RAM but beware of setting memory usage too high
#innodb_buffer_pool_size = 16M
#innodb_additional_mem_pool_size = 2M
# Set .._log_file_size to 25 % of buffer pool size
#innodb_log_file_size = 5M
#innodb_log_buffer_size = 8M
#innodb_flush_log_at_trx_commit = 1
#innodb_lock_wait_timeout = 50

# don't waste time to check domain name's validity
skip-name-resolv=1

# charset utf8
# --- my earier settings ---
#collation-server = utf8_unicode_ci
#init-connect='SET NAMES utf8'
#character-set-server = utf8
# --- utf8 settings begin ---
init_connect=‘SET collation_connection = utf8_unicode_ci’
init_connect=‘SET NAMES utf8’
character-set-server=utf8
collation-server=utf8_unicode_ci
skip-character-set-client-handshake
# --- utf8 settings end ---

# enable binary log files
log_bin = /srv/mysql/mariadb-binary-logs

[mysqldump]
quick
max_allowed_packet = 16M

[mysql]
no-auto-rehash
# Remove the next comment character if you are not familiar with SQL
#safe-updates
# this variable below is deprecated from mysql 5.0 and shouldn't be enabled
# default-character-set=utf8

[isamchk]
key_buffer = 20M
sort_buffer_size = 20M
read_buffer = 2M
write_buffer = 2M

[myisamchk]
key_buffer_size = 20M
sort_buffer_size = 20M
read_buffer = 2M
write_buffer = 2M

[mysqlhotcopy]
interactive-timeout

# End /etc/my.cnf
貼上，然後存檔離開vi文字編輯器

為mariadb產生系統資料庫
# cd /usr/local/mariadb/bin
# ./mysql_install_db --basedir=/usr/local/mariadb --datadir=/srv/mysql --user=mysql

終端機輸出了
Installing MariaDB/MySQL system tables in '/srv/mysql' ...
141129 15:36:02 [Note] InnoDB: Using mutexes to ref count buffer pool pages
141129 15:36:02 [Note] InnoDB: The InnoDB memory heap is disabled
141129 15:36:02 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
141129 15:36:02 [Note] InnoDB: GCC builtin __sync_synchronize() is used for memory barrier
141129 15:36:02 [Note] InnoDB: Compressed tables use zlib 1.2.7
141129 15:36:02 [Note] InnoDB: Not using CPU crc32 instructions
141129 15:36:02 [Note] InnoDB: Initializing buffer pool, size = 128.0M
141129 15:36:02 [Note] InnoDB: Completed initialization of buffer pool
141129 15:36:02 [Note] InnoDB: The first specified data file ./ibdata1 did not exist: a new database to be created!
141129 15:36:02 [Note] InnoDB: Setting file ./ibdata1 size to 12 MB
141129 15:36:02 [Note] InnoDB: Database physically writes the file full: wait...
141129 15:36:03 [Note] InnoDB: Setting log file ./ib_logfile101 size to 48 MB
141129 15:36:04 [Note] InnoDB: Setting log file ./ib_logfile1 size to 48 MB
141129 15:36:06 [Note] InnoDB: Renaming log file ./ib_logfile101 to ./ib_logfile0
141129 15:36:06 [Warning] InnoDB: New log files created, LSN=45781
141129 15:36:06 [Note] InnoDB: Doublewrite buffer not found: creating new
141129 15:36:06 [Note] InnoDB: Doublewrite buffer created
141129 15:36:06 [Note] InnoDB: 128 rollback segment(s) are active.
141129 15:36:06 [Warning] InnoDB: Creating foreign key constraint system tables.
141129 15:36:07 [Note] InnoDB: Foreign key constraint system tables created
141129 15:36:07 [Note] InnoDB: Creating tablespace and datafile system tables.
141129 15:36:07 [Note] InnoDB: Tablespace and datafile system tables created.
141129 15:36:07 [Note] InnoDB: Waiting for purge to start
141129 15:36:07 [Note] InnoDB:  Percona XtraDB (http://www.percona.com) 5.6.20-68.0 started; log sequence number 0
141129 15:36:12 [Note] InnoDB: FTS optimize thread exiting.
141129 15:36:12 [Note] InnoDB: Starting shutdown...
141129 15:36:14 [Note] InnoDB: Shutdown completed; log sequence number 1616697
OK
Filling help tables...
141129 15:36:14 [Note] InnoDB: Using mutexes to ref count buffer pool pages
141129 15:36:14 [Note] InnoDB: The InnoDB memory heap is disabled
141129 15:36:14 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
141129 15:36:14 [Note] InnoDB: GCC builtin __sync_synchronize() is used for memory barrier
141129 15:36:14 [Note] InnoDB: Compressed tables use zlib 1.2.7
141129 15:36:14 [Note] InnoDB: Not using CPU crc32 instructions
141129 15:36:14 [Note] InnoDB: Initializing buffer pool, size = 128.0M
141129 15:36:14 [Note] InnoDB: Completed initialization of buffer pool
141129 15:36:14 [Note] InnoDB: Highest supported file format is Barracuda.
141129 15:36:14 [Note] InnoDB: 128 rollback segment(s) are active.
141129 15:36:14 [Note] InnoDB: Waiting for purge to start
141129 15:36:14 [Note] InnoDB:  Percona XtraDB (http://www.percona.com) 5.6.20-68.0 started; log sequence number 1616697
141129 15:36:15 [Note] InnoDB: FTS optimize thread exiting.
141129 15:36:15 [Note] InnoDB: Starting shutdown...
141129 15:36:16 [Note] InnoDB: Shutdown completed; log sequence number 1616707
OK

To start mysqld at boot time you have to copy
support-files/mysql.server to the right place for your system

PLEASE REMEMBER TO SET A PASSWORD FOR THE MariaDB root USER !
To do so, start the server, then issue the following commands:

'/usr/local/mariadb/bin/mysqladmin' -u root password 'new-password'
'/usr/local/mariadb/bin/mysqladmin' -u root -h cubie password 'new-password'

Alternatively you can run:
'/usr/local/mariadb/bin/mysql_secure_installation'

which will also give you the option of removing the test
databases and anonymous user created by default.  This is
strongly recommended for production servers.

See the MariaDB Knowledgebase at http://mariadb.com/kb or the
MySQL manual for more instructions.

You can start the MariaDB daemon with:
cd '/usr/local/mariadb' ; /usr/local/mariadb/bin/mysqld_safe --datadir='/srv/mysql'

You can test the MariaDB daemon with mysql-test-run.pl
cd '/usr/local/mariadb/mysql-test' ; perl mysql-test-run.pl

Please report any problems at http://mariadb.org/jira

The latest information about MariaDB is available at http://mariadb.org/.
You can find additional information about the MySQL part at:
http://dev.mysql.com
Support MariaDB development by buying support/new features from
SkySQL Ab. You can contact us about this at sales@skysql.com.
Alternatively consider joining our community based development effort:
http://mariadb.com/kb/en/contributing-to-the-mariadb-project/

修改剛才產生的系統資料庫的擁有人和群組
# chown -R mysql:mysql /srv/mysql

現在照著剛才上面那一大串英文訊息來作
複製init script到 /etc/init.d
# cd /usr/local/src/mariadb-10.0.14/support-files
# cp ./mysql.server /etc/init.d/mysql
# cd /etc/init.d
# chmod +x /etc/init.d/mysql

修改一下系統的root用戶的.bashrc
# vi /root/.bashrc

在最後面加上這三行
# This is for MariaDB
PATH=$PATH:/usr/local/mariadb/bin:/usr/local/mariadb/sbin
export PATH
改完就存檔，離開vi文字編輯器，然後登出，再以root身分登入一次
上面的這三行設定才會生效

啟動MariaDB
# service mysql start

確認一下是不是真的啟動MariaDB了？
# service mysql status

終端機打印了
[ ok ] MySQL running (4138).

看看3306埠有沒有在監聽？
# netstat -anp|grep mysql

終端機打印了
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      4138/mysqld     
unix  2      [ ACC ]     STREAM     LISTENING     87329    4138/mysqld         /run/mysqld/mysqld.sock

設定mariadb的root用戶密碼，以及一些額外的安全設定
# mysql_secure_installation

和終端機交談一下
/usr/local/mariadb/bin/mysql_secure_installation: 379: /usr/local/mariadb/bin/mysql_secure_installation: find_mysql_client: not found

NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

In order to log into MariaDB to secure it, we'll need the current
password for the root user.  If you've just installed MariaDB, and
you haven't set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none): 
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MariaDB
root user without the proper authorisation.

Set root password? [Y/n] y
New password: 
Re-enter new password: 
Password updated successfully!
Reloading privilege tables..
 ... Success!


By default, a MariaDB installation has an anonymous user, allowing anyone
to log into MariaDB without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] y
 ... Success!

Normally, root should only be allowed to connect from 'localhost'.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] y
 ... Success!

By default, MariaDB comes with a database named 'test' that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] y
 - Dropping test database...
 ... Success!
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] y
 ... Success!

Cleaning up...

All done!  If you've completed all of the above steps, your MariaDB
installation should now be secure.

Thanks for using MariaDB!

這樣大致上完成了MariaDB的安裝
現在用mysql client端指令去連MariaDB Server試試
直接給出終端機操作的輸出，如下：

root@cubie:~# which mysql
/usr/local/mariadb/bin/mysql
root@cubie:~# mysql -u root -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 11
Server version: 10.0.14-MariaDB Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
+--------------------+
3 rows in set (0.00 sec)

MariaDB [(none)]> help

General information about MariaDB can be found at
http://mariadb.org

List of all MySQL commands:
Note that all text commands must be first on line and end with ';'
?         (\?) Synonym for `help'.
clear     (\c) Clear the current input statement.
connect   (\r) Reconnect to the server. Optional arguments are db and host.
delimiter (\d) Set statement delimiter.
edit      (\e) Edit command with $EDITOR.
ego       (\G) Send command to mysql server, display result vertically.
exit      (\q) Exit mysql. Same as quit.
go        (\g) Send command to mysql server.
help      (\h) Display this help.
nopager   (\n) Disable pager, print to stdout.
notee     (\t) Don't write into outfile.
pager     (\P) Set PAGER [to_pager]. Print the query results via PAGER.
print     (\p) Print current command.
prompt    (\R) Change your mysql prompt.
quit      (\q) Quit mysql.
rehash    (\#) Rebuild completion hash.
source    (\.) Execute an SQL script file. Takes a file name as an argument.
status    (\s) Get status information from the server.
system    (\!) Execute a system shell command.
tee       (\T) Set outfile [to_outfile]. Append everything into given outfile.
use       (\u) Use another database. Takes database name as argument.
charset   (\C) Switch to another charset. Might be needed for processing binlog with multi-byte charsets.
warnings  (\W) Show warnings after every statement.
nowarning (\w) Don't show warnings after every statement.

For server side help, type 'help contents'

MariaDB [(none)]> use mysql;
Database changed
MariaDB [mysql]> show tables;
+---------------------------+
| Tables_in_mysql           |
+---------------------------+
| column_stats              |
| columns_priv              |
| db                        |
| event                     |
| func                      |
| general_log               |
| gtid_slave_pos            |
| help_category             |
| help_keyword              |
| help_relation             |
| help_topic                |
| host                      |
| index_stats               |
| innodb_index_stats        |
| innodb_table_stats        |
| plugin                    |
| proc                      |
| procs_priv                |
| proxies_priv              |
| roles_mapping             |
| servers                   |
| slow_log                  |
| table_stats               |
| tables_priv               |
| time_zone                 |
| time_zone_leap_second     |
| time_zone_name            |
| time_zone_transition      |
| time_zone_transition_type |
| user                      |
+---------------------------+
30 rows in set (0.00 sec)

MariaDB [mysql]> exit
Bye

最後就是把MariaDB設定為開機自動啟動的服務
# update-rc.d mysql defaults

終端機輸出了
update-rc.d: using dependency based boot sequencing

接著就重新啟動Cubian，看看MariaDB有沒有開機自動啟動服務？
# init 6

重新開機完畢，以root用戶登入之後，執行
# netstat -anp | grep mysql

終端機打印了
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      2597/mysqld     
unix  2      [ ACC ]     STREAM     LISTENING     3928     2597/mysqld         /run/mysqld/mysqld.sock

耶耶耶，大功告成

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
3.為什麼最新的stable release是10.0.15，可是我在這裡卻安裝10.0.14？

原因是：最新的10.0.15版本編譯到44%的時候無法再繼續
所以我只好改下載10.0.14版
這是那個時候編譯失敗時所產生的訊息，還是保留下來作個紀念
我試著以inuse_relaylog_atomic_lock當作關鍵字，用Google搜尋
結果只出來了5個結果，都點進去看了，可是沒有理出頭緒
但是10.0.14版編譯的時候，並不會產生這樣的問題，所以就用上一個版本10.0.14來安裝
[ 44%] Building C object sql/CMakeFiles/sql.dir/__/sql-common/mysql_async.c.o
[ 44%] Building CXX object sql/CMakeFiles/sql.dir/my_apc.cc.o
[ 44%] Building CXX object sql/CMakeFiles/sql.dir/rpl_gtid.cc.o
[ 44%] Building CXX object sql/CMakeFiles/sql.dir/rpl_parallel.cc.o
/usr/local/src/mariadb-10.0.15/sql/rpl_parallel.cc: In member function ‘void rpl_parallel_thread::inuse_relaylog_refcount_update()’:
/usr/local/src/mariadb-10.0.15/sql/rpl_parallel.cc:1126:5: error: ‘class Relay_log_info’ has no member named ‘inuse_relaylog_atomic_lock’
/usr/local/src/mariadb-10.0.15/sql/rpl_parallel.cc:1128:5: error: ‘class Relay_log_info’ has no member named ‘inuse_relaylog_atomic_lock’
make[2]: *** [sql/CMakeFiles/sql.dir/rpl_parallel.cc.o] Error 1
make[1]: *** [sql/CMakeFiles/sql.dir/all] Error 2
make: *** [all] Error 2
