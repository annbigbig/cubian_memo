安裝並設定phpmyadmin

工作列表
1.下載phpmyadmin並解開到適當目錄
2.自簽一張免錢的SSL certificate待用
3.設定nginx服務器傾聽443端口
4.將nginx服務器的127.0.0.1:443與客戶端機器的127.0.0.1:443對接
5.第一次連入phpmyadmin設定網頁介面，使用網頁介面來設定config.inc.php
6.使用文字編輯器設定config.inc.php
7.一般用戶使用phpmyadmin網頁介面，登入mariadb之後會一直看到一個information_schema資料庫，可以隱藏它嗎？
8.該死的「尚未設定 phpMyAdmin 設定儲存空間，部份延伸功能將無法使用 [了解原因]」
9.向godaddy購買SSL證書，一直到把我的nginx服務器安裝上SSL證書的過程大概是怎樣？

細節
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
1.下載phpmyadmin並解開到適當目錄

在cubian機器上
下載phpmyadmin
下載的網址是
http://www.phpmyadmin.net/home_page/index.php

下載後得到一個
phpMyAdmin-4.3.8-all-languages.zip
我將它複製到/tmp目錄中
然後執行下列指令解壓縮它
# unzip /tmp/phpMyAdmin-4.3.8-all-languages.zip -d /tmp

將整個目錄裡的所有檔案和子目錄的擁有人變更成root，而群組變更成www-data
# chown -R root:www-data /tmp/phpMyAdmin-4.3.8-all-languages

將所有檔案及子目錄的擁有人權限及群組權限加上w
# chmod -R u+w /tmp/phpMyAdmin-4.3.8-all-languages
# chmod -R g+w /tmp/phpMyAdmin-4.3.8-all-languages

整個目錄移到/usr/local/nginx目錄下面
並更名為phpmyadmin-4.3.8
# mv /tmp/phpMyAdmin-4.3.8-all-languages /usr/local/nginx/phpmyadmin-4.3.8

在/usr/local/nginx目錄下作一個叫作phpmyadmin的symlink指向phpmyadmin-4.3.8
# ln -s /usr/local/nginx/phpmyadmin-4.3.8 /usr/local/nginx/phpmyadmin

建立一個config子目錄
並修改擁有人、群組及權限
# cd /usr/local/nginx/phpmyadmin
# mkdir config
# chown root:www-data ./config
# chmod 775 ./config

為什麼要建立config子目錄？
如果沒有建立/usr/local/nginx/phpmydmin/config 子目錄
稍後進入
https://localhost/setup
phpmyadmin設定頁面的時候
會看到

紅色的驚嘆號
無法載入或儲存設定
請在 phpMyAdmin 的根資料夾下建立 檔案中所述的網站伺服器可以寫入的 config 資料夾。否則您只能下載或顯示設定。
 
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
2.自簽一張免錢的SSL certificate待用

通常來說
SSL certificate應該要老老實實花錢買的
向godaddy.com買
或是淘寶上面也有賣一些很便宜的
SSL證書從便宜到貴有分成三個等級
DV、OV、EV
分別是
Domain Validation
Organization Validation
Extended Validation
的縮寫
如果是金融類或是電子商務之類的
需要用到很貴很高級的EV等級的SSL證書
那可以使瀏覽器的地址欄變成綠色的
然後顧客連到這個網站之後就會覺得這個網站起來很值得信任的感覺 (大概吧)
便宜一點的就OV等級
最便宜是DV等級
除了這三個等級之外
似乎也有免費的SSL證書
使用
「SSL 證書 等級 價錢」
當作關鍵字搜尋Google
可以找到很多資料
像是我的偶像保哥寫的
http://blog.miniasp.com/post/2010/03/02/The-Complete-Guide-for-Purchase-Install-SSL-Certificate-to-IIS7.aspx
內地的網友
http://qiaodahai.com/cheapest-ssl-certificates.html
稍微看一下之後，對SSL證書會有一個粗略的認識
在這裡我要自簽一張免錢的SSL證書給我的nginx服務器
瀏覽器連https的時候，網址列會跳出很可怕的紅色叉叉
不過沒差啦
這是測試用的nginx服務器
而且我連的是內網reverse IP的
https://192.168.0.160
是在怕什麼啦紅叉就紅叉
廢言說完了
來產生自簽的SSL certificate吧
執行
# cd /usr/local/nginx
# mkdir ssl
# chown root:www-data /usr/local/nginx/ssl
# cd ssl
# openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./www.kashu.com.key -out ./www.kashu.com.crt

接著回答一些問題
Generating a 2048 bit RSA private key
...................................................+++
............................................................................+++
writing new private key to './www.kashu.com.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:TW
State or Province Name (full name) [Some-State]:Taipei
Locality Name (eg, city) []:SanZi
Organization Name (eg, company) [Internet Widgits Pty Ltd]:KunAn Hsu,Inc.
Organizational Unit Name (eg, section) []:Development Department
Common Name (e.g. server FQDN or YOUR name) []:www.kashu.com
Email Address []:annbigbig@gmail.com
root@cubie:/usr/local/nginx/ssl#

看一下是不是真的產生了key和crt檔案？
# ls -al

終端機打印了
總計 16
drwxr-xr-x  2 root www-data 4096  1月 29 01:38 .
drwxrwxr-x 13 root www-data 4096  1月 29 01:34 ..
-rw-r--r--  1 root root     1489  1月 29 01:38 www.kashu.com.crt
-rw-r--r--  1 root root     1708  1月 29 01:38 www.kashu.com.key

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
3.設定nginx服務器

修改我的/usr/local/nginx/conf/nginx.conf
在最後面加入這個區塊

# testing virtual host - localhost (for phpmyadmin)
    server {
      server_name localhost;
      listen 127.0.0.1:443 ssl;
      ssl_certificate /usr/local/nginx/ssl/www.kashu.com.crt;
      ssl_certificate_key /usr/local/nginx/ssl/www.kashu.com.key;
      root /usr/local/nginx/phpmyadmin;
      access_log  logs/phpadmin.access.log combined;
      error_log   logs/phpadmin.error.log;     

      location / {
         index index.php index.html index.htm;
      }

       # follow the PHP official website's instructions
      location ~* \.php$ {
           fastcgi_index   index.php;
           fastcgi_pass    127.0.0.1:9000;
           include         fastcgi_params;
           fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
           fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
      }
    }

改完之後
檢查nginx.conf設定檔的語法是否正確
# cd /usr/local/nginx
# sbin/nginx -t -c conf/nginx.conf

如果看到終端機回答
nginx: the configuration file /usr/local/nginx-1.6.2/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx-1.6.2/conf/nginx.conf test is successful

就表示沒問題
可以重新啟動nginx服務器，讓新的設定值生效
執行
# service nginx restart

這樣就可以了
現在nginx服務器可以服務下列URL的要求
https://localhost
或是
https://127.0.0.1
但是前提是，瀏覽器必須在127.0.0.1也就是localhost也就是Cubian機器上開啟
為什麼呢？為什麼
因為
root@cubie:/usr/local/nginx# netstat -anp|grep nginx
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      4619/nginx      
tcp        0      0 127.0.0.1:443           0.0.0.0:*               LISTEN      4619/nginx      
unix  3      [ ]         STREAM     CONNECTED     2201551  4619/nginx          
unix  3      [ ]         STREAM     CONNECTED     2201550  4619/nginx          
root@cubie:/usr/local/nginx# 

或是在遠端用ssh tunnel
將筆記型電腦的443端口和Cubian nginx服務器的127.0.0.1:443端口對接
這麼作的原因是因為我不想讓隨便一個人
都可以連到我的phpmyadmin首頁，然後在登入頁面猜帳號和密碼，一直猜到對為止

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
4.將nginx服務器的127.0.0.1:443與客戶端機器的127.0.0.1:443對接

客戶端機器就是筆記型電腦
我要再次使用ssh tunnel來對接
在筆記型電腦上以用戶anntony身分執行
$ ssh -p36000 -i ./cubie@cubian.private.key -L 443:127.0.0.1:443 cubie@192.168.0.160 -N
然後終端機很爽快的給了我一句
Privileged ports can only be forwarded by root.
我突然想起了什麼，於是我用「ssh tunnel port 1024」當作關鍵字，搜尋了Google
找到了這一篇
http://www.linuxhorizon.ro/ssh-tunnel.html
裡面的重點句
1. Privileged ports (localport lower then 1024) can only be forwarded by root. 
明白說了如果要在本地機的小於1024的端口，和遠端的主機其他端口作對應，只有root用戶可以這樣作
所以你可以切換成root用戶，再執行上面一模一樣的指令，或是在指令前面加上sudo執行，指令是
$ sudo ssh -p36000 -i ./cubie@cubian.private.key -L 443:127.0.0.1:443 cubie@192.168.0.160 -N
然後終端機會要求輸入用戶anntony的密碼
[sudo] password for anntony: 
按下Enter鍵後，終端機會咬死在那裡，不要以為它死了，因為我加了-N，我要求它不必給出login shell
另外開一個終端機，然後
anntony@anntony-Lenovo-B590 ~ $ netstat -anp|grep 127.0.0.1
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      -               
tcp        0      0 127.0.0.1:443           0.0.0.0:*               LISTEN      -               
tcp        0      0 127.0.0.1:36251         127.0.0.1:5900          TIME_WAIT   -               
udp        0      0 127.0.0.1:619           0.0.0.0:*                           -               
anntony@anntony-Lenovo-B590 ~ $

看到127.0.0.1:443那一行了嗎？
好的，這樣就把遠端Cubian機器上運行的127.0.0.1:443，成功的和自已本地機也就是筆記型電腦的127.0.0.1:443對接了
現在你可以在筆記型電腦上打開瀏覽器，在網址列輸入
https://localhost/
或是
https://127.0.0.1/
遠端操作phpmyadmin了

稍後會補上在PuTTY裡面要怎麼弄
應該是把
/usr/bin/putty
這個執行檔加上SUID權限
讓它可以用root用戶身分執行 
(執行/usr/bin/putty的人是登入系統的anntony，可是有了SUID卻會被當作是用root用戶的身分來執行的)
因為只有變成root用戶，才可以將遠方主機的端口綁到本地機的privileged port (小於1024的端口)
稍後回來我會實驗它

首先實驗
使用筆記型電腦上的用戶anntony身分
開啟PuTTY軟件
有沒有辦法將Cubian機器的127.0.0.1:443綁到筆記型電腦上的127.0.0.1:443
調出稍早前儲存的「ssh_tunnel_to_192.168.0.160」那組設定
在PuTTY軟件首頁選這組設定，然後按下右方中間的「Load」鈕
請參考
https://github.com/annbigbig/cubian_memo/blob/master/%5Bf%5D.x11vnc_server_installation_and_configuration.txt

在PuTTY軟件左側選單的
Connection > SSH > Tunnels
右方面板的
Add new Forwarded port:
的下方
Source port輸入443
Destination輸入127.0.0.1:443 (這是遠端的Cubian機器)
然後按下「Add」鈕
把這個對應關系加到Forwarded ports:列表中
然後回到首頁把這個設定變更給存檔
最後按下「Open」鈕，實際建立ssh tunnel
接著我打開筆記型電腦的終端機
執行
anntony-Lenovo-B590 ~ # netstat -anp|grep 127.0.0.1
tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      2325/cupsd      
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      7016/putty      
tcp        0      0 127.0.0.1:5900          0.0.0.0:*               LISTEN      7016/putty      
udp        0      0 127.0.0.1:619           0.0.0.0:*                           867/rpc.statd   
anntony-Lenovo-B590 ~ #
結果如同之前說的
遠端Cubian機器的443端口，並沒有被綁來筆記型電腦上
這裡只有3306端口和5900端口被綁來
所以現在我們要把PuTTY軟件的執行檔
也就是
/usr/bin/putty
加上一個SUID permisstion
之後不管是筆記型電腦上的那一個用戶執行PuTTY軟件
都會被視同是用root用戶的身分執行的
這樣就可以把遠端Cubian機器的127.0.0.1:443端口
綁來自已的127.0.0.1:443端口
因為443小於1024，是一個Priviledge Port，是一個特權端口只有root用戶能命令它被傾聽
關於SUID的說明
可以參考
http://www.linuxnix.com/2011/12/suid-set-suid-linuxunix.html
也有中文資料
http://bunkera.pixnet.net/blog/post/24390497-sticky_bit%E3%80%81suid%E3%80%81sguid%E4%B9%8B%E8%AA%AA%E6%98%8E%E8%88%87%E4%BD%BF%E7%94%A8

首先看一下筆記型電腦上的/usr/bin/putty原來的檔案擁有人、群組、和權限值是什麼？
# ls -al /usr/bin/putty
-rwxr-xr-x 1 root root 826304  4月  9  2014 /usr/bin/putty

現在給它加入SUID
# chmod u+s /usr/bin/putty

看一下現在的權限變成怎樣？
# ls -al /usr/bin/putty

終端機回應了
-rwsr-xr-x 1 root root 826304  4月  9  2014 /usr/bin/putty

現在再重複一次上面的動作，在筆記型電腦上把PuTTY軟件打開
然後再一次嘗試把遠端Cubian機器上面的127.0.0.1:443綁定到本地的127.0.0.1:443
往上面稍微捲一下就可以看到怎麼作的
所以我不再重複
不過
因為我照著一般的方式
在Menu > 網際網路 > PuTTY SSH Client
想要打開PuTTY軟件
卻完全不能開啟了
於是我
在終端機試著以用戶anntony身分打開PuTTY軟件的時候
得到了這個訊息
anntony@anntony-Lenovo-B590 ~ $ putty

(process:8755): Gtk-WARNING **: This process is currently running setuid or setgid.
This is not a supported use of GTK+. You must create a helper
program instead. For further details, see:

    http://www.gtk.org/setuid.html

Refusing to initialize GTK+.
我TM真的快瘋了
這也不行那也不行
只好把/usr/bin/putty的SUID權限拔除，讓它回復原狀
# chmod u-s /usr/bin/putty
# ls -al /usr/bin/putty
-rwxr-xr-x 1 root root 826304  4月  9  2014 /usr/bin/putty

這樣一切又回到原點
可是我又想
我會不會想得太複雜了？
乾脆就直接在筆記型電腦上sudo -i成為root用戶，然後在終端機下面把PuTTY打開
這樣是不是就可以把遠端的Cubian機器的127.0.0.1:443給綁定在本地機的127.0.0.1:443了呢？
試吧
就執行
# putty
因為我拔掉SUID了，所以這一次順利打開了PuTTY軟件
然後重複上面我建立ssh tunnel的步驟
要注意的是原來在用戶anntony身分建立的那些PuTTY軟件的快速設定值都不見了
因為那是用戶anntony的
現在我是用戶root
所以全部都要重新輸入
首頁的
Host Name (or IP address)輸入192.168.0.160
Port輸入36000
左邊選Connection > Data
在右邊的
Auto-login username輸入用戶名稱cubie
左邊再選Connection > SSH > Auth
在右邊的Private key file authentication旁邊按下「Browse」鈕
選擇/root/cubie@192.168.0.160.ppk (我先將它從/home/anntony/.ssh/cubian/cubie@192.168.0.160.ppk複製過來了)
左邊再選Connection > SSH > Tunnels
在右邊的Add new forwarded port:的下方
Source port輸入3306
Destination輸入127.0.0.1:3306
按下右邊的「Add」鈕
Source port輸入5900
Destination輸入127.0.0.1:5900
按下右邊的「Add」鈕
Source port輸入443
Destination輸入127.0.0.1:443
按下右邊的「Add」鈕
完成這三組端口綁定之後
回到首頁把這組設定值存成ssh_tunnel_to_192.168.0.160，然後按下「Save」鈕
下次就直接選這組設定，然後按下「Load」鈕，就可以直接拉出來用
現在設定都完成了，在按下「Open」鈕建立ssh tunnel之前
先看看本地關於127.0.0.1上面傾聽的端口號
anntony-Lenovo-B590 ~ # netstat -anp|grep 127.0.0.1
tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      2325/cupsd      
udp        0      0 127.0.0.1:619           0.0.0.0:*                           867/rpc.statd   
anntony-Lenovo-B590 ~ # 
現在按下PuTTY軟件的「Open」鈕，試著與Cubian機器建立ssh tunnel
跳出了一大串
The server's host key is not cached. You have no guarantee
that the server is the computer you think it is.
The server's rsa2 key fingerprint is:
ssh-rsa 2048 fa:4b:f7:0b:ae:4c:4b:b1:40:4d:48:70:97:fc:b5:a2
If you trust this host,press "Accept" to add the key to 
PuTTY's cache and carry on connecting.
If you want to carry on connecting just once, without adding
the key to the cache,press "Connect Once".
If you do not trust this host,press "Cancel" to abandon the
connection

          Accept          Connect Once          Cancel

會跳出這個訊息是因為
筆記型電腦第一次用root用戶的身分，使用PuTTY軟件對Cubian機器進行ssh連線
選擇Accept
建立連線後
然後再次查看本地127.0.0.1上面傾聽的端口號
# netstat -anp|grep 127.0.0.1
tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      2325/cupsd      
tcp        0      0 127.0.0.1:443           0.0.0.0:*               LISTEN      9316/putty      
tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN      9316/putty      
tcp        0      0 127.0.0.1:5900          0.0.0.0:*               LISTEN      9316/putty      
udp        0      0 127.0.0.1:619           0.0.0.0:*                           867/rpc.statd   
anntony-Lenovo-B590 tmp # 

哇靠，終於成功了
累個半死
接著可以在筆記型電腦上打開瀏覽器
試連一下網址
https://127.0.0.1/
還有打開MySQL workbench試連一下127.0.0.1:3306
還有打開Vinagre Vnc Viewer試連一下127.0.0.1:5900
看是不是真的可以順利連上

基本上使用PuTTY軟件建立ssh tunnel的方式
是給某作業系統使用者去用的
如果是Linux用戶
就
$ cd /home/anntony/.ssh/cubian 
$ sudo ssh -p36000 -i ./cubie@cubian.private.key -L 443:127.0.0.1:443 cubie@192.168.0.160 -N
這樣子用指令建立ssh tunnel就好

如果想要一次把遠端Cubian機器的127.0.0.1的443端口3306端口5900端口一次綁來本地筆記型電腦
就這樣下指令
$ sudo ssh -p36000 -i ./cubie@cubian.private.key \
-L 443:127.0.0.1:443 \
-L 3306:127.0.0.1:3306 \
-L 5900:127.0.0.1:5900 \
cubie@192.168.0.160 -N

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
5.第一次連入phpmyadmin設定網頁介面，使用網頁介面來設定config.inc.php

在我的筆記型電腦打開Chrome瀏覽器
連接網址
https://localhost/setup
或是
https://127.0.0.1/setup

然後會看到Chrome瀏覽器親切的提醒
「您的連線不是私人連線」
「攻擊者可能會嘗試從localhost竊取您的資訊 (例如密碼、郵件或信用卡資訊)」
還有網址列那可怕的紅色叉叉
這是因為我使用了自簽的免錢的SSL證書
不要理會這個訊息
按下「進階」「繼續前往 localhost 網站(不安全)」
然後就可以看到
phpMyAdmin setup的首頁了

進入phpmyadmin設定首頁
黃色的三角形
強制 SSL 連線
如果瀏覽器支援，建議啓用該[選項]。

按下[選項]
會跳到「功能 > 安全性」頁面
把「強制SSL連線」旁邊的小方塊勾選起來
按下頁面最下方的「套用」

然後又回到了phpmyadmin設定首頁
在
換行符號
的地方選擇「UNIX/Linux(\n)」
這裡和客戶端機器是Linux或Windows沒有關係
它是在問你如果使用文字編輯器修改config.inc.php設定檔的時候
會在那一個平台上修改，它應該要使用那一種換行符號
修改設定檔的人是我，我用的作業系統是Linux，所以就選「UNIX/Linux(\n)」
預設語言還是選English好了
phpmyadmin的操作介面翻成中文不知道為什麼看起來有點怪怪的
我想知道原文到底在寫些什麼
再按下
上面的「建立伺服器」鈕
然後跳到了「新增伺服器」頁面

在
伺服器名稱
(填寫易於使用者理解的伺服器描述，填空將顯示主機名稱)
填入my localhost server

接著切換到「認證」頁籤
在
config 認證方式的帳號
(如果不使用 config 認證方式，請留空)
把原來的值root清除，讓它保持空白

再切換到「伺服器設定」
把
允許root使用者登入
旁邊的勾勾取消

然後按下綠色的「套用」按鈕
回到phpmyadmin設定首頁
現在我們多了一個伺服器的設定

#	名稱	認證方式	DSN
1	my localhost server	cookie	mysqli://localhost	編輯 | 刪除

如果要看這一組設定值
可以按下「顯示」連結
然後就會跳到「設定檔案」頁
這個時候會打印

<?php
/*
 * Generated configuration file
 * Generated by: phpMyAdmin 4.3.8 setup script
 * Date: Fri, 30 Jan 2015 17:37:51 +0800
 */

/* Servers configuration */
$i = 0;

/* Server: my localhost server [1] */
$i++;
$cfg['Servers'][$i]['verbose'] = 'my localhost server';
$cfg['Servers'][$i]['host'] = 'localhost';
$cfg['Servers'][$i]['port'] = '';
$cfg['Servers'][$i]['socket'] = '';
$cfg['Servers'][$i]['connect_type'] = 'tcp';
$cfg['Servers'][$i]['auth_type'] = 'cookie';
$cfg['Servers'][$i]['user'] = '';
$cfg['Servers'][$i]['password'] = '';
$cfg['Servers'][$i]['AllowRoot'] = false;

/* End of servers configuration */

$cfg['UploadDir'] = '';
$cfg['SaveDir'] = '';
$cfg['ForceSSL'] = true;
$cfg['blowfish_secret'] = '54cb5080b65509.45459449';
$cfg['DefaultLang'] = 'en';
$cfg['ServerDefault'] = 1;
?>

在phpmyadmin的設定首頁(左邊是「概要」)
然後下面有「下載」和「儲存」兩個按鈕
按下「儲存」按鈕
這樣會把產生的config.inc.php
真的存到
/usr/local/nginx/phpmyadmin/config
目錄裡面

這個時候網頁更新之後
中間上面的地方會說
「配置保存到 phpMyAdmin 目錄下的 config/config.inc.php 檔，請將它複製到上層後再刪除 config 目錄」
然後這個時候到
root@cubie:/usr/local/nginx/phpmyadmin/config# ls
config.inc.php

你發現已經把config.inc.php存在config子目錄了
現在把它往上一層目錄移動
也就是
/usr/local/nginx/phpmyadmin
執行
# mv ./config.inc.php ../

設定完成，這時候把config子目錄刪除掉
root@cubie:/usr/local/nginx/phpmyadmin# pwd
/usr/local/nginx/phpmyadmin
root@cubie:/usr/local/nginx/phpmyadmin# rm -rf ./config

看一下config.inc.php設定檔的擁有人、群組、及權限值
root@cubie:/usr/local/nginx/phpmyadmin# ls -al config.inc.php
-rw-r--r-- 1 www-data www-data 764  1月 30 17:12 config.inc.php

想看它的內容就是
# cat ./config.inc.php
設定檔的內容我已經列出一次在上面了，故不再重複

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
6.使用文字編輯器設定config.inc.php

（抱歉…有時間會補上…）

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
7.一般用戶使用phpmyadmin網頁介面，登入mariadb之後會一直看到一個information_schema資料庫，可以隱藏它嗎？

參考資料
http://n11studio.blogspot.tw/2013/12/phpmyadmininformationschema.html

修改phpmyadmin的設定檔config.inc.php
# cd /usr/local/nginx/phpmyadmin
# vi ./config.inc.php 

在
/* End of servers configuration */
的前面加上一行
$cfg['Servers'][$i]['hide_db'] = 'information_schema';

改完之後
不用重啟nginx也不用重啟php-fpm
立即生效
這樣mariadb服務器的一般用戶monti
登入phpmyadmin之後
只會看到她自已有權限操作的testdb17資料庫
其他資料庫她都看不到
但是如果她使用文字模式的mysql command line client登入mariadb服務器
還是會看到information_schema資料庫
不過看到也沒差
她也沒有權限去改它
頂多就看看而已

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
8.該死的「尚未設定 phpMyAdmin 設定儲存空間，部份延伸功能將無法使用 [了解原因]」

按下網頁裡的[了解原因]之後
網頁跳到

設定 pmadb ... 錯誤 ?
一般關聯功能 已關閉

按下那個 ? 問號
再跳到一個英文網頁

https://localhost/doc/html/setup.html#linked-tables

內容是
phpMyAdmin configuration storage

For a whole set of additional features (bookmarks, comments, SQL-history, 
tracking mechanism, PDF-generation, column contents transformation, etc.) 
you need to create a set of special tables. 
Those tables can be located in your own database, 
or in a central database for a multi-user installation 
(this database would then be accessed by the controluser, so no other user should have rights to it).

感覺上是要叫我生幾個table出來，讓phpmyadmin儲存用戶們的設定值
要不然進階的功能就不讓我使用
下一段是
Zero configuration

In many cases, this database structure can be automatically created and configured. 
This is called “Zero Configuration” mode and can be particularly useful in shared hosting situations.
 “Zeroconf” mode is on by default, to disable set $cfg['ZeroConf'] to false.

The following three scenarios are convered by the Zero Configuration mode:

● When entering a database where the configuration storage tables are not present, 
phpMyAdmin offers to create them from the Operations tab.

● When entering a database where the tables do already exist, 
the software automatically detects this and begins using them. 
This is the most common situation; 
after the tables are initially created automatically they are continually used without disturbing the user;
 this is also most useful on shared hosting where the user is not able to edit config.inc.php 
and usually the user only has access to one database.

● When having access to multiple databases, 
if the user first enters the database containing the configuration storage tables then switches to another database, 
phpMyAdmin continues to use the tables from the first database; 
the user is not prompted to create more tables in the new database.

再下面還有一段
Manual configuration
內容也是很長，所以我不放上了
反正如果phpmyadmin一直跳出這個
「尚未設定 phpMyAdmin 設定儲存空間，部份延伸功能將無法使用 [了解原因]」
你可以按下連結自已看
這個網頁絕對不會不見
因為它其實是放在Cubian機器的硬碟的
/usr/local/nginx/phpmyadmin/doc/html
這個子目錄中

我要先動手了
反正就是少了一個名字也是叫作phpmyadmin的資料庫
讓phpmyadmin可以儲存這些用戶的設定值 (bookmark、comments、SQL-History之類的)

進入mariadb命令提示符
先產生一個pma@localhost資料庫用戶，並設定他的密碼是pmapassword

root@cubie:~# mysql --defaults-file=./mysql_client_settings.txt 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 107
Server version: 10.0.14-MariaDB-log Source distribution

Copyright (c) 2000, 2014, Oracle, SkySQL Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> use mysql;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
MariaDB [mysql]> select User,Host,Password from user;
+-----------+---------------------------+-------------------------------------------+
| User      | Host                      | Password                                  |
+-----------+---------------------------+-------------------------------------------+
| root      | localhost                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | 127.0.0.1                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | ::1                       | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| tony      | localhost                 | *5938568D06F7260E41353CAB3E9B305CAC18570C |
| monti     | localhost                 | *48A4D8FE49C55F6EB270BEF629A90CBA97F1D76C |
| monti     | 127.0.0.1                 | *48A4D8FE49C55F6EB270BEF629A90CBA97F1D76C |
| narudo    | %.example.net             | *C9227A2D81C4C9794F3D69D6E68A1042B66DF07F |
| nodelasky | 192.168.0.12              | *4D60DB4F79E0B82BA8A0F92F876EFCE34A66CE3A |
| tony      | 127.0.0.1                 | *5938568D06F7260E41353CAB3E9B305CAC18570C |
| laravel   | 192.168.0.0/255.255.255.0 | *C7B931A62D265417B627B6AA1DD3747A7EBE4639 |
| felix     | localhost                 | *A0F7F2343BDE4E03A39B3D0AC0B0635AAADF2513 |
| felix     | 127.0.0.1                 | *A0F7F2343BDE4E03A39B3D0AC0B0635AAADF2513 |
+-----------+---------------------------+-------------------------------------------+
12 rows in set (0.00 sec)

MariaDB [mysql]> CREATE USER 'pma'@'localhost' IDENTIFIED BY 'pmapassword';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> select User,Host,Password from user;
+-----------+---------------------------+-------------------------------------------+
| User      | Host                      | Password                                  |
+-----------+---------------------------+-------------------------------------------+
| root      | localhost                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | 127.0.0.1                 | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| root      | ::1                       | *B638EC5422004FCF44EE84FABA603D29A2259BC0 |
| tony      | localhost                 | *5938568D06F7260E41353CAB3E9B305CAC18570C |
| monti     | localhost                 | *48A4D8FE49C55F6EB270BEF629A90CBA97F1D76C |
| monti     | 127.0.0.1                 | *48A4D8FE49C55F6EB270BEF629A90CBA97F1D76C |
| narudo    | %.example.net             | *C9227A2D81C4C9794F3D69D6E68A1042B66DF07F |
| nodelasky | 192.168.0.12              | *4D60DB4F79E0B82BA8A0F92F876EFCE34A66CE3A |
| tony      | 127.0.0.1                 | *5938568D06F7260E41353CAB3E9B305CAC18570C |
| laravel   | 192.168.0.0/255.255.255.0 | *C7B931A62D265417B627B6AA1DD3747A7EBE4639 |
| felix     | localhost                 | *A0F7F2343BDE4E03A39B3D0AC0B0635AAADF2513 |
| felix     | 127.0.0.1                 | *A0F7F2343BDE4E03A39B3D0AC0B0635AAADF2513 |
| pma       | localhost                 | *164A0277009B770240353B9CB8B44AE2D67816B6 |
+-----------+---------------------------+-------------------------------------------+
13 rows in set (0.00 sec)

還是在MariaDB [mysql]提示符
現在執行一次
/usr/local/nginx/phpmyadmin/examples/create_tables.sql
的內容
產生一個名字是phpmyadmin的資料庫，還有裡面有幾個table，這要用來儲存phpmyadmin的某些用戶資訊

MariaDB [mysql]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| testdb17           |
| testdb3            |
+--------------------+
5 rows in set (0.00 sec)

MariaDB [mysql]> source /usr/local/nginx/phpmyadmin/examples/create_tables.sql;
Query OK, 1 row affected (0.00 sec)

Database changed
Query OK, 0 rows affected (0.33 sec)

Query OK, 0 rows affected (0.38 sec)

Query OK, 0 rows affected (0.39 sec)

Query OK, 0 rows affected (0.36 sec)

Query OK, 0 rows affected (0.34 sec)

Query OK, 0 rows affected (0.32 sec)

Query OK, 0 rows affected (0.34 sec)

Query OK, 0 rows affected (3.47 sec)

Query OK, 0 rows affected (0.65 sec)

Query OK, 0 rows affected (0.33 sec)

Query OK, 0 rows affected (0.35 sec)

Query OK, 0 rows affected (0.36 sec)

Query OK, 0 rows affected (0.34 sec)

Query OK, 0 rows affected (0.34 sec)

Query OK, 0 rows affected (0.33 sec)

Query OK, 0 rows affected (0.38 sec)

Query OK, 0 rows affected (0.34 sec)

MariaDB [phpmyadmin]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
| performance_schema |
| phpmyadmin         |
| testdb17           |
| testdb3            |
+--------------------+
6 rows in set (0.01 sec)

MariaDB [phpmyadmin]> use phpmyadmin;
Database changed
MariaDB [phpmyadmin]> show tables;
+-----------------------+
| Tables_in_phpmyadmin  |
+-----------------------+
| pma__bookmark         |
| pma__central_columns  |
| pma__column_info      |
| pma__favorite         |
| pma__history          |
| pma__navigationhiding |
| pma__pdf_pages        |
| pma__recent           |
| pma__relation         |
| pma__savedsearches    |
| pma__table_coords     |
| pma__table_info       |
| pma__table_uiprefs    |
| pma__tracking         |
| pma__userconfig       |
| pma__usergroups       |
| pma__users            |
+-----------------------+
17 rows in set (0.00 sec)

MariaDB [phpmyadmin]> SHOW GRANTS FOR 'pma'@'localhost';
+------------------------------------------------------------------------------------------------------------+
| Grants for pma@localhost                                                                                   |
+------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'pma'@'localhost' IDENTIFIED BY PASSWORD '*164A0277009B770240353B9CB8B44AE2D67816B6' |
+------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

MariaDB [phpmyadmin]> 

我覺得上面的輸出有點詭異
為什麼用戶pma@localhost沒有關於phpmyadmin資料庫的任何權限？
於是我看了一下
/usr/local/nginx/phpmyadmin/examples/create_tables.sql
裡面這裡
-- --------------------------------------------------------

--
-- Privileges
--
-- (activate this statement if necessary)
-- GRANT SELECT, INSERT, DELETE, UPDATE, ALTER ON `phpmyadmin`.* TO
--    'pma'@localhost;

-- --------------------------------------------------------
啊靠腰哩
授權pma@localhost對於phpmyadmin資料庫的指令
被注解掉了
根本就沒執行
好吧那我只好手動給它來一下
MariaDB [mysql]> GRANT SELECT, INSERT, DELETE, UPDATE, ALTER ON phpmyadmin.* TO 'pma'@'localhost';
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> SHOW GRANTS FOR 'pma'@'localhost';
+------------------------------------------------------------------------------------------------------------+
| Grants for pma@localhost                                                                                   |
+------------------------------------------------------------------------------------------------------------+
| GRANT USAGE ON *.* TO 'pma'@'localhost' IDENTIFIED BY PASSWORD '*164A0277009B770240353B9CB8B44AE2D67816B6' |
| GRANT SELECT, INSERT, UPDATE, DELETE, ALTER ON `phpmyadmin`.* TO 'pma'@'localhost'                         |
+------------------------------------------------------------------------------------------------------------+
2 rows in set (0.01 sec)

MariaDB [mysql]>

這樣就產生了phpmyadmin資料庫，而且讓資料庫用戶pma@localhost可以存取它
現在要修改config.inc.php

# vi /usr/local/nginx/phpmyadmin/config.inc.php

config.inc.php檔案完整內容如下

<?php
/*
 * Generated configuration file
 * Generated by: phpMyAdmin 4.3.8 setup script
 * Date: Fri, 30 Jan 2015 17:37:51 +0800
 */

/* Servers configuration */
$i = 0;

/* Server: my localhost server [1] */
$i++;
$cfg['Servers'][$i]['verbose'] = 'my localhost server';
$cfg['Servers'][$i]['host'] = 'localhost';
$cfg['Servers'][$i]['port'] = '';
$cfg['Servers'][$i]['socket'] = '';
$cfg['Servers'][$i]['connect_type'] = 'tcp';
$cfg['Servers'][$i]['auth_type'] = 'cookie';
$cfg['Servers'][$i]['user'] = '';
$cfg['Servers'][$i]['password'] = '';
$cfg['Servers'][$i]['AllowRoot'] = false;
$cfg['Servers'][$i]['hide_db'] = 'information_schema';
$cfg['Servers'][$i]['pmadb'] = 'phpmyadmin';
$cfg['Servers'][$i]['bookmarktable'] = 'pma__bookmark';
$cfg['Servers'][$i]['relation'] = 'pma__relation';
$cfg['Servers'][$i]['table_info'] = 'pma__table_info';
$cfg['Servers'][$i]['table_coords'] = 'pma__table_coords';
$cfg['Servers'][$i]['pdf_pages'] = 'pma__pdf_pages';
$cfg['Servers'][$i]['column_info'] = 'pma__column_info';
$cfg['Servers'][$i]['history'] = 'pma__history';
$cfg['Servers'][$i]['recent'] = 'pma__recent';
$cfg['Servers'][$i]['table_uiprefs'] = 'pma__table_uiprefs';
$cfg['Servers'][$i]['users'] = 'pma__users';
$cfg['Servers'][$i]['usergroups'] = 'pma__usergroups';
$cfg['Servers'][$i]['navigationhiding'] = 'pma__navigationhiding';
$cfg['Servers'][$i]['central_columns'] = 'pma__central_columns';
$cfg['Servers'][$i]['savedsearches'] = 'pma__savedsearches';
$cfg['Servers'][$i]['tracking'] = 'pma__tracking';
$cfg['Servers'][$i]['favorite'] = 'pma__favorite';
$cfg['Servers'][$i]['userconfig'] = 'pma__userconfig';
$cfg['Servers'][$i]['controluser'] = 'pma';
$cfg['Servers'][$i]['controlpass'] = 'pmapassword';
/* End of servers configuration */

$cfg['UploadDir'] = '';
$cfg['SaveDir'] = '';
$cfg['ForceSSL'] = true;
$cfg['blowfish_secret'] = '54cb5080b65509.45459449';
$cfg['DefaultLang'] = 'en';
$cfg['ServerDefault'] = 1;
?>

這樣就完成config.inc.php的設定了
重新登入phpmyadmin之後
不會再有那個奇怪的「尚未設定 phpMyAdmin 設定儲存空間，部份延伸功能將無法使用 [了解原因]」
phpmyadmin用起來
就是很正常
很好很好

＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃
意外的發現

（在config.inc.php我少設定了兩個參數
$cfg['Servers'][$i]['favorite']
$cfg['Servers'][$i]['userconfig']才意外看到phpmyadmin介面裡的這個網頁訊息）

快速設定進階功能:

Create the needed tables with the ./examples/create_tables.sql
建立一個 pma 使用者並授權存取上一步操作中所建立的資料表的權限。
在設定檔 (config.inc.php) 中啓用進階功能，請參考 config.sample.inc.php 中的範例。 
請重新登入 phpMyAdmin 以載入新設定並使其生效
＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃＃

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
9.向godaddy購買SSL證書，一直到把我的nginx服務器安裝上SSL證書的過程大概是怎樣？

godaddy官網的說明頁面
https://support.godaddy.com/help/article/3601/generating-nginx-csrs-certificate-signing-requests

另外在
nginx HTTP Server 2nd Edition
這本書的第153和第154頁裡面
有介紹如何向godaddy.com購買證書
一直到把nginx服務器設定好https服務的完整步驟
有興趣可以翻閱一下
過程大概是
執行這個指令，它會產生一個rsa key和一個csr檔案
$ openssl req -new -newkey rsa:2048 -nodes -keyout www.kashu.com.tw.key -out www.kashu.com.tw.csr

產生csr必須回答下列的問題
Generating a 2048 bit RSA private key
..........+++
....................+++
writing new private key to 'www.kashu.com.tw.key'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:TW
State or Province Name (full name) [Some-State]:Taipei
Locality Name (eg, city) []:SanZi
Organization Name (eg, company) [Internet Widgits Pty Ltd]:KunAn Hsu,Inc.
Organizational Unit Name (eg, section) []:Development Department
Common Name (e.g. server FQDN or YOUR name) []:www.kashu.com.tw
Email Address []:annbigbig@gmail.com

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:

三、把剛才產生的csr檔案提交給godaddy
我沒真的幹過這件事
(買證書要錢的，我窮B謝謝，有機會有閒錢我會試的)
不過看godaddy的官網說明頁面
似乎是先註冊一個godaddy的帳號
然後登入之後，godaddy的SSL證書的申請網頁裡有一個文字框
它會要求你把剛才產生的csr檔的所有內容貼到那個文字框裡面，然後按提交鈕，就完成提交csr檔案的動作

四、接下來等godaddy回覆
等godaddy回覆時，可以得到兩個檔案
一個是
www.kashu.com.tw.crt
另一個是
gd_bundle.crt
為什麼有兩個檔案？
一張是我的SSL證書（www.kashu.com.tw.crt）
另一張是CA也就是證書頒發機構的SSL證書（gd_bundle.crt）

五、把兩張證書合併成一張
執行指令
# cat www.kashu.com.tw.crt gd_bundle.crt > combined.crt

六、最後就是設定nginx服務器使用https作為網頁服務

修改/usr/local/nginx/conf/nginx.conf
重點是
server {
        listen       443 ssl;
        server_name  www.kashu.com.tw;
        ssl_certificate /full/path/to/combined.crt;
        ssl_certificate_key /full/path/to/www.kashu.com.tw.key;

     (其他設定…)
}

理論上是這樣
實際上要花點錢和godaddy真的買一張SSL證書來驗證書上和godaddy官網的說法
不過
我沒錢
BBBBBBBBBBBBBBB

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
關於php.ini

設定好nginx服務器並重新啟動服務之後
我快樂的在筆記型電腦上打開瀏覽器
查看網址
http://www.phpmyadmin.com.tw/

結果我得到了
Fatal error: Call to undefined function mb_detect_encoding() in /usr/local/nginx-1.6.2/phpmyadmin-4.3.8/libraries/php-gettext/gettext.inc on line 177

我把這一串錯誤訊息的前半段當作關鍵字
搜尋了Google
我看到了這一篇
http://stackoverflow.com/questions/22271260/fatal-error-call-to-undefined-function-mb-detect-encoding-in-c-apache-htdocs

所以我照著它講的
修正了我的php.ini
# vi /usr/local/php/lib/php.ini

然後取消這四行前面的分號;
extension=php_gd2.dll
extension=php_mbstring.dll
extension=php_exif.dll 
extension=php_mysqli.dll

接著重新啟動php-fpm
# service php-fpm status
# service php-fpm restart

結果慘劇發生了
root@cubie:/usr/local/php/lib# service php-fpm restart
Gracefully shutting down php-fpm . done
Starting php-fpm [26-Jan-2015 02:31:50] NOTICE: PHP message: PHP Warning:  PHP Startup: Unable to load dynamic library '/usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_gd2.dll' - /usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_gd2.dll: cannot open shared object file: No such file or directory in Unknown on line 0
<br />
<b>Warning</b>:  PHP Startup: Unable to load dynamic library '/usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_gd2.dll' - /usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_gd2.dll: cannot open shared object file: No such file or directory in <b>Unknown</b> on line <b>0</b><br />
[26-Jan-2015 02:31:50] NOTICE: PHP message: PHP Warning:  PHP Startup: Unable to load dynamic library '/usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_mbstring.dll' - /usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_mbstring.dll: cannot open shared object file: No such file or directory in Unknown on line 0
<br />
<b>Warning</b>:  PHP Startup: Unable to load dynamic library '/usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_mbstring.dll' - /usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_mbstring.dll: cannot open shared object file: No such file or directory in <b>Unknown</b> on line <b>0</b><br />
[26-Jan-2015 02:31:50] NOTICE: PHP message: PHP Warning:  PHP Startup: Unable to load dynamic library '/usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_exif.dll' - /usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_exif.dll: cannot open shared object file: No such file or directory in Unknown on line 0
<br />
<b>Warning</b>:  PHP Startup: Unable to load dynamic library '/usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_exif.dll' - /usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_exif.dll: cannot open shared object file: No such file or directory in <b>Unknown</b> on line <b>0</b><br />
[26-Jan-2015 02:31:50] NOTICE: PHP message: PHP Warning:  PHP Startup: Unable to load dynamic library '/usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_mysqli.dll' - /usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_mysqli.dll: cannot open shared object file: No such file or directory in Unknown on line 0
<br />
<b>Warning</b>:  PHP Startup: Unable to load dynamic library '/usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_mysqli.dll' - /usr/local/php-5.5.19/lib/php/extensions/no-debug-non-zts-20121212/php_mysqli.dll: cannot open shared object file: No such file or directory in <b>Unknown</b> on line <b>0</b><br />
 done
root@cubie:/usr/local/php/lib#

沒有辦法正常的重新啟動php-fpm
出現了無法載入動態函式庫
php_gd2.dll
php_mbstring.dll
php_exif.dll
php_mysqli.dll
因為它們根本就不存在於我的Cubian機器裡
我大概預想到是什麼問題了
該不會又要重新編譯php-fpm吧？
因為我少編了什麼函式庫進去的樣子才會這樣幹幹叫
然後我再用gd2、mbstring、mysqli當關鍵字搜尋了Google
結果我搜到
http://www.cnblogs.com/simpman/p/4196051.html

而使用關鍵字php-fpm configure options gd2 mysqli pdo，我搜到
https://www.howtoforge.com/how-to-build-php-5.5-php-fpm-and-fastcgi-with-ioncube-loader-zend-opcache-and-apcu-for-ispconfig3-debian-wheezy-p2
http://www.ondrejsimek.com/blog/running-multiple-php-versions-is-so-easy-with-fastcgi/

有點詳細
http://howtolamp.com/lamp/php/5.5/installing/

稍早前看過的php-fpm簡體中文安裝說明
http://www.nginx.cn/231.html

我又要重新編譯php了
而且我發現我gd2 mysqli pdo都沒有
沒有pdo好像不能讓php直接去連mysql資料庫的樣子


http://php.net/manual/en/ref.pdo-mysql.php
