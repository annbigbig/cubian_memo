i.新增一個用戶sftpuser01，他在家目錄下持有一個website子目錄，他可以從異地sftp連線過來，將新的代碼上傳到他的網站根目錄

網路環境：
服務器（Cubian）：192.168.0.162
工作機（筆記型電腦）：192.168.0.12

服務器（Cubian）的設定：
系統：
　1.設定系統的umask，從預設的022改成002

用戶與群組
　2.新增用戶sftpuser01
　3.修改用戶sftpuser01的shell為/usr/sbin/nologin
　4.設定用戶sftpuer01的家目錄路徑為/not/home/sftpuser01
　5.將用戶www-data加入用戶sftpuser01的群組
　6.新增sftponly群組
　7.將用戶sftpuser01加入sftponly群組

目錄及檔案
　8.產生/not/home/sftpuser01目錄，三層目錄的擁有人及群組都是root，權限值755
　9.修改/home/sftpuser01目錄的擁有人及群組都是root，權限值755
　10.在/home/sftpuser01目錄裡產生website及data-store兩個子目錄，擁有人及群組都是sftpuser01，權限值775
　11.刪除/home/sftpuser01目錄內以.開頭的檔案（例：.bashrc、.bash_logout、.profile…因為用不到了）

ssh key pair
　12.產生用戶sftpuser01的ssh key pair於/not/home/sftpuser01/.ssh/目錄裡，此目錄擁有人及群組皆為sftpuser01，權限值700
　13.產生/not/home/sftpuser01/.ssh/authorized_keys公鑰認證列表

SSH服務器組態檔
　14.修改/etc/ssh/sshd_config，然後重新啟動SSH Server

工作機的設定：
　15.打開FileZilla，使用「站台管理員」以用戶sftpuser01的身分sftp連線登入Cubian服務器
　16.下載服務器用戶sftpuser01的私鑰，並轉換成FileZilla專用的ppk格式
　17.斷線，然後重新用剛才下載並轉換成ppk格式的私鑰作sftp連線
　18.試著上傳檔案到website或是data-store子目錄

細節：
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
1.設定系統的umask，從預設的022改成002

先解釋一下umask是幹麻的，首先打印一下現在Cubian系統上使用的umask值
登入Cubian服務器之後，切換到root身分，執行
# umask

終端機打印了
0022

切換到/tmp目錄下
# cd /tmp

產生一個目錄testdir，還有一個空白檔案testfile
然後再看看他們的權限值是什麼？
# mkdir testdir
# touch testfile
# ls -al | grep test

終端機打印了
drwxr-xr-x  2 root  root    40 11月 17 16:17 testdir
-rw-r--r--  1 root  root     0 11月 17 16:17 testfile

剛才新增的目錄/tmp/testdir它的權限值是755，
而新增的空白檔案/tmp/testfile它的權限值是644
然後我們Cubian系統上的umask值是0022
所以你有聯想到這有什麼關係嗎？
對，umask的值會影響到新增的目錄和檔案的權限值
如果是新增目錄，那麼新目錄的權限值就會是777-022=755
如果是新增檔案，那麼新檔案的權限值就會是666-022=644
你也可以參考umask的man page
# man umask

或是
http://www.computerhope.com/unix/uumask.htm
有更詳細的解釋

現在我要把Cubian服務器的umask改成002
參考資料一樣是stackoverflow的文章：
http://stackoverflow.com/questions/10220531/how-to-set-system-wide-umask

因為我希望將來新增目錄的時候，權限預設是775（777 - 002 = 775）
而新增檔案的時候，權限預設是664（666 - 002 = 664）
開始修改了
打開vi文字編輯器，修改/etc/pam.d/common-session
vi /etc/pam.d/common-session

在檔案的最後面加上這一行
session optional pam_umask.so
改好存檔，離開vi文字編輯器

動手修改umask之前先備份一下
# cp /etc/login.defs /etc/login.defs.default

接著打開vi文字編輯器修改/etc/login.defs組態檔
# vi /etc/login.defs

把這一行
UMASK           022
改成這樣
UMASK           002
然後存檔，離開vi文字編輯器

改好之後，要重新開機，新的umask值002才能生效
Cubian重新開機之後，以預設用戶cubie登入
切換到/tmp目錄，再試試看新增檔案和目錄，看看剛設定的umask 002有沒有生效？
$ cd /tmp
$ touch testfile
$ mkdir testdir
$ ls -al | grep test

終端機打印了
drwxrwxr-x  2 cubie cubie   40 11月 17 17:15 testdir
-rw-rw-r--  1 cubie cubie    0 11月 17 17:15 testfile

剛才新增的testdir目錄權限是775，而新增的testfile檔案權限是664
所以你可以確認剛才UMASK 002的設定確實生效了

也可以再執行一次umask指令
$ umask

終端機打印了
0002

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
2.新增用戶sftpuser01

在Cubian服務器上，以預設用戶cubie登入之後，切換為root身分
$ sudo -i

執行下列指令新增用戶sftpuser01
# adduser sftpuser01

和終端機交談一下
Adding user `sftpuser01' ...
Adding new group `sftpuser01' (1003) ...
Adding new user `sftpuser01' (1002) with group `sftpuser01' ...
Creating home directory `/home/sftpuser01' ...
Copying files from `/etc/skel' ...
輸入新的 UNIX 密碼：
再次輸入新的 UNIX 密碼：
passwd：密碼已成功地變更
正在改變 sftpuser01 的使用者訊息
請輸入新值，或直接按 ENTER 鍵以使用預設值
	全名 []: 
	房間號碼 []: 
	工作電話 []: 
	住家電話 []: 
	其它 []: 
Is the information correct? [Y/n] y

看看是不是真的新增了用戶sftpuser01
# cat /etc/passwd | grep sftpuser01

終端機打印了
sftpuser01:x:1002:1003:,,,:/home/sftpuser01:/bin/bash

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
3.修改用戶sftpuser01的shell為/usr/sbin/nologin

還是在Cubian服務器上，還是root身分

看一下現在用戶sftpuser01的shell是什麼？
# cat /etc/passwd | grep sftpuser01

終端機打印了
sftpuser01:x:1002:1003:,,,:/home/sftpuser01:/bin/bash

看一下有沒有nologin這個shell存在？
# which nologin

終端機打印了
/usr/sbin/nologin

改變用戶sftpuser01的登入shell
# chsh -s /usr/sbin/nologin sftpuser01

再確認一次用戶sftpuser01的登入shell
# cat /etc/passwd | grep sftpuser01

終端機打印了
sftpuser01:x:1002:1003:,,,:/home/sftpuser01:/usr/sbin/nologin

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
4.設定用戶sftpuer01的家目錄路徑為/not/home/sftpuser01

修改用戶sftpuser01的家目錄路徑之前，先看看現在的家目錄是什麼？
# cat /etc/passwd | grep sftpuser01

終端機打印了
sftpuser01:x:1002:1003:,,,:/home/sftpuser01:/usr/sbin/nologin

上面的訊息告訴我們，現在用戶sftpuser01的家目錄路徑是/home/sftpuser01
然後我們執行下列指令，把用戶sftpuser01的家目錄的路徑改成/not/home/sftpuser01
# usermod -d /not/home/sftpuser01 sftpuser01

改完之後再看看現在用戶sftpuser01的家目錄是什麼？
# cat /etc/passwd | grep sftpuser01

終端機打印了
sftpuser01:x:1002:1003:,,,:/not/home/sftpuser01:/usr/sbin/nologin

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
5.將用戶www-data加入用戶sftpuser01的群組

這個步驟是為了讓用戶www-data可以存取用戶sftpuser01的網站根目錄而設定的
（因為nginx worker processes是以用戶www-data的身分執行）

動手之前先看一下目前www-data用戶有加入什麼群組？
# id www-data

終端機打印了
uid=33(www-data) gid=33(www-data) groups=33(www-data),1002(gituser01)

現在執行下面的指令把用戶www-data加到用戶sftpuser01的群組
# usermod -a -G sftpuser01 www-data

加完之後再看一下用戶www-data現在有加入什麼群組？
# id www-data

終端機打印了
uid=33(www-data) gid=33(www-data) groups=33(www-data),1002(gituser01),1003(sftpuser01)

上面的訊息告訴我們，用戶www-data目前有加入自已的群組www-data、稍早前加入的gituser01群組、還有sftpuser01群組

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
6.新增sftponly群組

以root身分執行以下指令
# groupadd sftponly

看一下是否真的新增了sftponly群組？
# cat /etc/group | grep sftponly

終端機打印了
sftponly:x:1004:

這樣就確認已經新增了sftponly群組
新增sftponly群組的目的，是為了稍後我們會調整SSH Server的組態檔
只要是這個sftponly群組裡的所有用戶，都會被限制只能使用sftp的功能，而無法ssh登入服務器

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
7.將用戶sftpuser01加入sftponly群組

動手之前先看一下現在sftpuser01有加入什麼群組？
# id sftpuser01

終端機打印了
uid=1002(sftpuser01) gid=1003(sftpuser01) groups=1003(sftpuser01)

執行以下指令將用戶sftpuser01加入sftponly群組
# usermod -a -G sftponly sftpuser01

再看看現在用戶sftpuser01有加入什麼群組？
# id sftpuser01

終端機打印了
uid=1002(sftpuser01) gid=1003(sftpuser01) groups=1003(sftpuser01),1004(sftponly)

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
8.產生/not/home/sftpuser01目錄，三層目錄的擁有人及群組都是root，權限值755

這個目錄是chroot行為發生之前的用戶sftpuser01的家目錄
稍後我會回到工作機，然後使用FileZilla（SFTP客戶端程式），
以用戶sftpuser01的身分登入Cubian服務器，然後身份確認之後登入了Cubian服務器
用戶sftpuser01會被chroot到一個新的目錄（/home/sftpuser01）
他會以為那就是他的根目錄（/），但其實不是，那個目錄實際上是Cubian服務器上的（/home/sftpuser01）
在/etc/passwd裡面規定的用戶sftpuser01的家目錄路徑是/not/home/sftpuser01
那個是chroot之前的家目錄

我語言能力真的很差，總之先來實作吧
一樣是在Cubian服務器上，一樣是root身分
先切換到系統根目錄底下
# cd /

產生/not/home/sftpuser01目錄
# mkdir -p /not/home/sftpuser01

把這三層目錄的權限值都改成755
# chmod -R 755 /not

一層一層檢查權限
root@cubie:/not/home# cd /
root@cubie:/# ls -al|grep not
drwxr-xr-x   3 root root  4096 11月 17 19:26 not
root@cubie:/# cd not
root@cubie:/not# ls -al
總計 12
drwxr-xr-x  3 root root 4096 11月 17 19:26 .
drwxr-xr-x 23 root root 4096 11月 17 19:26 ..
drwxr-xr-x  3 root root 4096 11月 17 19:26 home
root@cubie:/not# cd home/
root@cubie:/not/home# ls -al
總計 12
drwxr-xr-x 3 root root 4096 11月 17 19:26 .
drwxr-xr-x 3 root root 4096 11月 17 19:26 ..
drwxr-xr-x 2 root root 4096 11月 17 19:26 sftpuser01

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
9.修改/home/sftpuser01目錄的擁有人及群組都是root，權限值755

動手修改之前先看一下目前的權限
# ls -al /home | grep sftpuser01

終端機打印了
drwxr-xr-x  3 sftpuser01 sftpuser01 4096 11月 17 17:36 sftpuser01

現在修改/home/sftpuser01的擁有人和群組都是root用戶，權限值755
# chown root:root /home/sftpuser01
# chmod 755 /home/sftpuser01

改完之後再看一下目前的權限
ls -al /home | grep sftpuser01

終端機打印了
drwxr-xr-x  3 root      root      4096 11月 17 17:36 sftpuser01

為什麼要作這個步驟呢？稍後用戶sftpuser01從異地使用sftp客戶端程式登入之後
Cubian服務器上的/home/sftpuser01這個目錄就是他的根目錄
原來他的家目錄雖然寫在/etc/passwd裡面，規定好了是/not/home/sftpuser01
但是那不是他sftp登入之後的根目錄，稍後在Cubian服務器上
我們會設定/etc/ssh/sshd_config
裡面有一個規則，是規定只要是sftponly群組的用戶，使用sftp客戶端程式登入服務器之後
就會被chroot到指定的目錄（用戶sftpuser01登入後的根目錄路徑在/home/sftpuser01）
這個新的chroot之後的目錄，它的擁有人和群組一定要是root用戶，然後權限值不能大於755

（注：chroot是change root的意思）

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
10.在/home/sftpuser01目錄裡產生website及data-store兩個子目錄，擁有人及群組都是sftpuser01，權限值775

執行
# cd /home/sftpuser01
# mkdir website data-store
# chown sftpuser01:sftpuser01 website data-store
# chmod 775 website data-store
# ls -al

終端機打印了
總計 36
drwxr-xr-x 5 root       root       4096 11月 17 21:50 .
drwxr-xr-x 5 root       root       4096 11月 17 17:36 ..
-rw-r--r-- 1 sftpuser01 sftpuser01  220 11月 17 17:36 .bash_logout
-rw-r--r-- 1 sftpuser01 sftpuser01 3392 11月 17 17:36 .bashrc
drwxr-xr-x 3 sftpuser01 sftpuser01 4096 11月 17 17:36 .config
drwxrwxr-x 2 sftpuser01 sftpuser01 4096 11月 17 21:50 data-store
-rw-r--r-- 1 sftpuser01 sftpuser01  675 11月 17 17:36 .profile
-rw-r--r-- 1 sftpuser01 sftpuser01   82 11月 17 17:36 README
drwxrwxr-x 2 sftpuser01 sftpuser01 4096 11月 17 21:50 website

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
11.刪除/home/sftpuser01目錄內以.開頭的檔案（例：.bashrc、.bash_logout、.profile…因為用不到了）

執行
# cd /home/sftpuser01
# rm -rf ./\.bash*
# rm -rf ./\.pro*
# rm -rf ./\.config
# rm -rf ./README
# ls -al

終端機打印了
總計 16
drwxr-xr-x 4 root       root       4096 11月 17 21:56 .
drwxr-xr-x 5 root       root       4096 11月 17 17:36 ..
drwxrwxr-x 2 sftpuser01 sftpuser01 4096 11月 17 21:50 data-store
drwxrwxr-x 2 sftpuser01 sftpuser01 4096 11月 17 21:50 website

現在/home/sftpuser01目錄下面只有這兩個子目錄

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
12.產生用戶sftpuser01的ssh key pair於/not/home/sftpuser01/.ssh/目錄裡，此目錄擁有人及群組皆為sftpuser01，權限值700

執行
# cd /not/home/sftpuser01
# mkdir .ssh
# chown sftpuser01:sftpuser01 .ssh
# chmod 700 .ssh

產生ssh key pair的時候，要和終端機交談一下，回答要產生鑰匙在那個路徑？
# ssh-keygen -t rsa -C "sftpuser01@localhost"
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): /not/home/sftpuser01/.ssh/id_rsa
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /not/home/sftpuser01/.ssh/id_rsa.
Your public key has been saved in /not/home/sftpuser01/.ssh/id_rsa.pub.
The key fingerprint is:
1e:7f:b7:d8:d7:8a:82:68:e6:65:ba:e2:d6:59:20:a2 sftpuser01@localhost
The key's randomart image is:
+--[ RSA 2048]----+
|                 |
|                 |
|                 |
|  . . .          |
| . . . .S        |
|E      ..o       |
|     . ++.. . . .|
|    o *+. .. = .o|
|   o.=+.   .o +o |
+-----------------+

修改剛才產生的公鑰和私鑰的擁有人和群組為sftpuser01
# chown -R sftpuser01:sftpuser01 /not/home/sftpuser01/.ssh/

看一下剛才產生的公鑰和私鑰的檔案權限
# ls -al /not/home/sftpuser01/.ssh/

終端機打印了
總計 16
drwx------ 2 sftpuser01 sftpuser01 4096 11月 17 22:05 .
drwxr-xr-x 3 root       root       4096 11月 17 22:04 ..
-rw------- 1 sftpuser01 sftpuser01 1679 11月 17 22:05 id_rsa
-rw-r--r-- 1 sftpuser01 sftpuser01  402 11月 17 22:05 id_rsa.pub

把私鑰複製到/home/sftpuser01目錄下，稍後如果用戶sftpuser01登入之後
就可以在根目錄下看到他自已的私鑰，直接讓他下載回工作機端，加上-p選項可以在複製過去的時候保留原來的檔案權限
# cp -p /not/home/sftpuser01/.ssh/id_rsa /home/sftpuser01/

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
13.產生/not/home/sftpuser01/.ssh/authorized_keys公鑰認證列表

# cd /not/home/sftpuser01/.ssh/
# cat id_rsa.pub >> authorized_keys
# chown sftpuser01:sftpuser01 ./authorized_keys
# chmod 600 ./authorized_keys

因為authorized_keys裡面只有記錄一支公鑰
就是/not/home/sftpuser01/.ssh/id_rsa.pub這一支
所以
/not/home/sftpuser01/.ssh/authorized_keys
這個檔案的內容，會剛好和
/not/home/sftpuser01/.ssh/id_rsa.pub
一模一樣

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
14.修改/etc/ssh/sshd_config，然後重新啟動SSH Server

修改之前先作備份，以免改爛了救不回來
# cp /etc/ssh/sshd_config /etc/ssh/sshd_config.default

我注解掉了第63行的
#X11Forwarding yes

還注解掉了第76行的
#Subsystem sftp /usr/lib/openssh/sftp-server

然後我把這個區塊加在/etc/ssh/sshd_config的最後面
Subsystem sftp internal-sftp
Match group sftponly
   ChrootDirectory /home/%u
   X11Forwarding no
   AllowTcpForwarding no
   ForceCommand internal-sftp

不過為了簡單明暸，我還是放上我完整的/etc/ssh/sshd_config
內容如下：
# Package generated configuration file
# See the sshd_config(5) manpage for details

# What ports, IPs and protocols we listen for
Port	36000
# Use these options to restrict which interfaces/protocols sshd will bind to
#ListenAddress ::
#ListenAddress 0.0.0.0
Protocol 2
# HostKeys for protocol version 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
#Privilege Separation is turned on for security
UsePrivilegeSeparation yes

# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval 3600
ServerKeyBits 768

# Logging
SyslogFacility AUTH
LogLevel INFO

# Authentication:
LoginGraceTime 120
PermitRootLogin no
StrictModes yes

RSAAuthentication yes
PubkeyAuthentication yes
#AuthorizedKeysFile	%h/.ssh/authorized_keys

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes
# For this to work you will also need host keys in /etc/ssh_known_hosts
RhostsRSAAuthentication no
# similar for protocol version 2
HostbasedAuthentication no
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

# Change to no to disable tunnelled clear text passwords
PasswordAuthentication yes

# Kerberos options
#KerberosAuthentication no
#KerberosGetAFSToken no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

#X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no

#MaxStartups 10:30:60
#Banner /etc/issue.net

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

#Subsystem sftp /usr/lib/openssh/sftp-server

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

MaxStartups 5

Subsystem sftp internal-sftp
Match group sftponly
   ChrootDirectory /home/%u
   X11Forwarding no
   AllowTcpForwarding no
   ForceCommand internal-sftp

改好之後存檔，離開vi文字編輯器
最後就是把SSH Server重新啟動
root@cubie:/etc/ssh# service ssh status
[ ok ] sshd is running.
root@cubie:/etc/ssh# service ssh restart
[ ok ] Restarting OpenBSD Secure Shell server: sshd.
root@cubie:/etc/ssh# service ssh status
[ ok ] sshd is running.
root@cubie:/etc/ssh# netstat -anp|grep ssh
tcp        0      0 0.0.0.0:36000           0.0.0.0:*               LISTEN      1826/sshd       
tcp        0      0 192.168.0.162:36000     192.168.0.12:40500      ESTABLISHED 11067/sshd: cubie [
tcp6       0      0 :::36000                :::*                    LISTEN      1826/sshd       
unix  2      [ ACC ]     STREAM     LISTENING     11190    11089/gnome-keyring /home/cubie/.cache/keyring-w8pWVN/ssh
unix  2      [ ACC ]     STREAM     LISTENING     11138    11062/ssh-agent     /tmp/ssh-XOSQgl4qaxAV/agent.11030
unix  3      [ ]         STREAM     CONNECTED     11987    11067/sshd: cubie [ 
unix  2      [ ]         DGRAM                    11961    11067/sshd: cubie [ 

這樣就是成功的重新啟動SSH Server了

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
15.打開FileZilla，使用「站台管理員」以用戶sftpuser01的身分sftp連線登入Cubian服務器

現在開始的動作都是在「工作機」上，也就是我的筆記型電腦上執行哦
我已經先使用Synaptic套件管理員，把FileZilla安裝好了
這是一個FTP客戶端程式，然後也包括sftp客戶端的功能
在工作機上以用戶anntony身分登入之後，打開FileZilla，選上方功能表的「檔案 > 站台管理員」
按下面的「新增站台（N）」按鈕，輸入連線的識別名稱是「sftpuser01@192.168.0.162」
右邊需要填寫的有：
主機名稱（H）：192.168.0.162
連接埠（P）：36000
協定（T）：SFTP - SSH File Transfer Protocol
登入型式（L）：詢問密碼
使用者（U）：sftpuser01
密碼（W）：

記得密碼那一欄要保持空白，然後在登入型式（L）的地方，要先選「一般」然後把「使用者（U）」輸入sftpuser01
然後把下方的「密碼（W）」那一欄清空，才有辦法在「登入型式（L）」選擇「詢問密碼」
全部填好之後，按下對話框最下方的「連線」
接著會跳出來這個小對話框要你輸入用戶sftpuser01的密碼
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
請輸入此伺服器的密碼：
名稱：　　sftpuser01@192.168.0.162
主機：　　192.168.0.162
使用者：　sftpuser01
密碼：　　_____________________________

　　□　 記住這次連線的密碼

　　[　確定（O）　]　　　[　取消（C）　]
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝

輸入服務器用戶sftpuser01的密碼之後，按下「確定（O）」
然後可以看到FileZilla軟體裡面有類似終端機輸出的文字訊息，寫著
狀態:	正在連線到 192.168.0.162:36000 ...
回應:	fzSftp started
指令:	open "sftpuser01@192.168.0.162" 36000
指令:	Pass: **********
狀態:	Connected to 192.168.0.162
狀態:	正在取得目錄列表...
指令:	pwd
回應:	Current directory is: "/"
指令:	ls
狀態:	Listing directory /
狀態:	計算伺服器的時區偏移量...
指令:	mtime "website"
回應:	1416232245
狀態:	時區偏移量: 伺服器: 0 秒. 本地端: 28800 秒. 相差: 28800 秒.
狀態:	成功取得目錄列表

看看右下方面板，如果你看到一個「遠端站台： /」
然後這個根目錄下面列出來的是我們稍早弄的
id_rsa
data-store
website
這些東西
（這裡用戶sftpuser01看到的根目錄 / 實際路徑是Cubian服務器上的/home/sftpuser01目錄）
那麼就是連線成功了，不要忘了我們這一次是使用密碼登入的
稍後要把id_rsa這個檔案，也就是服務器用戶sftpuser01的私鑰下載到工作機上

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊




＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
