l.安裝nginx服務器 + php-fpm

需要完成的工作列表：
1.安裝好nginx服務器，並設定成開機自動啟動的服務
2.安裝好php-fpm，並設定成開機自動啟動的服務
3.設定nginx.conf讓nginx服務器可以解釋*.php的檔案
4.修改nginx服務器預設的charset為utf-8

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
1.安裝好nginx服務器，並設定成開機自動啟動的服務

切換成root身分
$ sudo -i

更新套件庫
# apt-get update

安裝編譯需要的工具和函式庫
# apt-get install build-essential
# apt-get install libtool

切換目錄，待會兒下載的tar.gz都會放在這裡
# cd /usr/local/src

下載zlib、pcre、openssl原始碼的tar.gz包，然後解壓縮
# wget http://zlib.net/zlib-1.2.8.tar.gz
# tar -zxvf zlib-1.2.8.tar.gz

# wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.gz
# tar -zxvf pcre-8.36.tar.gz

# wget https://www.openssl.org/source/openssl-1.0.1j.tar.gz
# tar -zxvf openssl-1.0.1j.tar.gz

下載nginx的原始碼tar.gz，解壓縮之後，進入nginx-1.6.2目錄
# wget http://nginx.org/download/nginx-1.6.2.tar.gz
# tar -zxvf nginx-1.6.2.tar.gz
# cd nginx-1.6.2

查看一下有什麼configure options
# ./configure --help

然後./configure
# ./configure --prefix=/usr/local/nginx-1.6.2 \
--user=www-data \
--group=www-data \
--with-http_ssl_module \
--with-pcre=/usr/local/src/pcre-8.36 \
--with-zlib=/usr/local/src/zlib-1.2.8 \
--with-openssl=/usr/local/src/openssl-1.0.1j

如果沒有問題，終端機會像這樣回應
Configuration summary
  + using PCRE library: /usr/local/src/pcre-8.36
  + using OpenSSL library: /usr/local/src/openssl-1.0.1j
  + md5: using OpenSSL library
  + sha1: using OpenSSL library
  + using zlib library: /usr/local/src/zlib-1.2.8

  nginx path prefix: "/usr/local/nginx-1.6.2"
  nginx binary file: "/usr/local/nginx-1.6.2/sbin/nginx"
  nginx configuration prefix: "/usr/local/nginx-1.6.2/conf"
  nginx configuration file: "/usr/local/nginx-1.6.2/conf/nginx.conf"
  nginx pid file: "/usr/local/nginx-1.6.2/logs/nginx.pid"
  nginx error log file: "/usr/local/nginx-1.6.2/logs/error.log"
  nginx http access log file: "/usr/local/nginx-1.6.2/logs/access.log"
  nginx http client request body temporary files: "client_body_temp"
  nginx http proxy temporary files: "proxy_temp"
  nginx http fastcgi temporary files: "fastcgi_temp"
  nginx http uwsgi temporary files: "uwsgi_temp"
  nginx http scgi temporary files: "scgi_temp"

編譯
# make

安裝
# make install

這樣就把nginx安裝到/usr/local/nginx-1.6.2目錄了
可是在Cubian x1上面安裝nginx，我發現了一件讓我吐血的事
# cd /usr/local/nginx-1.6.2
# ls -al

終端機打印了
總計 24
drwxr-sr-x  6 root staff 4096 11月 22 00:26 .
drwxrwsr-x 11 root staff 4096 11月 22 01:04 ..
drwxr-sr-x  2 root staff 4096 11月 22 00:26 conf
drwxr-sr-x  2 root staff 4096 11月 22 00:26 html
drwxr-sr-x  2 root staff 4096 11月 22 00:26 logs
drwxr-sr-x  2 root staff 4096 11月 22 00:26 sbin

所有的目錄還有裡面裝的檔案，他們的群組都變成了staff
然後多了一個s的權限（我不再列出，你自已切進去執行ls -al自已瞧瞧）
我老實說好了
我根本不知道那個s的權限是幹什麼吃的
我想要的權限很簡單，就是
所有在/usr/local/nginx-1.6.2相關的檔案和目錄
擁有人都是root，然後群組都是www-data
沒有什麼（苟庇）s權限，檔案或是目錄的owner和同一個group都至少會有rw的權限
基於這樣的邏輯，我再執行了下列指令，修改權限
# cd /usr/local/
# chmod -R g-s ./nginx-1.6.2
# chmod -R g+w ./nginx-1.6.2
# chown -R root:www-data ./nginx-1.6.2

最後作一個Symbolic Link
# cd /usr/local/
# ln -s nginx-1.6.2 nginx

在啟動nginx之前，先給它搞一個啟動腳本，也就是init script
參考資料：
http://www.rackspace.com/knowledge_center/article/ubuntu-and-debian-adding-an-nginx-init-script

把下面的內容，另存成 /etc/init.d/nginx

#! /bin/sh
 
### BEGIN INIT INFO
# Provides:          nginx
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO
 
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/local/nginx/sbin/nginx
NAME=nginx
DESC=nginx
 
test -x $DAEMON || exit 0
 
# Include nginx defaults if available
if [ -f /etc/default/nginx ] ; then
    . /etc/default/nginx
fi
 
set -e
 
. /lib/lsb/init-functions
 
case "$1" in
  start)
    echo -n "Starting $DESC: "
    start-stop-daemon --start --quiet --pidfile /usr/local/nginx/logs/$NAME.pid \
        --exec $DAEMON -- $DAEMON_OPTS || true
    echo "$NAME."
    ;;
  stop)
    echo -n "Stopping $DESC: "
    start-stop-daemon --stop --quiet --pidfile /usr/local/nginx/logs/$NAME.pid \
        --exec $DAEMON || true
    echo "$NAME."
    ;;
  restart|force-reload)
    echo -n "Restarting $DESC: "
    start-stop-daemon --stop --quiet --pidfile \
        /usr/local/nginx/logs/$NAME.pid --exec $DAEMON || true
    sleep 1
    start-stop-daemon --start --quiet --pidfile \
        /usr/local/nginx/logs/$NAME.pid --exec $DAEMON -- $DAEMON_OPTS || true
    echo "$NAME."
    ;;
  reload)
      echo -n "Reloading $DESC configuration: "
      start-stop-daemon --stop --signal HUP --quiet --pidfile /usr/local/nginx/logs/$NAME.pid \
          --exec $DAEMON || true
      echo "$NAME."
      ;;
  status)
      status_of_proc -p /usr/local/nginx/logs/$NAME.pid "$DAEMON" nginx && exit 0 || exit $?
      ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart|reload|force-reload|status}" >&2
    exit 1
    ;;
esac
 
exit 0

不要忘記它的擁有人和群組都是root，權限值是755
# chown root:root /etc/init.d/nginx
# chmod 755 /etc/init.d/nginx

剛才搞了個啟動腳本/etc/init.d/nginx
現在你可以用這樣的指令啟動nginx
# service nginx start
或是
# /etc/init.d/nginx start
兩個指令是同效的

然後停止nginx就用
# service nginx stop
或是
# /etc/init.d/nginx stop

重新啟動就用
# service nginx restart
或是
# /etc/init.d/nginx restart

重新載入組態檔就用
# service nginx reload
或是
# /etc/init.d/nginx reload

如果要看現在nginx的啟動狀態，就執行
# service nginx status
或是
# /etc/init.d/nginx status

如果要查看nginx有沒有正常啟動
還可以這樣下指令
# ps aux | grep nginx

然後終端機會打印
root      9792  0.0  0.0   3728   616 ?        Ss   02:08   0:00 nginx: master process /usr/local/nginx/sbin/nginx
www-data  9793  0.0  0.0   3868  1228 ?        S    02:08   0:00 nginx: worker process      
root      9802  0.0  0.0   4028   764 pts/0    S+   02:13   0:00 grep nginx

這就表示nginx已經啟動
或是你也可以這樣下指令檢查
# netstat -anp|grep nginx

然後終端機會打印
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      9792/nginx      
unix  3      [ ]         STREAM     CONNECTED     122327   9792/nginx          
unix  3      [ ]         STREAM     CONNECTED     122326   9792/nginx 

這樣也是表示nginx已經啟動

有了init script啟動腳本（/etc/init.d/nginx）
接下來要設定開機的時候自動啟動nginx服務（第一次執行update-rc.d指令）
# update-rc.d -f nginx defaults

順便一提如果要讓nginx取消開機自動執行，指令是： 
# update-rc.d -f nginx disable

然後再打開就是
# update-rc.d -f nginx enable

重新開機之後，執行
# netstat -anp | grep nginx

終端機打印了
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      4265/nginx      
unix  3      [ ]         STREAM     CONNECTED     5111     4265/nginx          
unix  3      [ ]         STREAM     CONNECTED     5110     4265/nginx     

耶，這樣就完成了第一個工作
可以到筆記型電腦上，打開Firefox或是Chrome瀏覽器
然後在網址列輸入Cubian服務器的IP地址：
http://192.168.0.162

看看有沒有看到nginx server預設放置在
/usr/local/nginx/html/index.html
的首頁？

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

2.安裝好php-fpm，並設定成開機自動啟動的服務

接下來要安裝php-fpm

參考了php官網的文件
http://php.net/manual/en/install.unix.nginx.php

其他民間文件（這裡有示範/etc/init.d/php-fpm啟動腳本怎麼寫）
http://www.howtoforge.com/how-to-build-php-5.5-php-fpm-and-fastcgi-with-ioncube-loader-zend-opcache-and-apcu-for-ispconfig3-debian-wheezy

簡體中文文件
http://www.nginx.cn/231.html

先安裝依賴套件
# apt-get install build-essential
# apt-get install libfcgi-dev libfcgi0ldbl libjpeg62-dbg libmcrypt-dev libssl-dev libc-client2007e libc-client2007e-dev libxml2-dev
# apt-get install libbz2-dev
# apt-get install libpng12-dev
# apt-get install libgmp-dev
# apt-get install libreadline6-dev

接著我進入Cubian的mate圖形介面，到php官網，
把php-5.5.21.tar.gz下載到/usr/local/src目錄裡
連結在這裡
http://php.net/downloads.php
（我很想在終端機直接用wget就下載，可是不成功）

切換到/usr/local/src目錄
# cd /usr/local/src

稍早前的openssl-1.0.1j要編譯後，然後安裝
待會兒php的原始碼才有openssl的函式庫可以用
# cd openssl-1.0.1j
# ./config --prefix=/usr/local/openssl-1.0.1j
# make
# make test
# make install

另外有一個mcrypt的模組稍後也要編進php
所以這裡要先把mcrypt的函式庫編譯並安裝上
我一樣是在Cubian的mate圖形介面裡，
把mcrypt-2.6.8.tar.gz先下載到了/usr/local/src目錄裡
先安裝libmhash函式庫，這個用apt套件庫裡的就行了
# apt-get install libmhash*

然後就
# cd /usr/local/src
# tar zxvf mcrypt-2.6.8.tar.gz
# cd mcrypt-2.6.8
# ./configure --prefix=/usr/local/mcrypt-2.6.8 --disable-posix-threads
# make
# make check
# make install

接下來是php的安裝步驟
參考資料
http://howtolamp.com/lamp/php/5.5/installing/

解壓縮、切換目錄、組態、編譯、測試、安裝
# cd /usr/local/src
# tar zxvf php-5.5.21.tar.gz
# cd php-5.5.21

把所有的configure選項列出然後存在/tmp/conf-options.txt裡我瞧瞧
# ./configure -h > /tmp/conf-options.txt
# vi /tmp/conf-options.txt

上工了
# ./configure --prefix=/usr/local/php-5.5.21 \
--enable-opcache --enable-fpm \
--with-mysql --with-mysqli --with-pdo-mysql --with-mysql-sock=/run/mysqld/mysqld.sock \
--with-openssl --with-openssl-dir=/usr/local/openssl-1.0.1j --with-kerberos \
--with-mhash --with-mcrypt=/usr/local/mcrypt-2.6.8 --enable-bcmath --with-gmp \
--enable-shmop --enable-sockets --enable-sysvmsg --enable-sysvsem --enable-sysvshm \
--enable-soap --enable-wddx --with-xmlrpc --with-readline --enable-calendar \
--with-gettext --enable-mbstring \
--with-zlib --with-zlib-dir=/usr/local/src/zlib-1.2.8 \
--with-bz2 --enable-zip --enable-exif --with-gd

./configure的過程也許不會那麼順利，出現錯誤訊息的時候
通常是忘了安裝什麼函式庫，可以參考這個網友寫的
http://lyp.cn/350_how-to-fix-php-compile-errors

這是configure成功之後的最後一小段輸出
Generating files
configure: creating ./config.status
creating main/internal_functions.c
creating main/internal_functions_cli.c
+--------------------------------------------------------------------+
| License:                                                           |
| This software is subject to the PHP License, available in this     |
| distribution in the file LICENSE.  By continuing this installation |
| process, you are bound by the terms of this license agreement.     |
| If you do not agree with the terms of this license, you must abort |
| the installation process at this point.                            |
+--------------------------------------------------------------------+

Thank you for using PHP.

config.status: creating php5.spec
config.status: creating main/build-defs.h
config.status: creating scripts/phpize
config.status: creating scripts/man1/phpize.1
config.status: creating scripts/php-config
config.status: creating scripts/man1/php-config.1
config.status: creating sapi/cli/php.1
config.status: creating sapi/fpm/php-fpm.conf
config.status: creating sapi/fpm/init.d.php-fpm
config.status: creating sapi/fpm/php-fpm.service
config.status: creating sapi/fpm/php-fpm.8
config.status: creating sapi/fpm/status.html
config.status: creating sapi/cgi/php-cgi.1
config.status: creating ext/phar/phar.1
config.status: creating ext/phar/phar.phar.1
config.status: creating main/php_config.h
config.status: executing default commands
root@cubie:/usr/local/src/php-5.5.21# 

編譯
# make

編譯完成，看起來是成功的，但是最後幾行的輸出讓我有點毛毛的
ml2 -lxml2 -lcrypt -lxml2 -lxml2 -lxml2 -lxml2 -lxml2 -lssl -lcrypto -lcrypt  -o sapi/cgi/php-cgi
Generating phar.php
Generating phar.phar
PEAR package PHP_Archive not installed: generated phar will require PHP's phar extension be enabled.
directorytreeiterator.inc
pharcommand.inc
invertedregexiterator.inc
directorygraphiterator.inc
clicommand.inc
phar.inc

Build complete.
Don't forget to run 'make test'.
它說我沒安裝PEAR package PHP_Archive
但是上次php-5.5.19的時候我也沒裝，一樣活得好好的
暫時忽略它，如果真的有什麼問題
大不了再重新編譯

然後老老實實測試一下
# make test

測試的結果最後幾行漆8毛這樣是有過還沒過？
Bug #67296 (filter_input doesn't validate variables) [ext/filter/tests/bug49184.phpt]  XFAIL REASON: See Bug #49184
zend multibyte (2) [ext/mbstring/tests/zend_multibyte-02.phpt]  XFAIL REASON: https://bugs.php.net/bug.php?id=66582
zend multibyte (6) [ext/mbstring/tests/zend_multibyte-06.phpt]  XFAIL REASON: https://bugs.php.net/bug.php?id=66582
zend multibyte (7) [ext/mbstring/tests/zend_multibyte-07.phpt]  XFAIL REASON: https://bugs.php.net/bug.php?id=66582
zend multibyte (9) [ext/mbstring/tests/zend_multibyte-09.phpt]  XFAIL REASON: https://bugs.php.net/bug.php?id=66582
Bug #45712 (NaN/INF comparison) [ext/standard/tests/math/bug45712.phpt]  XFAIL REASON: Bug 45712 not fixed yet.
=====================================================================

=====================================================================
FAILED TEST SUMMARY
---------------------------------------------------------------------
function with many parameters [tests/func/010.phpt]
Bug #41523 (strtotime('0000-00-00 00:00:00') is parsed as 1999-11-30) (32 bit) [ext/date/tests/bug41523.phpt]
Test getdate() function : usage variation - Passing high positive and negative float values to timestamp. [ext/date/tests/getdate_variation7.phpt]
Test localtime() function : usage variation - Passing higher positive and negetive float values to timestamp. [ext/date/tests/localtime_variation3.phpt]
Bug #66731: file: extensive backtraking [ext/fileinfo/tests/cve-2014-3538.phpt]
Testing xpath() with invalid XML [ext/simplexml/tests/SimpleXMLElement_xpath.phpt]
Multicast support: IPv4 receive options [ext/sockets/tests/mcast_ipv4_recv.phpt]
recvmsg(): receive SCM_CREDENTIALS messages [ext/sockets/tests/socket_cmsg_rights.phpt]
socket_import_stream: Test with multicasting [ext/sockets/tests/socket_import_stream-3.phpt]
Bug #64146 (serialize incorrectly saving objects when they are cloned) [ext/standard/tests/serialize/bug64146.phpt]
=====================================================================

=====================================================================
WARNED TEST SUMMARY
---------------------------------------------------------------------
zend multibyte (8) [ext/mbstring/tests/zend_multibyte-08.phpt] (warn: XFAIL section but test passes)
=====================================================================

You may have found a problem in PHP.
This report can be automatically sent to the PHP QA team at
http://qa.php.net/reports and http://news.php.net/php.qa.reports
This gives us a better understanding of PHP's behavior.
If you don't want to send the report immediately you can choose
option "s" to save it.	You can then email it to qa-reports@lists.php.net later.
Do you want to send this report now? [Yns]: s
Please send /usr/local/src/php-5.5.21/php_test_results_20150127_1605.txt to qa-reports@lists.php.net manually, thank you.
root@cubie:/usr/local/src/php-5.5.21# 

沒過也沒辦法，代碼不是我寫的，期待下一個版本這些bug會修正
最後是安裝
# make install

執行make install安裝時終端機的輸出
Installing shared extensions:     /usr/local/php-5.5.21/lib/php/extensions/no-debug-non-zts-20121212/
Installing PHP CLI binary:        /usr/local/php-5.5.21/bin/
Installing PHP CLI man page:      /usr/local/php-5.5.21/php/man/man1/
Installing PHP FPM binary:        /usr/local/php-5.5.21/sbin/
Installing PHP FPM config:        /usr/local/php-5.5.21/etc/
Installing PHP FPM man page:      /usr/local/php-5.5.21/php/man/man8/
Installing PHP FPM status page:      /usr/local/php-5.5.21/php/php/fpm/
Installing PHP CGI binary:        /usr/local/php-5.5.21/bin/
Installing PHP CGI man page:      /usr/local/php-5.5.21/php/man/man1/
Installing build environment:     /usr/local/php-5.5.21/lib/php/build/
Installing header files:          /usr/local/php-5.5.21/include/php/
Installing helper programs:       /usr/local/php-5.5.21/bin/
  program: phpize
  program: php-config
Installing man pages:             /usr/local/php-5.5.21/php/man/man1/
  page: phpize.1
  page: php-config.1
Installing PEAR environment:      /usr/local/php-5.5.21/lib/php/
[PEAR] Archive_Tar    - installed: 1.3.12
[PEAR] Console_Getopt - installed: 1.3.1
[PEAR] Structures_Graph- installed: 1.0.4
[PEAR] XML_Util       - installed: 1.2.3
[PEAR] PEAR           - installed: 1.9.5
Wrote PEAR system config file at: /usr/local/php-5.5.21/etc/pear.conf
You may want to add: /usr/local/php-5.5.21/lib/php to your php.ini include_path
/usr/local/src/php-5.5.21/build/shtool install -c ext/phar/phar.phar /usr/local/php-5.5.21/bin
ln -s -f /usr/local/php-5.5.21/bin/phar.phar /usr/local/php-5.5.21/bin/phar
Installing PDO headers:          /usr/local/php-5.5.21/include/php/ext/pdo/
root@cubie:/usr/local/src/php-5.5.21#

回到/usr/local目錄，建立一個Symbolic Link指到php-5.5.21目錄
# cd /usr/local
# ln -s php-5.5.21 php

複製這些檔案到它們該去的地方
# cp /usr/local/src/php-5.5.21/php.ini-development /usr/local/php/lib/php.ini
# cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf
# cp /usr/local/php/sbin/php-fpm /usr/local/sbin

修改php.ini
# vi /usr/local/php/lib/php.ini

把這一行
;cgi.fix_pathinfo=1
改成這樣
cgi.fix_pathinfo=0

還有這一行
;default_charset = "UTF-8"
改成這樣
default_charset = "UTF-8"

再設定Timezone
date.timezone = Asia/Taipei

時區的合法的值可以參考php官方網頁
連結在這裡
http://php.net/manual/en/timezones.php

設定php服務器在地球上所在地的經緯度
我先在Google地圖上輸入「三芝國中」
然後在地點的紅色水球上面按下右鍵選「這是那裡」
我得到座標
25.259177, 121.501791
(25°15'33.0"N 121°30'06.5"E)
所以在php.ini裡要有這兩行設定
date.default_latitude = 25.259177
date.default_longitude = 121.501791

再來是mysqli的相關設定
mysqli.default_socket = /run/mysqld/mysqld.sock
mysqli.default_host = localhost
mysqli.default_user = mysql

這是pdo_mysql的相關設定
pdo_mysql.default_socket = /run/mysqld/mysqld.sock

然後存檔離開vi文字編輯器

接著修改php-fpm.conf
# vi /usr/local/php/etc/php-fpm.conf

把user和group都改成www-data
user = www-data
group = www-data
改好就存檔，離開vi文字編輯器

現在可以啟動php-fpm了
執行前再一次確認我是執行那個路徑的php-fpm
# which php-fpm

終端機打印了
/usr/local/sbin/php-fpm

執行吧啦嘿
# php-fpm

然後看一下是不是真的執行了？
# ps aux |grep php-fpm

終端機打印了
root     16161  0.0  0.1  15892  2480 ?        Ss   16:01   0:00 php-fpm: master process (/usr/local/php-5.5.19/etc/php-fpm.conf)
www-data 16170  0.0  0.1  15892  2104 ?        S    16:01   0:00 php-fpm: pool www
www-data 16171  0.0  0.1  15892  2104 ?        S    16:01   0:00 php-fpm: pool www
root     17910  0.0  0.0   4032   772 pts/0    S+   16:01   0:00 grep php-fpm

這樣就確認php-fpm真的啟動了，然後先結束掉php-fpm程序
殺掉master process，後面的16170和16171都會自動關閉掉
# kill 16161

再看一下有沒有清除乾淨？
# ps aux |grep php-fpm

終端機打印了
root     31606  0.0  0.0   4028   764 pts/0    S+   16:28   0:00 grep php-fpm

很好，這樣就恢復到沒有執行php-fpm之前的狀態
現在要給php-fpm作一個init script
# cp /usr/local/src/php-5.5.19/sapi/fpm/init.d.php-fpm.in /etc/init.d/php-fpm
# chmod 755 /etc/init.d/php-fpm

再次修改php-fpm.conf
# vi /usr/local/php/etc/php-fpm.conf

把預設的關於pid的這一行
[global]
; Pid file
; Note: the default prefix is /usr/local/php-5.5.19/var
; Default Value: none
;pid = run/php-fpm.pid

變成這樣
pid = run/php-fpm.pid

然後存檔，離開

接著修改/etc/init.d/php-fpm
# vi /etc/init.d/php-fpm

只要改這5行
#prefix=@prefix@
#exec_prefix=@exec_prefix@

php_fpm_BIN=/usr/local/sbin/php-fpm
php_fpm_CONF=/usr/local/php/etc/php-fpm.conf
php_fpm_PID=/usr/local/php/var/run/php-fpm.pid
改完存檔，離開

現在可以使用下列指令了，耶比

啟動php
# /etc/init.d/php-fpm start

停止php
# /etc/init.d/php-fpm stop

重新啟動php
# /etc/init.d/php-fpm restart

查看php服務的狀態
# /etc/init.d/php-fpm status

也可以這樣下指令，意義是一樣的
啟動php
# service php-fpm start

停止php
# service php-fpm stop

重新啟動php
# service php-fpm restart

查看php服務的狀態
# service php-fpm status

最後是要設定成開機自動啟動php服務
# update-rc.d php-fpm defaults

接著重新開機之後，執行下面的指令，看看php-fpm有沒有變成開機自動啟動的服務
# ps aux | grep php-fpm

終端機打印了
root      2315  0.0  0.1  13584  2480 ?        Ss   16:57   0:00 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)                                                                
www-data  2321  0.0  0.1  13584  2100 ?        S    16:57   0:00 php-fpm: pool www                                                                                                        
www-data  2322  0.0  0.1  13584  2104 ?        S    16:57   0:00 php-fpm: pool www                                                                                                        
root      5645  0.0  0.0   4032   772 pts/0    S+   16:58   0:00 grep php-fpm

或是這樣檢查
# netstat -anp | grep php-fpm

終端機打印了
tcp        0      0 127.0.0.1:9000          0.0.0.0:*               LISTEN      2315/php-fpm.conf)
unix  3      [ ]         STREAM     CONNECTED     3599     2315/php-fpm.conf)  
unix  3      [ ]         STREAM     CONNECTED     3598     2315/php-fpm.conf)

恭喜你，這樣就完成了開機之後自動執行php-fpm服務

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
3.設定nginx.conf讓nginx服務器可以解釋*.php的檔案

在網站根目錄裡面產生index.php，內容是phpinfo()函式的打印結果
# echo "<?php phpinfo(); ?>" >> /usr/local/nginx/html/index.php

修改nginx.conf
# vi /usr/local/nginx/conf/nginx.conf

有兩個區塊需要修改，一個是網站的根目錄請改成這樣
第一順位會採用網站根目錄下的index.php當作網站的首頁
        location / {
            root   html;
            index  index.php index.html index.htm;
        }

然後緊接著上一個區塊，再加入一個區塊來解釋副檔名是.php的檔案
        location ~* \.php$ {
             fastcgi_index   index.php;
             fastcgi_pass    127.0.0.1:9000;
             include         fastcgi_params;
             fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
             fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
        }

改好就存檔，離開vi文字編輯器
可以使用以下的指令來檢查剛才修改後的nginx.conf組態檔文法是否正確？執行
# cd /usr/local/nginx/
# sbin/nginx -t -c conf/nginx.conf

如果你的nginx.conf文法是正確的，那麼終端機會輸出這樣的訊息
nginx: the configuration file /usr/local/nginx-1.6.2/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx-1.6.2/conf/nginx.conf test is successful
（如果輸出訊息不是上面這樣，那怎麼辦？還用問？當然是找出你剛才改的那個區塊，看看有沒有打錯什麼？打錯了字或是多打少打大括號之類的…）

檢查過nginx.conf沒有問題，就重新啟動nginx服務，讓剛才的設定值生效
# service nginx restart

接著一樣到筆記型電腦上，打開Firefox或是Chrome瀏覽器，在網址列輸入Cubian服務器的IP地址
http://192.168.0.162

這時候你應該就會看到phpinfo()函式所產生的index.php頁面了

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
4.修改nginx服務器預設的charset為utf-8

# vi /usr/local/nginx/conf/nginx.conf

http {
          (some other settings ...)

          charset utf-8;

          (some other settings ...)
}

改好之後檢查一下設定檔的正確性，看看有沒有打錯字還是把指令插到了錯誤的區塊？
# cd /usr/local/nginx
# sbin/nginx -t -c conf/nginx.conf

沒什麼意外的話，會看到這個訊息，這表示你的設定檔是語法正確的
nginx: the configuration file /usr/local/nginx-1.6.2/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx-1.6.2/conf/nginx.conf test is successful

重新啟動一下nginx服務器
# service nginx restart

看一下是不是重啟動成功了？
# service nginx status

或是
# netstat -anp | grep nginx

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊

打完收工









＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
附錄之：整個地球只有我遇到這個問題嗎？幹
因為我要把mbstring的功能編譯進php裡
而mbstring需要一個函式庫叫作libmbfl
它的原始碼放在github上面，所以先把它拉下來編譯並安裝
# apt-get install automake
# apt-get install gawk
# cd /usr/local/src
# git clone https://github.com/moriyoshi/libmbfl.git
# cd libmbfl
# ./buildconf
# ./configure -h
# ./configure --prefix=/usr/local/libmbfl
# make
# make install
經過以上的步驟後
應該就會將libmbfl安裝在/usr/local/libmbfl目錄裡
理論上是這樣
但是只能運行到make
就出現了錯誤訊息
Making all in mbfl
make[2]: Entering directory `/usr/local/src/libmbfl/mbfl'
gawk -v TABLE_NAME=mbfl_eaw_table -f mk_eaw_tbl.awk EastAsianWidth.txt > eaw_table.h
gawk: mk_eaw_tbl.awk:13: fatal: cannot open file `EastAsianWidth.txt' for reading (No such file or directory)
make[2]: *** [eaw_table.h] Error 2
make[2]: Leaving directory `/usr/local/src/libmbfl/mbfl'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/usr/local/src/libmbfl'
make: *** [all] Error 2
root@cubie:/usr/local/src/libmbfl#
上網用Google搜尋gawk: mk_eaw_tbl.awk:13: fatal: cannot open file `EastAsianWidth.txt' 
只有兩個頁面
投降
幹幹幹幹幹
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
我想在php的./configure指令裡，加上--with-curl
所以我必須要先安裝上curl
但是失敗了，暫時作罷
以下是當時安裝的步驟及錯誤訊息

curl也要安裝，去官網下載
網址是
http://curl.haxx.se/download.html
安裝的官方參考網頁是
http://curl.haxx.se/docs/install.html
下載得到的
curl-7.40.0.tar.gz
放在/usr/local/src目錄下
然後
# cd /usr/local/src
# tar zxvf ./curl-7.40.0.tar.gz
# cd curl-7.40.0
# ./configure --prefix=/usr/local/curl-7.40.0 --with-ssl=/usr/local/openssl-1.0.1j
# make
# make install

哇靠
/usr/bin/ld: /usr/local/openssl-1.0.1j/lib/libssl.a(s2_clnt.o): relocation R_ARM_THM_MOVW_ABS_NC against `a local symbol' can not be used when making a shared object; recompile with -fPIC
/usr/local/openssl-1.0.1j/lib/libssl.a: could not read symbols: Bad value
collect2: ld returned 1 exit status
make[2]: *** [libcurl.la] Error 1
make[2]: Leaving directory `/usr/local/src/curl-7.40.0/lib'
make[1]: *** [all] Error 2
make[1]: Leaving directory `/usr/local/src/curl-7.40.0/lib'
make: *** [all-recursive] Error 1

以
lib/libssl.a: could not read symbols: Bad value
當作關鍵字Google搜尋之後
發現這個網友和我遇到一樣的問題
http://qing.blog.sina.com.cn/tj/44bf0603330023r5.html
所以要重新編譯openssl
我懶得試了
先拔掉--with-curl先把php編出來再說

＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
